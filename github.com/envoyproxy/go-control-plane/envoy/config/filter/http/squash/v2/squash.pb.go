// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/filter/http/squash/v2/squash.proto

package squashv2

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [#next-free-field: 6]
type Squash struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the cluster that hosts the Squash server.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// When the filter requests the Squash server to create a DebugAttachment, it will use this
	// structure as template for the body of the request. It can contain reference to environment
	// variables in the form of '{{ ENV_VAR_NAME }}'. These can be used to provide the Squash server
	// with more information to find the process to attach the debugger to. For example, in a
	// Istio/k8s environment, this will contain information on the pod:
	//
	// .. code-block:: json
	//
	//	{
	//	  "spec": {
	//	    "attachment": {
	//	      "pod": "{{ POD_NAME }}",
	//	      "namespace": "{{ POD_NAMESPACE }}"
	//	    },
	//	    "match_request": true
	//	  }
	//	}
	//
	// (where POD_NAME, POD_NAMESPACE are configured in the pod via the Downward API)
	AttachmentTemplate *structpb.Struct `protobuf:"bytes,2,opt,name=attachment_template,json=attachmentTemplate,proto3" json:"attachment_template,omitempty"`
	// The timeout for individual requests sent to the Squash cluster. Defaults to 1 second.
	RequestTimeout *durationpb.Duration `protobuf:"bytes,3,opt,name=request_timeout,json=requestTimeout,proto3" json:"request_timeout,omitempty"`
	// The total timeout Squash will delay a request and wait for it to be attached. Defaults to 60
	// seconds.
	AttachmentTimeout *durationpb.Duration `protobuf:"bytes,4,opt,name=attachment_timeout,json=attachmentTimeout,proto3" json:"attachment_timeout,omitempty"`
	// Amount of time to poll for the status of the attachment object in the Squash server
	// (to check if has been attached). Defaults to 1 second.
	AttachmentPollPeriod *durationpb.Duration `protobuf:"bytes,5,opt,name=attachment_poll_period,json=attachmentPollPeriod,proto3" json:"attachment_poll_period,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Squash) Reset() {
	*x = Squash{}
	mi := &file_envoy_config_filter_http_squash_v2_squash_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Squash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Squash) ProtoMessage() {}

func (x *Squash) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_http_squash_v2_squash_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Squash.ProtoReflect.Descriptor instead.
func (*Squash) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_http_squash_v2_squash_proto_rawDescGZIP(), []int{0}
}

func (x *Squash) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Squash) GetAttachmentTemplate() *structpb.Struct {
	if x != nil {
		return x.AttachmentTemplate
	}
	return nil
}

func (x *Squash) GetRequestTimeout() *durationpb.Duration {
	if x != nil {
		return x.RequestTimeout
	}
	return nil
}

func (x *Squash) GetAttachmentTimeout() *durationpb.Duration {
	if x != nil {
		return x.AttachmentTimeout
	}
	return nil
}

func (x *Squash) GetAttachmentPollPeriod() *durationpb.Duration {
	if x != nil {
		return x.AttachmentPollPeriod
	}
	return nil
}

var File_envoy_config_filter_http_squash_v2_squash_proto protoreflect.FileDescriptor

const file_envoy_config_filter_http_squash_v2_squash_proto_rawDesc = "" +
	"\n" +
	"/envoy/config/filter/http/squash/v2/squash.proto\x12\"envoy.config.filter.http.squash.v2\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1eudpa/annotations/migrate.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xd4\x02\n" +
	"\x06Squash\x12!\n" +
	"\acluster\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\acluster\x12H\n" +
	"\x13attachment_template\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x12attachmentTemplate\x12B\n" +
	"\x0frequest_timeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x0erequestTimeout\x12H\n" +
	"\x12attachment_timeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x11attachmentTimeout\x12O\n" +
	"\x16attachment_poll_period\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x14attachmentPollPeriodB\xcc\x01\xf2\x98\xfe\x8f\x05)\x12'envoy.extensions.filters.http.squash.v3\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	"0io.envoyproxy.envoy.config.filter.http.squash.v2B\vSquashProtoP\x01ZRgithub.com/envoyproxy/go-control-plane/envoy/config/filter/http/squash/v2;squashv2b\x06proto3"

var (
	file_envoy_config_filter_http_squash_v2_squash_proto_rawDescOnce sync.Once
	file_envoy_config_filter_http_squash_v2_squash_proto_rawDescData []byte
)

func file_envoy_config_filter_http_squash_v2_squash_proto_rawDescGZIP() []byte {
	file_envoy_config_filter_http_squash_v2_squash_proto_rawDescOnce.Do(func() {
		file_envoy_config_filter_http_squash_v2_squash_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_filter_http_squash_v2_squash_proto_rawDesc), len(file_envoy_config_filter_http_squash_v2_squash_proto_rawDesc)))
	})
	return file_envoy_config_filter_http_squash_v2_squash_proto_rawDescData
}

var file_envoy_config_filter_http_squash_v2_squash_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_config_filter_http_squash_v2_squash_proto_goTypes = []any{
	(*Squash)(nil),              // 0: envoy.config.filter.http.squash.v2.Squash
	(*structpb.Struct)(nil),     // 1: google.protobuf.Struct
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
}
var file_envoy_config_filter_http_squash_v2_squash_proto_depIdxs = []int32{
	1, // 0: envoy.config.filter.http.squash.v2.Squash.attachment_template:type_name -> google.protobuf.Struct
	2, // 1: envoy.config.filter.http.squash.v2.Squash.request_timeout:type_name -> google.protobuf.Duration
	2, // 2: envoy.config.filter.http.squash.v2.Squash.attachment_timeout:type_name -> google.protobuf.Duration
	2, // 3: envoy.config.filter.http.squash.v2.Squash.attachment_poll_period:type_name -> google.protobuf.Duration
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_envoy_config_filter_http_squash_v2_squash_proto_init() }
func file_envoy_config_filter_http_squash_v2_squash_proto_init() {
	if File_envoy_config_filter_http_squash_v2_squash_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_filter_http_squash_v2_squash_proto_rawDesc), len(file_envoy_config_filter_http_squash_v2_squash_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_filter_http_squash_v2_squash_proto_goTypes,
		DependencyIndexes: file_envoy_config_filter_http_squash_v2_squash_proto_depIdxs,
		MessageInfos:      file_envoy_config_filter_http_squash_v2_squash_proto_msgTypes,
	}.Build()
	File_envoy_config_filter_http_squash_v2_squash_proto = out.File
	file_envoy_config_filter_http_squash_v2_squash_proto_goTypes = nil
	file_envoy_config_filter_http_squash_v2_squash_proto_depIdxs = nil
}
