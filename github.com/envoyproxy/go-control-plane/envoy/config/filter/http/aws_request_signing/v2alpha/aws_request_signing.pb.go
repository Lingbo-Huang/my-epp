// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/filter/http/aws_request_signing/v2alpha/aws_request_signing.proto

package v2alpha

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Top level configuration for the AWS request signing filter.
type AwsRequestSigning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The `service namespace
	// <https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces>`_
	// of the HTTP endpoint.
	//
	// Example: s3
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// The `region <https://docs.aws.amazon.com/general/latest/gr/rande.html>`_ hosting the HTTP
	// endpoint.
	//
	// Example: us-west-2
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// Indicates that before signing headers, the host header will be swapped with
	// this value. If not set or empty, the original host header value
	// will be used and no rewrite will happen.
	//
	// Note: this rewrite affects both signing and host header forwarding. However, this
	// option shouldn't be used with
	// :ref:`HCM host rewrite <envoy_api_field_route.RouteAction.host_rewrite>` given that the
	// value set here would be used for signing whereas the value set in the HCM would be used
	// for host header forwarding which is not the desired outcome.
	HostRewrite   string `protobuf:"bytes,3,opt,name=host_rewrite,json=hostRewrite,proto3" json:"host_rewrite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsRequestSigning) Reset() {
	*x = AwsRequestSigning{}
	mi := &file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsRequestSigning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsRequestSigning) ProtoMessage() {}

func (x *AwsRequestSigning) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsRequestSigning.ProtoReflect.Descriptor instead.
func (*AwsRequestSigning) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescGZIP(), []int{0}
}

func (x *AwsRequestSigning) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *AwsRequestSigning) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AwsRequestSigning) GetHostRewrite() string {
	if x != nil {
		return x.HostRewrite
	}
	return ""
}

var File_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto protoreflect.FileDescriptor

const file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDesc = "" +
	"\n" +
	"Nenvoy/config/filter/http/aws_request_signing/v2alpha/aws_request_signing.proto\x124envoy.config.filter.http.aws_request_signing.v2alpha\x1a\x1eudpa/annotations/migrate.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\x83\x01\n" +
	"\x11AwsRequestSigning\x12*\n" +
	"\fservice_name\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\vserviceName\x12\x1f\n" +
	"\x06region\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\x06region\x12!\n" +
	"\fhost_rewrite\x18\x03 \x01(\tR\vhostRewriteB\xff\x01\xf2\x98\xfe\x8f\x056\x124envoy.extensions.filters.http.aws_request_signing.v3\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	"Bio.envoyproxy.envoy.config.filter.http.aws_request_signing.v2alphaB\x16AwsRequestSigningProtoP\x01Z[github.com/envoyproxy/go-control-plane/envoy/config/filter/http/aws_request_signing/v2alphab\x06proto3"

var (
	file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescOnce sync.Once
	file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescData []byte
)

func file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescGZIP() []byte {
	file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescOnce.Do(func() {
		file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDesc), len(file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDesc)))
	})
	return file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDescData
}

var file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_goTypes = []any{
	(*AwsRequestSigning)(nil), // 0: envoy.config.filter.http.aws_request_signing.v2alpha.AwsRequestSigning
}
var file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_init()
}
func file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_init() {
	if File_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDesc), len(file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_goTypes,
		DependencyIndexes: file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_depIdxs,
		MessageInfos:      file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_msgTypes,
	}.Build()
	File_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto = out.File
	file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_goTypes = nil
	file_envoy_config_filter_http_aws_request_signing_v2alpha_aws_request_signing_proto_depIdxs = nil
}
