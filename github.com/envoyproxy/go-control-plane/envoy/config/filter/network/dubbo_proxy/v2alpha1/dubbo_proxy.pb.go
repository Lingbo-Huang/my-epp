// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto

package v2alpha1

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Dubbo Protocol types supported by Envoy.
type ProtocolType int32

const (
	// the default protocol.
	ProtocolType_Dubbo ProtocolType = 0
)

// Enum value maps for ProtocolType.
var (
	ProtocolType_name = map[int32]string{
		0: "Dubbo",
	}
	ProtocolType_value = map[string]int32{
		"Dubbo": 0,
	}
)

func (x ProtocolType) Enum() *ProtocolType {
	p := new(ProtocolType)
	*p = x
	return p
}

func (x ProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_enumTypes[0].Descriptor()
}

func (ProtocolType) Type() protoreflect.EnumType {
	return &file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_enumTypes[0]
}

func (x ProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolType.Descriptor instead.
func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescGZIP(), []int{0}
}

// Dubbo Serialization types supported by Envoy.
type SerializationType int32

const (
	// the default serialization protocol.
	SerializationType_Hessian2 SerializationType = 0
)

// Enum value maps for SerializationType.
var (
	SerializationType_name = map[int32]string{
		0: "Hessian2",
	}
	SerializationType_value = map[string]int32{
		"Hessian2": 0,
	}
)

func (x SerializationType) Enum() *SerializationType {
	p := new(SerializationType)
	*p = x
	return p
}

func (x SerializationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerializationType) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_enumTypes[1].Descriptor()
}

func (SerializationType) Type() protoreflect.EnumType {
	return &file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_enumTypes[1]
}

func (x SerializationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SerializationType.Descriptor instead.
func (SerializationType) EnumDescriptor() ([]byte, []int) {
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescGZIP(), []int{1}
}

// [#next-free-field: 6]
type DubboProxy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The human readable prefix to use when emitting statistics.
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// Configure the protocol used.
	ProtocolType ProtocolType `protobuf:"varint,2,opt,name=protocol_type,json=protocolType,proto3,enum=envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType" json:"protocol_type,omitempty"`
	// Configure the serialization protocol used.
	SerializationType SerializationType `protobuf:"varint,3,opt,name=serialization_type,json=serializationType,proto3,enum=envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType" json:"serialization_type,omitempty"`
	// The route table for the connection manager is static and is specified in this property.
	RouteConfig []*RouteConfiguration `protobuf:"bytes,4,rep,name=route_config,json=routeConfig,proto3" json:"route_config,omitempty"`
	// A list of individual Dubbo filters that make up the filter chain for requests made to the
	// Dubbo proxy. Order matters as the filters are processed sequentially. For backwards
	// compatibility, if no dubbo_filters are specified, a default Dubbo router filter
	// (`envoy.filters.dubbo.router`) is used.
	DubboFilters  []*DubboFilter `protobuf:"bytes,5,rep,name=dubbo_filters,json=dubboFilters,proto3" json:"dubbo_filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DubboProxy) Reset() {
	*x = DubboProxy{}
	mi := &file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DubboProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DubboProxy) ProtoMessage() {}

func (x *DubboProxy) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DubboProxy.ProtoReflect.Descriptor instead.
func (*DubboProxy) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *DubboProxy) GetStatPrefix() string {
	if x != nil {
		return x.StatPrefix
	}
	return ""
}

func (x *DubboProxy) GetProtocolType() ProtocolType {
	if x != nil {
		return x.ProtocolType
	}
	return ProtocolType_Dubbo
}

func (x *DubboProxy) GetSerializationType() SerializationType {
	if x != nil {
		return x.SerializationType
	}
	return SerializationType_Hessian2
}

func (x *DubboProxy) GetRouteConfig() []*RouteConfiguration {
	if x != nil {
		return x.RouteConfig
	}
	return nil
}

func (x *DubboProxy) GetDubboFilters() []*DubboFilter {
	if x != nil {
		return x.DubboFilters
	}
	return nil
}

// DubboFilter configures a Dubbo filter.
type DubboFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the filter to instantiate. The name must match a supported
	// filter.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filter specific configuration which depends on the filter being
	// instantiated. See the supported filters for further documentation.
	Config        *anypb.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DubboFilter) Reset() {
	*x = DubboFilter{}
	mi := &file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DubboFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DubboFilter) ProtoMessage() {}

func (x *DubboFilter) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DubboFilter.ProtoReflect.Descriptor instead.
func (*DubboFilter) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *DubboFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DubboFilter) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto protoreflect.FileDescriptor

const file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDesc = "" +
	"\n" +
	"Benvoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto\x120envoy.config.filter.network.dubbo_proxy.v2alpha1\x1a<envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto\x1a\x19google/protobuf/any.proto\x1a\x1eudpa/annotations/migrate.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xf0\x03\n" +
	"\n" +
	"DubboProxy\x12(\n" +
	"\vstat_prefix\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\n" +
	"statPrefix\x12m\n" +
	"\rprotocol_type\x18\x02 \x01(\x0e2>.envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolTypeB\b\xfaB\x05\x82\x01\x02\x10\x01R\fprotocolType\x12|\n" +
	"\x12serialization_type\x18\x03 \x01(\x0e2C.envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationTypeB\b\xfaB\x05\x82\x01\x02\x10\x01R\x11serializationType\x12g\n" +
	"\froute_config\x18\x04 \x03(\v2D.envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfigurationR\vrouteConfig\x12b\n" +
	"\rdubbo_filters\x18\x05 \x03(\v2=.envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilterR\fdubboFilters\"X\n" +
	"\vDubboFilter\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\x04name\x12,\n" +
	"\x06config\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x06config*\x19\n" +
	"\fProtocolType\x12\t\n" +
	"\x05Dubbo\x10\x00*!\n" +
	"\x11SerializationType\x12\f\n" +
	"\bHessian2\x10\x00B\xeb\x01\xf2\x98\xfe\x8f\x051\x12/envoy.extensions.filters.network.dubbo_proxy.v3\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	">io.envoyproxy.envoy.config.filter.network.dubbo_proxy.v2alpha1B\x0fDubboProxyProtoP\x01ZWgithub.com/envoyproxy/go-control-plane/envoy/config/filter/network/dubbo_proxy/v2alpha1b\x06proto3"

var (
	file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescOnce sync.Once
	file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescData []byte
)

func file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescGZIP() []byte {
	file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescOnce.Do(func() {
		file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDesc), len(file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDesc)))
	})
	return file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDescData
}

var file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_goTypes = []any{
	(ProtocolType)(0),          // 0: envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType
	(SerializationType)(0),     // 1: envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType
	(*DubboProxy)(nil),         // 2: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy
	(*DubboFilter)(nil),        // 3: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilter
	(*RouteConfiguration)(nil), // 4: envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration
	(*anypb.Any)(nil),          // 5: google.protobuf.Any
}
var file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_depIdxs = []int32{
	0, // 0: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy.protocol_type:type_name -> envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType
	1, // 1: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy.serialization_type:type_name -> envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType
	4, // 2: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy.route_config:type_name -> envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration
	3, // 3: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy.dubbo_filters:type_name -> envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilter
	5, // 4: envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilter.config:type_name -> google.protobuf.Any
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_init() }
func file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_init() {
	if File_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto != nil {
		return
	}
	file_envoy_config_filter_network_dubbo_proxy_v2alpha1_route_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDesc), len(file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_goTypes,
		DependencyIndexes: file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_depIdxs,
		EnumInfos:         file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_enumTypes,
		MessageInfos:      file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_msgTypes,
	}.Build()
	File_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto = out.File
	file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_goTypes = nil
	file_envoy_config_filter_network_dubbo_proxy_v2alpha1_dubbo_proxy_proto_depIdxs = nil
}
