// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/filter/fault/v2/fault.proto

package faultv2

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/go-control-plane/envoy/annotations"
	_type "github.com/envoyproxy/go-control-plane/envoy/type"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FaultDelay_FaultDelayType int32

const (
	// Unused and deprecated.
	FaultDelay_FIXED FaultDelay_FaultDelayType = 0
)

// Enum value maps for FaultDelay_FaultDelayType.
var (
	FaultDelay_FaultDelayType_name = map[int32]string{
		0: "FIXED",
	}
	FaultDelay_FaultDelayType_value = map[string]int32{
		"FIXED": 0,
	}
)

func (x FaultDelay_FaultDelayType) Enum() *FaultDelay_FaultDelayType {
	p := new(FaultDelay_FaultDelayType)
	*p = x
	return p
}

func (x FaultDelay_FaultDelayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FaultDelay_FaultDelayType) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_config_filter_fault_v2_fault_proto_enumTypes[0].Descriptor()
}

func (FaultDelay_FaultDelayType) Type() protoreflect.EnumType {
	return &file_envoy_config_filter_fault_v2_fault_proto_enumTypes[0]
}

func (x FaultDelay_FaultDelayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FaultDelay_FaultDelayType.Descriptor instead.
func (FaultDelay_FaultDelayType) EnumDescriptor() ([]byte, []int) {
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP(), []int{0, 0}
}

// Delay specification is used to inject latency into the
// HTTP/gRPC/Mongo/Redis operation or delay proxying of TCP connections.
// [#next-free-field: 6]
type FaultDelay struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unused and deprecated. Will be removed in the next release.
	//
	// Deprecated: Marked as deprecated in envoy/config/filter/fault/v2/fault.proto.
	Type FaultDelay_FaultDelayType `protobuf:"varint,1,opt,name=type,proto3,enum=envoy.config.filter.fault.v2.FaultDelay_FaultDelayType" json:"type,omitempty"`
	// Types that are valid to be assigned to FaultDelaySecifier:
	//
	//	*FaultDelay_FixedDelay
	//	*FaultDelay_HeaderDelay_
	FaultDelaySecifier isFaultDelay_FaultDelaySecifier `protobuf_oneof:"fault_delay_secifier"`
	// The percentage of operations/connections/requests on which the delay will be injected.
	Percentage    *_type.FractionalPercent `protobuf:"bytes,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaultDelay) Reset() {
	*x = FaultDelay{}
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultDelay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultDelay) ProtoMessage() {}

func (x *FaultDelay) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultDelay.ProtoReflect.Descriptor instead.
func (*FaultDelay) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Marked as deprecated in envoy/config/filter/fault/v2/fault.proto.
func (x *FaultDelay) GetType() FaultDelay_FaultDelayType {
	if x != nil {
		return x.Type
	}
	return FaultDelay_FIXED
}

func (x *FaultDelay) GetFaultDelaySecifier() isFaultDelay_FaultDelaySecifier {
	if x != nil {
		return x.FaultDelaySecifier
	}
	return nil
}

func (x *FaultDelay) GetFixedDelay() *durationpb.Duration {
	if x != nil {
		if x, ok := x.FaultDelaySecifier.(*FaultDelay_FixedDelay); ok {
			return x.FixedDelay
		}
	}
	return nil
}

func (x *FaultDelay) GetHeaderDelay() *FaultDelay_HeaderDelay {
	if x != nil {
		if x, ok := x.FaultDelaySecifier.(*FaultDelay_HeaderDelay_); ok {
			return x.HeaderDelay
		}
	}
	return nil
}

func (x *FaultDelay) GetPercentage() *_type.FractionalPercent {
	if x != nil {
		return x.Percentage
	}
	return nil
}

type isFaultDelay_FaultDelaySecifier interface {
	isFaultDelay_FaultDelaySecifier()
}

type FaultDelay_FixedDelay struct {
	// Add a fixed delay before forwarding the operation upstream. See
	// https://developers.google.com/protocol-buffers/docs/proto3#json for
	// the JSON/YAML Duration mapping. For HTTP/Mongo/Redis, the specified
	// delay will be injected before a new request/operation. For TCP
	// connections, the proxying of the connection upstream will be delayed
	// for the specified period. This is required if type is FIXED.
	FixedDelay *durationpb.Duration `protobuf:"bytes,3,opt,name=fixed_delay,json=fixedDelay,proto3,oneof"`
}

type FaultDelay_HeaderDelay_ struct {
	// Fault delays are controlled via an HTTP header (if applicable).
	HeaderDelay *FaultDelay_HeaderDelay `protobuf:"bytes,5,opt,name=header_delay,json=headerDelay,proto3,oneof"`
}

func (*FaultDelay_FixedDelay) isFaultDelay_FaultDelaySecifier() {}

func (*FaultDelay_HeaderDelay_) isFaultDelay_FaultDelaySecifier() {}

// Describes a rate limit to be applied.
type FaultRateLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to LimitType:
	//
	//	*FaultRateLimit_FixedLimit_
	//	*FaultRateLimit_HeaderLimit_
	LimitType isFaultRateLimit_LimitType `protobuf_oneof:"limit_type"`
	// The percentage of operations/connections/requests on which the rate limit will be injected.
	Percentage    *_type.FractionalPercent `protobuf:"bytes,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaultRateLimit) Reset() {
	*x = FaultRateLimit{}
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultRateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultRateLimit) ProtoMessage() {}

func (x *FaultRateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultRateLimit.ProtoReflect.Descriptor instead.
func (*FaultRateLimit) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP(), []int{1}
}

func (x *FaultRateLimit) GetLimitType() isFaultRateLimit_LimitType {
	if x != nil {
		return x.LimitType
	}
	return nil
}

func (x *FaultRateLimit) GetFixedLimit() *FaultRateLimit_FixedLimit {
	if x != nil {
		if x, ok := x.LimitType.(*FaultRateLimit_FixedLimit_); ok {
			return x.FixedLimit
		}
	}
	return nil
}

func (x *FaultRateLimit) GetHeaderLimit() *FaultRateLimit_HeaderLimit {
	if x != nil {
		if x, ok := x.LimitType.(*FaultRateLimit_HeaderLimit_); ok {
			return x.HeaderLimit
		}
	}
	return nil
}

func (x *FaultRateLimit) GetPercentage() *_type.FractionalPercent {
	if x != nil {
		return x.Percentage
	}
	return nil
}

type isFaultRateLimit_LimitType interface {
	isFaultRateLimit_LimitType()
}

type FaultRateLimit_FixedLimit_ struct {
	// A fixed rate limit.
	FixedLimit *FaultRateLimit_FixedLimit `protobuf:"bytes,1,opt,name=fixed_limit,json=fixedLimit,proto3,oneof"`
}

type FaultRateLimit_HeaderLimit_ struct {
	// Rate limits are controlled via an HTTP header (if applicable).
	HeaderLimit *FaultRateLimit_HeaderLimit `protobuf:"bytes,3,opt,name=header_limit,json=headerLimit,proto3,oneof"`
}

func (*FaultRateLimit_FixedLimit_) isFaultRateLimit_LimitType() {}

func (*FaultRateLimit_HeaderLimit_) isFaultRateLimit_LimitType() {}

// Fault delays are controlled via an HTTP header (if applicable). See the
// :ref:`HTTP fault filter <config_http_filters_fault_injection_http_header>` documentation for
// more information.
type FaultDelay_HeaderDelay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaultDelay_HeaderDelay) Reset() {
	*x = FaultDelay_HeaderDelay{}
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultDelay_HeaderDelay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultDelay_HeaderDelay) ProtoMessage() {}

func (x *FaultDelay_HeaderDelay) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultDelay_HeaderDelay.ProtoReflect.Descriptor instead.
func (*FaultDelay_HeaderDelay) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP(), []int{0, 0}
}

// Describes a fixed/constant rate limit.
type FaultRateLimit_FixedLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The limit supplied in KiB/s.
	LimitKbps     uint64 `protobuf:"varint,1,opt,name=limit_kbps,json=limitKbps,proto3" json:"limit_kbps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaultRateLimit_FixedLimit) Reset() {
	*x = FaultRateLimit_FixedLimit{}
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultRateLimit_FixedLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultRateLimit_FixedLimit) ProtoMessage() {}

func (x *FaultRateLimit_FixedLimit) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultRateLimit_FixedLimit.ProtoReflect.Descriptor instead.
func (*FaultRateLimit_FixedLimit) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FaultRateLimit_FixedLimit) GetLimitKbps() uint64 {
	if x != nil {
		return x.LimitKbps
	}
	return 0
}

// Rate limits are controlled via an HTTP header (if applicable). See the
// :ref:`HTTP fault filter <config_http_filters_fault_injection_http_header>` documentation for
// more information.
type FaultRateLimit_HeaderLimit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaultRateLimit_HeaderLimit) Reset() {
	*x = FaultRateLimit_HeaderLimit{}
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaultRateLimit_HeaderLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultRateLimit_HeaderLimit) ProtoMessage() {}

func (x *FaultRateLimit_HeaderLimit) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_filter_fault_v2_fault_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultRateLimit_HeaderLimit.ProtoReflect.Descriptor instead.
func (*FaultRateLimit_HeaderLimit) Descriptor() ([]byte, []int) {
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP(), []int{1, 1}
}

var File_envoy_config_filter_fault_v2_fault_proto protoreflect.FileDescriptor

const file_envoy_config_filter_fault_v2_fault_proto_rawDesc = "" +
	"\n" +
	"(envoy/config/filter/fault/v2/fault.proto\x12\x1cenvoy.config.filter.fault.v2\x1a\x18envoy/type/percent.proto\x1a\x1egoogle/protobuf/duration.proto\x1a#envoy/annotations/deprecation.proto\x1a\x1eudpa/annotations/migrate.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\x94\x03\n" +
	"\n" +
	"FaultDelay\x12U\n" +
	"\x04type\x18\x01 \x01(\x0e27.envoy.config.filter.fault.v2.FaultDelay.FaultDelayTypeB\b\xb8\xee\xf2\xd2\x05\x01\x18\x01R\x04type\x12F\n" +
	"\vfixed_delay\x18\x03 \x01(\v2\x19.google.protobuf.DurationB\b\xfaB\x05\xaa\x01\x02*\x00H\x00R\n" +
	"fixedDelay\x12Y\n" +
	"\fheader_delay\x18\x05 \x01(\v24.envoy.config.filter.fault.v2.FaultDelay.HeaderDelayH\x00R\vheaderDelay\x12=\n" +
	"\n" +
	"percentage\x18\x04 \x01(\v2\x1d.envoy.type.FractionalPercentR\n" +
	"percentage\x1a\r\n" +
	"\vHeaderDelay\"\x1b\n" +
	"\x0eFaultDelayType\x12\t\n" +
	"\x05FIXED\x10\x00B\x1b\n" +
	"\x14fault_delay_secifier\x12\x03\xf8B\x01J\x04\b\x02\x10\x03\"\xe2\x02\n" +
	"\x0eFaultRateLimit\x12Z\n" +
	"\vfixed_limit\x18\x01 \x01(\v27.envoy.config.filter.fault.v2.FaultRateLimit.FixedLimitH\x00R\n" +
	"fixedLimit\x12]\n" +
	"\fheader_limit\x18\x03 \x01(\v28.envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimitH\x00R\vheaderLimit\x12=\n" +
	"\n" +
	"percentage\x18\x02 \x01(\v2\x1d.envoy.type.FractionalPercentR\n" +
	"percentage\x1a4\n" +
	"\n" +
	"FixedLimit\x12&\n" +
	"\n" +
	"limit_kbps\x18\x01 \x01(\x04B\a\xfaB\x042\x02(\x01R\tlimitKbps\x1a\r\n" +
	"\vHeaderLimitB\x11\n" +
	"\n" +
	"limit_type\x12\x03\xf8B\x01B\xbf\x01\xf2\x98\xfe\x8f\x05*\x12(envoy.extensions.filters.common.fault.v3\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	"*io.envoyproxy.envoy.config.filter.fault.v2B\n" +
	"FaultProtoP\x01ZKgithub.com/envoyproxy/go-control-plane/envoy/config/filter/fault/v2;faultv2b\x06proto3"

var (
	file_envoy_config_filter_fault_v2_fault_proto_rawDescOnce sync.Once
	file_envoy_config_filter_fault_v2_fault_proto_rawDescData []byte
)

func file_envoy_config_filter_fault_v2_fault_proto_rawDescGZIP() []byte {
	file_envoy_config_filter_fault_v2_fault_proto_rawDescOnce.Do(func() {
		file_envoy_config_filter_fault_v2_fault_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_filter_fault_v2_fault_proto_rawDesc), len(file_envoy_config_filter_fault_v2_fault_proto_rawDesc)))
	})
	return file_envoy_config_filter_fault_v2_fault_proto_rawDescData
}

var file_envoy_config_filter_fault_v2_fault_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_envoy_config_filter_fault_v2_fault_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_envoy_config_filter_fault_v2_fault_proto_goTypes = []any{
	(FaultDelay_FaultDelayType)(0),     // 0: envoy.config.filter.fault.v2.FaultDelay.FaultDelayType
	(*FaultDelay)(nil),                 // 1: envoy.config.filter.fault.v2.FaultDelay
	(*FaultRateLimit)(nil),             // 2: envoy.config.filter.fault.v2.FaultRateLimit
	(*FaultDelay_HeaderDelay)(nil),     // 3: envoy.config.filter.fault.v2.FaultDelay.HeaderDelay
	(*FaultRateLimit_FixedLimit)(nil),  // 4: envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit
	(*FaultRateLimit_HeaderLimit)(nil), // 5: envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit
	(*durationpb.Duration)(nil),        // 6: google.protobuf.Duration
	(*_type.FractionalPercent)(nil),    // 7: envoy.type.FractionalPercent
}
var file_envoy_config_filter_fault_v2_fault_proto_depIdxs = []int32{
	0, // 0: envoy.config.filter.fault.v2.FaultDelay.type:type_name -> envoy.config.filter.fault.v2.FaultDelay.FaultDelayType
	6, // 1: envoy.config.filter.fault.v2.FaultDelay.fixed_delay:type_name -> google.protobuf.Duration
	3, // 2: envoy.config.filter.fault.v2.FaultDelay.header_delay:type_name -> envoy.config.filter.fault.v2.FaultDelay.HeaderDelay
	7, // 3: envoy.config.filter.fault.v2.FaultDelay.percentage:type_name -> envoy.type.FractionalPercent
	4, // 4: envoy.config.filter.fault.v2.FaultRateLimit.fixed_limit:type_name -> envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit
	5, // 5: envoy.config.filter.fault.v2.FaultRateLimit.header_limit:type_name -> envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit
	7, // 6: envoy.config.filter.fault.v2.FaultRateLimit.percentage:type_name -> envoy.type.FractionalPercent
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_envoy_config_filter_fault_v2_fault_proto_init() }
func file_envoy_config_filter_fault_v2_fault_proto_init() {
	if File_envoy_config_filter_fault_v2_fault_proto != nil {
		return
	}
	file_envoy_config_filter_fault_v2_fault_proto_msgTypes[0].OneofWrappers = []any{
		(*FaultDelay_FixedDelay)(nil),
		(*FaultDelay_HeaderDelay_)(nil),
	}
	file_envoy_config_filter_fault_v2_fault_proto_msgTypes[1].OneofWrappers = []any{
		(*FaultRateLimit_FixedLimit_)(nil),
		(*FaultRateLimit_HeaderLimit_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_filter_fault_v2_fault_proto_rawDesc), len(file_envoy_config_filter_fault_v2_fault_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_filter_fault_v2_fault_proto_goTypes,
		DependencyIndexes: file_envoy_config_filter_fault_v2_fault_proto_depIdxs,
		EnumInfos:         file_envoy_config_filter_fault_v2_fault_proto_enumTypes,
		MessageInfos:      file_envoy_config_filter_fault_v2_fault_proto_msgTypes,
	}.Build()
	File_envoy_config_filter_fault_v2_fault_proto = out.File
	file_envoy_config_filter_fault_v2_fault_proto_goTypes = nil
	file_envoy_config_filter_fault_v2_fault_proto_depIdxs = nil
}
