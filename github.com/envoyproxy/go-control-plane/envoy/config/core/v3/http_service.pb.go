// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/core/v3/http_service.proto

package corev3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HTTP service configuration.
type HttpService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The service's HTTP URI. For example:
	//
	// .. code-block:: yaml
	//
	//	http_uri:
	//	  uri: https://www.myserviceapi.com/v1/data
	//	  cluster: www.myserviceapi.com|443
	HttpUri *HttpUri `protobuf:"bytes,1,opt,name=http_uri,json=httpUri,proto3" json:"http_uri,omitempty"`
	// Specifies a list of HTTP headers that should be added to each request
	// handled by this virtual host.
	RequestHeadersToAdd []*HeaderValueOption `protobuf:"bytes,2,rep,name=request_headers_to_add,json=requestHeadersToAdd,proto3" json:"request_headers_to_add,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *HttpService) Reset() {
	*x = HttpService{}
	mi := &file_envoy_config_core_v3_http_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpService) ProtoMessage() {}

func (x *HttpService) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_core_v3_http_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpService.ProtoReflect.Descriptor instead.
func (*HttpService) Descriptor() ([]byte, []int) {
	return file_envoy_config_core_v3_http_service_proto_rawDescGZIP(), []int{0}
}

func (x *HttpService) GetHttpUri() *HttpUri {
	if x != nil {
		return x.HttpUri
	}
	return nil
}

func (x *HttpService) GetRequestHeadersToAdd() []*HeaderValueOption {
	if x != nil {
		return x.RequestHeadersToAdd
	}
	return nil
}

var File_envoy_config_core_v3_http_service_proto protoreflect.FileDescriptor

const file_envoy_config_core_v3_http_service_proto_rawDesc = "" +
	"\n" +
	"'envoy/config/core/v3/http_service.proto\x12\x14envoy.config.core.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a#envoy/config/core/v3/http_uri.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xb0\x01\n" +
	"\vHttpService\x128\n" +
	"\bhttp_uri\x18\x01 \x01(\v2\x1d.envoy.config.core.v3.HttpUriR\ahttpUri\x12g\n" +
	"\x16request_headers_to_add\x18\x02 \x03(\v2'.envoy.config.core.v3.HeaderValueOptionB\t\xfaB\x06\x92\x01\x03\x10\xe8\aR\x13requestHeadersToAddB\x84\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"\"io.envoyproxy.envoy.config.core.v3B\x10HttpServiceProtoP\x01ZBgithub.com/envoyproxy/go-control-plane/envoy/config/core/v3;corev3b\x06proto3"

var (
	file_envoy_config_core_v3_http_service_proto_rawDescOnce sync.Once
	file_envoy_config_core_v3_http_service_proto_rawDescData []byte
)

func file_envoy_config_core_v3_http_service_proto_rawDescGZIP() []byte {
	file_envoy_config_core_v3_http_service_proto_rawDescOnce.Do(func() {
		file_envoy_config_core_v3_http_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_core_v3_http_service_proto_rawDesc), len(file_envoy_config_core_v3_http_service_proto_rawDesc)))
	})
	return file_envoy_config_core_v3_http_service_proto_rawDescData
}

var file_envoy_config_core_v3_http_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_config_core_v3_http_service_proto_goTypes = []any{
	(*HttpService)(nil),       // 0: envoy.config.core.v3.HttpService
	(*HttpUri)(nil),           // 1: envoy.config.core.v3.HttpUri
	(*HeaderValueOption)(nil), // 2: envoy.config.core.v3.HeaderValueOption
}
var file_envoy_config_core_v3_http_service_proto_depIdxs = []int32{
	1, // 0: envoy.config.core.v3.HttpService.http_uri:type_name -> envoy.config.core.v3.HttpUri
	2, // 1: envoy.config.core.v3.HttpService.request_headers_to_add:type_name -> envoy.config.core.v3.HeaderValueOption
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_config_core_v3_http_service_proto_init() }
func file_envoy_config_core_v3_http_service_proto_init() {
	if File_envoy_config_core_v3_http_service_proto != nil {
		return
	}
	file_envoy_config_core_v3_base_proto_init()
	file_envoy_config_core_v3_http_uri_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_core_v3_http_service_proto_rawDesc), len(file_envoy_config_core_v3_http_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_core_v3_http_service_proto_goTypes,
		DependencyIndexes: file_envoy_config_core_v3_http_service_proto_depIdxs,
		MessageInfos:      file_envoy_config_core_v3_http_service_proto_msgTypes,
	}.Build()
	File_envoy_config_core_v3_http_service_proto = out.File
	file_envoy_config_core_v3_http_service_proto_goTypes = nil
	file_envoy_config_core_v3_http_service_proto_depIdxs = nil
}
