// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/core/v3/substitution_format_string.proto

package corev3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/go-control-plane/envoy/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Optional configuration options to be used with json_format.
type JsonFormatOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The output JSON string properties will be sorted.
	//
	// .. note::
	//
	//	As the properties are always sorted, this option has no effect and is deprecated.
	//
	// Deprecated: Marked as deprecated in envoy/config/core/v3/substitution_format_string.proto.
	SortProperties bool `protobuf:"varint,1,opt,name=sort_properties,json=sortProperties,proto3" json:"sort_properties,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JsonFormatOptions) Reset() {
	*x = JsonFormatOptions{}
	mi := &file_envoy_config_core_v3_substitution_format_string_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonFormatOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonFormatOptions) ProtoMessage() {}

func (x *JsonFormatOptions) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_core_v3_substitution_format_string_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonFormatOptions.ProtoReflect.Descriptor instead.
func (*JsonFormatOptions) Descriptor() ([]byte, []int) {
	return file_envoy_config_core_v3_substitution_format_string_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Marked as deprecated in envoy/config/core/v3/substitution_format_string.proto.
func (x *JsonFormatOptions) GetSortProperties() bool {
	if x != nil {
		return x.SortProperties
	}
	return false
}

// Configuration to use multiple :ref:`command operators <config_access_log_command_operators>`
// to generate a new string in either plain text or JSON format.
// [#next-free-field: 8]
type SubstitutionFormatString struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Format:
	//
	//	*SubstitutionFormatString_TextFormat
	//	*SubstitutionFormatString_JsonFormat
	//	*SubstitutionFormatString_TextFormatSource
	Format isSubstitutionFormatString_Format `protobuf_oneof:"format"`
	// If set to true, when command operators are evaluated to null,
	//
	//   - for “text_format“, the output of the empty operator is changed from “-“ to an
	//     empty string, so that empty values are omitted entirely.
	//   - for “json_format“ the keys with null values are omitted in the output structure.
	//
	// .. note::
	//
	//	This option does not work perfectly with ``json_format`` as keys with ``null`` values
	//	will still be included in the output. See https://github.com/envoyproxy/envoy/issues/37941
	//	for more details.
	OmitEmptyValues bool `protobuf:"varint,3,opt,name=omit_empty_values,json=omitEmptyValues,proto3" json:"omit_empty_values,omitempty"`
	// Specify a “content_type“ field.
	// If this field is not set then “text/plain“ is used for “text_format“ and
	// “application/json“ is used for “json_format“.
	//
	// .. validated-code-block:: yaml
	//
	//	:type-name: envoy.config.core.v3.SubstitutionFormatString
	//
	//	content_type: "text/html; charset=UTF-8"
	ContentType string `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Specifies a collection of Formatter plugins that can be called from the access log configuration.
	// See the formatters extensions documentation for details.
	// [#extension-category: envoy.formatter]
	Formatters []*TypedExtensionConfig `protobuf:"bytes,6,rep,name=formatters,proto3" json:"formatters,omitempty"`
	// If json_format is used, the options will be applied to the output JSON string.
	JsonFormatOptions *JsonFormatOptions `protobuf:"bytes,7,opt,name=json_format_options,json=jsonFormatOptions,proto3" json:"json_format_options,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SubstitutionFormatString) Reset() {
	*x = SubstitutionFormatString{}
	mi := &file_envoy_config_core_v3_substitution_format_string_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubstitutionFormatString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstitutionFormatString) ProtoMessage() {}

func (x *SubstitutionFormatString) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_core_v3_substitution_format_string_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstitutionFormatString.ProtoReflect.Descriptor instead.
func (*SubstitutionFormatString) Descriptor() ([]byte, []int) {
	return file_envoy_config_core_v3_substitution_format_string_proto_rawDescGZIP(), []int{1}
}

func (x *SubstitutionFormatString) GetFormat() isSubstitutionFormatString_Format {
	if x != nil {
		return x.Format
	}
	return nil
}

// Deprecated: Marked as deprecated in envoy/config/core/v3/substitution_format_string.proto.
func (x *SubstitutionFormatString) GetTextFormat() string {
	if x != nil {
		if x, ok := x.Format.(*SubstitutionFormatString_TextFormat); ok {
			return x.TextFormat
		}
	}
	return ""
}

func (x *SubstitutionFormatString) GetJsonFormat() *structpb.Struct {
	if x != nil {
		if x, ok := x.Format.(*SubstitutionFormatString_JsonFormat); ok {
			return x.JsonFormat
		}
	}
	return nil
}

func (x *SubstitutionFormatString) GetTextFormatSource() *DataSource {
	if x != nil {
		if x, ok := x.Format.(*SubstitutionFormatString_TextFormatSource); ok {
			return x.TextFormatSource
		}
	}
	return nil
}

func (x *SubstitutionFormatString) GetOmitEmptyValues() bool {
	if x != nil {
		return x.OmitEmptyValues
	}
	return false
}

func (x *SubstitutionFormatString) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *SubstitutionFormatString) GetFormatters() []*TypedExtensionConfig {
	if x != nil {
		return x.Formatters
	}
	return nil
}

func (x *SubstitutionFormatString) GetJsonFormatOptions() *JsonFormatOptions {
	if x != nil {
		return x.JsonFormatOptions
	}
	return nil
}

type isSubstitutionFormatString_Format interface {
	isSubstitutionFormatString_Format()
}

type SubstitutionFormatString_TextFormat struct {
	// Specify a format with command operators to form a text string.
	// Its details is described in :ref:`format string<config_access_log_format_strings>`.
	//
	// For example, setting “text_format“ like below,
	//
	// .. validated-code-block:: yaml
	//
	//	:type-name: envoy.config.core.v3.SubstitutionFormatString
	//
	//	text_format: "%LOCAL_REPLY_BODY%:%RESPONSE_CODE%:path=%REQ(:path)%\n"
	//
	// generates plain text similar to:
	//
	// .. code-block:: text
	//
	//	upstream connect error:503:path=/foo
	//
	// Deprecated in favor of :ref:`text_format_source <envoy_v3_api_field_config.core.v3.SubstitutionFormatString.text_format_source>`. To migrate text format strings, use the :ref:`inline_string <envoy_v3_api_field_config.core.v3.DataSource.inline_string>` field.
	//
	// Deprecated: Marked as deprecated in envoy/config/core/v3/substitution_format_string.proto.
	TextFormat string `protobuf:"bytes,1,opt,name=text_format,json=textFormat,proto3,oneof"`
}

type SubstitutionFormatString_JsonFormat struct {
	// Specify a format with command operators to form a JSON string.
	// Its details is described in :ref:`format dictionary<config_access_log_format_dictionaries>`.
	// Values are rendered as strings, numbers, or boolean values as appropriate.
	// Nested JSON objects may be produced by some command operators (e.g. FILTER_STATE or DYNAMIC_METADATA).
	// See the documentation for a specific command operator for details.
	//
	// .. validated-code-block:: yaml
	//
	//	:type-name: envoy.config.core.v3.SubstitutionFormatString
	//
	//	json_format:
	//	  status: "%RESPONSE_CODE%"
	//	  message: "%LOCAL_REPLY_BODY%"
	//
	// The following JSON object would be created:
	//
	// .. code-block:: json
	//
	//	{
	//	  "status": 500,
	//	  "message": "My error message"
	//	}
	JsonFormat *structpb.Struct `protobuf:"bytes,2,opt,name=json_format,json=jsonFormat,proto3,oneof"`
}

type SubstitutionFormatString_TextFormatSource struct {
	// Specify a format with command operators to form a text string.
	// Its details is described in :ref:`format string<config_access_log_format_strings>`.
	//
	// For example, setting “text_format“ like below,
	//
	// .. validated-code-block:: yaml
	//
	//	:type-name: envoy.config.core.v3.SubstitutionFormatString
	//
	//	text_format_source:
	//	  inline_string: "%LOCAL_REPLY_BODY%:%RESPONSE_CODE%:path=%REQ(:path)%\n"
	//
	// generates plain text similar to:
	//
	// .. code-block:: text
	//
	//	upstream connect error:503:path=/foo
	TextFormatSource *DataSource `protobuf:"bytes,5,opt,name=text_format_source,json=textFormatSource,proto3,oneof"`
}

func (*SubstitutionFormatString_TextFormat) isSubstitutionFormatString_Format() {}

func (*SubstitutionFormatString_JsonFormat) isSubstitutionFormatString_Format() {}

func (*SubstitutionFormatString_TextFormatSource) isSubstitutionFormatString_Format() {}

var File_envoy_config_core_v3_substitution_format_string_proto protoreflect.FileDescriptor

const file_envoy_config_core_v3_substitution_format_string_proto_rawDesc = "" +
	"\n" +
	"5envoy/config/core/v3/substitution_format_string.proto\x12\x14envoy.config.core.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a$envoy/config/core/v3/extension.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a#envoy/annotations/deprecation.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"I\n" +
	"\x11JsonFormatOptions\x124\n" +
	"\x0fsort_properties\x18\x01 \x01(\bB\v\x92ǆ\xd8\x04\x033.0\x18\x01R\x0esortProperties\"\xf2\x03\n" +
	"\x18SubstitutionFormatString\x12.\n" +
	"\vtext_format\x18\x01 \x01(\tB\v\x92ǆ\xd8\x04\x033.0\x18\x01H\x00R\n" +
	"textFormat\x12D\n" +
	"\vjson_format\x18\x02 \x01(\v2\x17.google.protobuf.StructB\b\xfaB\x05\x8a\x01\x02\x10\x01H\x00R\n" +
	"jsonFormat\x12P\n" +
	"\x12text_format_source\x18\x05 \x01(\v2 .envoy.config.core.v3.DataSourceH\x00R\x10textFormatSource\x12*\n" +
	"\x11omit_empty_values\x18\x03 \x01(\bR\x0fomitEmptyValues\x12.\n" +
	"\fcontent_type\x18\x04 \x01(\tB\v\xfaB\br\x06\xc8\x01\x00\xc0\x01\x02R\vcontentType\x12J\n" +
	"\n" +
	"formatters\x18\x06 \x03(\v2*.envoy.config.core.v3.TypedExtensionConfigR\n" +
	"formatters\x12W\n" +
	"\x13json_format_options\x18\a \x01(\v2'.envoy.config.core.v3.JsonFormatOptionsR\x11jsonFormatOptionsB\r\n" +
	"\x06format\x12\x03\xf8B\x01B\x91\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"\"io.envoyproxy.envoy.config.core.v3B\x1dSubstitutionFormatStringProtoP\x01ZBgithub.com/envoyproxy/go-control-plane/envoy/config/core/v3;corev3b\x06proto3"

var (
	file_envoy_config_core_v3_substitution_format_string_proto_rawDescOnce sync.Once
	file_envoy_config_core_v3_substitution_format_string_proto_rawDescData []byte
)

func file_envoy_config_core_v3_substitution_format_string_proto_rawDescGZIP() []byte {
	file_envoy_config_core_v3_substitution_format_string_proto_rawDescOnce.Do(func() {
		file_envoy_config_core_v3_substitution_format_string_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_core_v3_substitution_format_string_proto_rawDesc), len(file_envoy_config_core_v3_substitution_format_string_proto_rawDesc)))
	})
	return file_envoy_config_core_v3_substitution_format_string_proto_rawDescData
}

var file_envoy_config_core_v3_substitution_format_string_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_config_core_v3_substitution_format_string_proto_goTypes = []any{
	(*JsonFormatOptions)(nil),        // 0: envoy.config.core.v3.JsonFormatOptions
	(*SubstitutionFormatString)(nil), // 1: envoy.config.core.v3.SubstitutionFormatString
	(*structpb.Struct)(nil),          // 2: google.protobuf.Struct
	(*DataSource)(nil),               // 3: envoy.config.core.v3.DataSource
	(*TypedExtensionConfig)(nil),     // 4: envoy.config.core.v3.TypedExtensionConfig
}
var file_envoy_config_core_v3_substitution_format_string_proto_depIdxs = []int32{
	2, // 0: envoy.config.core.v3.SubstitutionFormatString.json_format:type_name -> google.protobuf.Struct
	3, // 1: envoy.config.core.v3.SubstitutionFormatString.text_format_source:type_name -> envoy.config.core.v3.DataSource
	4, // 2: envoy.config.core.v3.SubstitutionFormatString.formatters:type_name -> envoy.config.core.v3.TypedExtensionConfig
	0, // 3: envoy.config.core.v3.SubstitutionFormatString.json_format_options:type_name -> envoy.config.core.v3.JsonFormatOptions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_envoy_config_core_v3_substitution_format_string_proto_init() }
func file_envoy_config_core_v3_substitution_format_string_proto_init() {
	if File_envoy_config_core_v3_substitution_format_string_proto != nil {
		return
	}
	file_envoy_config_core_v3_base_proto_init()
	file_envoy_config_core_v3_extension_proto_init()
	file_envoy_config_core_v3_substitution_format_string_proto_msgTypes[1].OneofWrappers = []any{
		(*SubstitutionFormatString_TextFormat)(nil),
		(*SubstitutionFormatString_JsonFormat)(nil),
		(*SubstitutionFormatString_TextFormatSource)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_core_v3_substitution_format_string_proto_rawDesc), len(file_envoy_config_core_v3_substitution_format_string_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_core_v3_substitution_format_string_proto_goTypes,
		DependencyIndexes: file_envoy_config_core_v3_substitution_format_string_proto_depIdxs,
		MessageInfos:      file_envoy_config_core_v3_substitution_format_string_proto_msgTypes,
	}.Build()
	File_envoy_config_core_v3_substitution_format_string_proto = out.File
	file_envoy_config_core_v3_substitution_format_string_proto_goTypes = nil
	file_envoy_config_core_v3_substitution_format_string_proto_depIdxs = nil
}
