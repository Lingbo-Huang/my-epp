// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/trace/v2/http_tracer.proto

package tracev2

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The tracing configuration specifies settings for an HTTP tracer provider used by Envoy.
//
// Envoy may support other tracers in the future, but right now the HTTP tracer is the only one
// supported.
//
// .. attention::
//
//	Use of this message type has been deprecated in favor of direct use of
//	:ref:`Tracing.Http <envoy_api_msg_config.trace.v2.Tracing.Http>`.
type Tracing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Provides configuration for the HTTP tracer.
	Http          *Tracing_Http `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tracing) Reset() {
	*x = Tracing{}
	mi := &file_envoy_config_trace_v2_http_tracer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tracing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracing) ProtoMessage() {}

func (x *Tracing) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_trace_v2_http_tracer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracing.ProtoReflect.Descriptor instead.
func (*Tracing) Descriptor() ([]byte, []int) {
	return file_envoy_config_trace_v2_http_tracer_proto_rawDescGZIP(), []int{0}
}

func (x *Tracing) GetHttp() *Tracing_Http {
	if x != nil {
		return x.Http
	}
	return nil
}

// Configuration for an HTTP tracer provider used by Envoy.
//
// The configuration is defined by the
// :ref:`HttpConnectionManager.Tracing <envoy_api_msg_config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing>`
// :ref:`provider <envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing.provider>`
// field.
type Tracing_Http struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the HTTP trace driver to instantiate. The name must match a
	// supported HTTP trace driver. Built-in trace drivers:
	//
	// - *envoy.tracers.lightstep*
	// - *envoy.tracers.zipkin*
	// - *envoy.tracers.dynamic_ot*
	// - *envoy.tracers.datadog*
	// - *envoy.tracers.xray*
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Trace driver specific configuration which depends on the driver being instantiated.
	// See the trace drivers for examples:
	//
	// - :ref:`LightstepConfig <envoy_api_msg_config.trace.v2.LightstepConfig>`
	// - :ref:`ZipkinConfig <envoy_api_msg_config.trace.v2.ZipkinConfig>`
	// - :ref:`DynamicOtConfig <envoy_api_msg_config.trace.v2.DynamicOtConfig>`
	// - :ref:`DatadogConfig <envoy_api_msg_config.trace.v2.DatadogConfig>`
	// - :ref:`AWS X-Ray <envoy_api_msg_config.trace.v2alpha.XRayConfig>`
	//
	// Types that are valid to be assigned to ConfigType:
	//
	//	*Tracing_Http_Config
	//	*Tracing_Http_TypedConfig
	ConfigType    isTracing_Http_ConfigType `protobuf_oneof:"config_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tracing_Http) Reset() {
	*x = Tracing_Http{}
	mi := &file_envoy_config_trace_v2_http_tracer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tracing_Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracing_Http) ProtoMessage() {}

func (x *Tracing_Http) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_trace_v2_http_tracer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracing_Http.ProtoReflect.Descriptor instead.
func (*Tracing_Http) Descriptor() ([]byte, []int) {
	return file_envoy_config_trace_v2_http_tracer_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Tracing_Http) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tracing_Http) GetConfigType() isTracing_Http_ConfigType {
	if x != nil {
		return x.ConfigType
	}
	return nil
}

// Deprecated: Marked as deprecated in envoy/config/trace/v2/http_tracer.proto.
func (x *Tracing_Http) GetConfig() *structpb.Struct {
	if x != nil {
		if x, ok := x.ConfigType.(*Tracing_Http_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *Tracing_Http) GetTypedConfig() *anypb.Any {
	if x != nil {
		if x, ok := x.ConfigType.(*Tracing_Http_TypedConfig); ok {
			return x.TypedConfig
		}
	}
	return nil
}

type isTracing_Http_ConfigType interface {
	isTracing_Http_ConfigType()
}

type Tracing_Http_Config struct {
	// Deprecated: Marked as deprecated in envoy/config/trace/v2/http_tracer.proto.
	Config *structpb.Struct `protobuf:"bytes,2,opt,name=config,proto3,oneof"`
}

type Tracing_Http_TypedConfig struct {
	TypedConfig *anypb.Any `protobuf:"bytes,3,opt,name=typed_config,json=typedConfig,proto3,oneof"`
}

func (*Tracing_Http_Config) isTracing_Http_ConfigType() {}

func (*Tracing_Http_TypedConfig) isTracing_Http_ConfigType() {}

var File_envoy_config_trace_v2_http_tracer_proto protoreflect.FileDescriptor

const file_envoy_config_trace_v2_http_tracer_proto_rawDesc = "" +
	"\n" +
	"'envoy/config/trace/v2/http_tracer.proto\x12\x15envoy.config.trace.v2\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xe9\x01\n" +
	"\aTracing\x127\n" +
	"\x04http\x18\x01 \x01(\v2#.envoy.config.trace.v2.Tracing.HttpR\x04http\x1a\xa4\x01\n" +
	"\x04Http\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\x04name\x125\n" +
	"\x06config\x18\x02 \x01(\v2\x17.google.protobuf.StructB\x02\x18\x01H\x00R\x06config\x129\n" +
	"\ftyped_config\x18\x03 \x01(\v2\x14.google.protobuf.AnyH\x00R\vtypedConfigB\r\n" +
	"\vconfig_typeB\x86\x01\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	"#io.envoyproxy.envoy.config.trace.v2B\x0fHttpTracerProtoP\x01ZDgithub.com/envoyproxy/go-control-plane/envoy/config/trace/v2;tracev2b\x06proto3"

var (
	file_envoy_config_trace_v2_http_tracer_proto_rawDescOnce sync.Once
	file_envoy_config_trace_v2_http_tracer_proto_rawDescData []byte
)

func file_envoy_config_trace_v2_http_tracer_proto_rawDescGZIP() []byte {
	file_envoy_config_trace_v2_http_tracer_proto_rawDescOnce.Do(func() {
		file_envoy_config_trace_v2_http_tracer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_trace_v2_http_tracer_proto_rawDesc), len(file_envoy_config_trace_v2_http_tracer_proto_rawDesc)))
	})
	return file_envoy_config_trace_v2_http_tracer_proto_rawDescData
}

var file_envoy_config_trace_v2_http_tracer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_config_trace_v2_http_tracer_proto_goTypes = []any{
	(*Tracing)(nil),         // 0: envoy.config.trace.v2.Tracing
	(*Tracing_Http)(nil),    // 1: envoy.config.trace.v2.Tracing.Http
	(*structpb.Struct)(nil), // 2: google.protobuf.Struct
	(*anypb.Any)(nil),       // 3: google.protobuf.Any
}
var file_envoy_config_trace_v2_http_tracer_proto_depIdxs = []int32{
	1, // 0: envoy.config.trace.v2.Tracing.http:type_name -> envoy.config.trace.v2.Tracing.Http
	2, // 1: envoy.config.trace.v2.Tracing.Http.config:type_name -> google.protobuf.Struct
	3, // 2: envoy.config.trace.v2.Tracing.Http.typed_config:type_name -> google.protobuf.Any
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_envoy_config_trace_v2_http_tracer_proto_init() }
func file_envoy_config_trace_v2_http_tracer_proto_init() {
	if File_envoy_config_trace_v2_http_tracer_proto != nil {
		return
	}
	file_envoy_config_trace_v2_http_tracer_proto_msgTypes[1].OneofWrappers = []any{
		(*Tracing_Http_Config)(nil),
		(*Tracing_Http_TypedConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_trace_v2_http_tracer_proto_rawDesc), len(file_envoy_config_trace_v2_http_tracer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_trace_v2_http_tracer_proto_goTypes,
		DependencyIndexes: file_envoy_config_trace_v2_http_tracer_proto_depIdxs,
		MessageInfos:      file_envoy_config_trace_v2_http_tracer_proto_msgTypes,
	}.Build()
	File_envoy_config_trace_v2_http_tracer_proto = out.File
	file_envoy_config_trace_v2_http_tracer_proto_goTypes = nil
	file_envoy_config_trace_v2_http_tracer_proto_depIdxs = nil
}
