// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/config/overload/v3/overload.proto

package overloadv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/type/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScaleTimersOverloadActionConfig_TimerType int32

const (
	// Unsupported value; users must explicitly specify the timer they want scaled.
	ScaleTimersOverloadActionConfig_UNSPECIFIED ScaleTimersOverloadActionConfig_TimerType = 0
	// Adjusts the idle timer for downstream HTTP connections that takes effect when there are no active streams.
	// This affects the value of :ref:`HttpConnectionManager.common_http_protocol_options.idle_timeout
	// <envoy_v3_api_field_config.core.v3.HttpProtocolOptions.idle_timeout>`
	ScaleTimersOverloadActionConfig_HTTP_DOWNSTREAM_CONNECTION_IDLE ScaleTimersOverloadActionConfig_TimerType = 1
	// Adjusts the idle timer for HTTP streams initiated by downstream clients.
	// This affects the value of :ref:`RouteAction.idle_timeout <envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout>` and
	// :ref:`HttpConnectionManager.stream_idle_timeout
	// <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout>`
	ScaleTimersOverloadActionConfig_HTTP_DOWNSTREAM_STREAM_IDLE ScaleTimersOverloadActionConfig_TimerType = 2
	// Adjusts the timer for how long downstream clients have to finish transport-level negotiations
	// before the connection is closed.
	// This affects the value of
	// :ref:`FilterChain.transport_socket_connect_timeout <envoy_v3_api_field_config.listener.v3.FilterChain.transport_socket_connect_timeout>`.
	ScaleTimersOverloadActionConfig_TRANSPORT_SOCKET_CONNECT ScaleTimersOverloadActionConfig_TimerType = 3
	// Adjusts the max connection duration timer for downstream HTTP connections.
	// This affects the value of
	// :ref:`HttpConnectionManager.common_http_protocol_options.max_connection_duration
	// <envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_connection_duration>`.
	ScaleTimersOverloadActionConfig_HTTP_DOWNSTREAM_CONNECTION_MAX ScaleTimersOverloadActionConfig_TimerType = 4
)

// Enum value maps for ScaleTimersOverloadActionConfig_TimerType.
var (
	ScaleTimersOverloadActionConfig_TimerType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "HTTP_DOWNSTREAM_CONNECTION_IDLE",
		2: "HTTP_DOWNSTREAM_STREAM_IDLE",
		3: "TRANSPORT_SOCKET_CONNECT",
		4: "HTTP_DOWNSTREAM_CONNECTION_MAX",
	}
	ScaleTimersOverloadActionConfig_TimerType_value = map[string]int32{
		"UNSPECIFIED":                     0,
		"HTTP_DOWNSTREAM_CONNECTION_IDLE": 1,
		"HTTP_DOWNSTREAM_STREAM_IDLE":     2,
		"TRANSPORT_SOCKET_CONNECT":        3,
		"HTTP_DOWNSTREAM_CONNECTION_MAX":  4,
	}
)

func (x ScaleTimersOverloadActionConfig_TimerType) Enum() *ScaleTimersOverloadActionConfig_TimerType {
	p := new(ScaleTimersOverloadActionConfig_TimerType)
	*p = x
	return p
}

func (x ScaleTimersOverloadActionConfig_TimerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScaleTimersOverloadActionConfig_TimerType) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_config_overload_v3_overload_proto_enumTypes[0].Descriptor()
}

func (ScaleTimersOverloadActionConfig_TimerType) Type() protoreflect.EnumType {
	return &file_envoy_config_overload_v3_overload_proto_enumTypes[0]
}

func (x ScaleTimersOverloadActionConfig_TimerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScaleTimersOverloadActionConfig_TimerType.Descriptor instead.
func (ScaleTimersOverloadActionConfig_TimerType) EnumDescriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{4, 0}
}

type ResourceMonitor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the resource monitor to instantiate. Must match a registered
	// resource monitor type.
	// See the :ref:`extensions listed in typed_config below <extension_category_envoy.resource_monitors>` for the default list of available resource monitor.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Configuration for the resource monitor being instantiated.
	// [#extension-category: envoy.resource_monitors]
	//
	// Types that are valid to be assigned to ConfigType:
	//
	//	*ResourceMonitor_TypedConfig
	ConfigType    isResourceMonitor_ConfigType `protobuf_oneof:"config_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceMonitor) Reset() {
	*x = ResourceMonitor{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceMonitor) ProtoMessage() {}

func (x *ResourceMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceMonitor.ProtoReflect.Descriptor instead.
func (*ResourceMonitor) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceMonitor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceMonitor) GetConfigType() isResourceMonitor_ConfigType {
	if x != nil {
		return x.ConfigType
	}
	return nil
}

func (x *ResourceMonitor) GetTypedConfig() *anypb.Any {
	if x != nil {
		if x, ok := x.ConfigType.(*ResourceMonitor_TypedConfig); ok {
			return x.TypedConfig
		}
	}
	return nil
}

type isResourceMonitor_ConfigType interface {
	isResourceMonitor_ConfigType()
}

type ResourceMonitor_TypedConfig struct {
	TypedConfig *anypb.Any `protobuf:"bytes,3,opt,name=typed_config,json=typedConfig,proto3,oneof"`
}

func (*ResourceMonitor_TypedConfig) isResourceMonitor_ConfigType() {}

type ThresholdTrigger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If the resource pressure is greater than or equal to this value, the trigger
	// will enter saturation.
	Value         float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThresholdTrigger) Reset() {
	*x = ThresholdTrigger{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThresholdTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdTrigger) ProtoMessage() {}

func (x *ThresholdTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThresholdTrigger.ProtoReflect.Descriptor instead.
func (*ThresholdTrigger) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{1}
}

func (x *ThresholdTrigger) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ScaledTrigger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If the resource pressure is greater than this value, the trigger will be in the
	// :ref:`scaling <arch_overview_overload_manager-triggers-state>` state with value
	// “(pressure - scaling_threshold) / (saturation_threshold - scaling_threshold)“.
	ScalingThreshold float64 `protobuf:"fixed64,1,opt,name=scaling_threshold,json=scalingThreshold,proto3" json:"scaling_threshold,omitempty"`
	// If the resource pressure is greater than this value, the trigger will enter saturation.
	SaturationThreshold float64 `protobuf:"fixed64,2,opt,name=saturation_threshold,json=saturationThreshold,proto3" json:"saturation_threshold,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ScaledTrigger) Reset() {
	*x = ScaledTrigger{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaledTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaledTrigger) ProtoMessage() {}

func (x *ScaledTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaledTrigger.ProtoReflect.Descriptor instead.
func (*ScaledTrigger) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{2}
}

func (x *ScaledTrigger) GetScalingThreshold() float64 {
	if x != nil {
		return x.ScalingThreshold
	}
	return 0
}

func (x *ScaledTrigger) GetSaturationThreshold() float64 {
	if x != nil {
		return x.SaturationThreshold
	}
	return 0
}

type Trigger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the resource this is a trigger for.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to TriggerOneof:
	//
	//	*Trigger_Threshold
	//	*Trigger_Scaled
	TriggerOneof  isTrigger_TriggerOneof `protobuf_oneof:"trigger_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{3}
}

func (x *Trigger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trigger) GetTriggerOneof() isTrigger_TriggerOneof {
	if x != nil {
		return x.TriggerOneof
	}
	return nil
}

func (x *Trigger) GetThreshold() *ThresholdTrigger {
	if x != nil {
		if x, ok := x.TriggerOneof.(*Trigger_Threshold); ok {
			return x.Threshold
		}
	}
	return nil
}

func (x *Trigger) GetScaled() *ScaledTrigger {
	if x != nil {
		if x, ok := x.TriggerOneof.(*Trigger_Scaled); ok {
			return x.Scaled
		}
	}
	return nil
}

type isTrigger_TriggerOneof interface {
	isTrigger_TriggerOneof()
}

type Trigger_Threshold struct {
	Threshold *ThresholdTrigger `protobuf:"bytes,2,opt,name=threshold,proto3,oneof"`
}

type Trigger_Scaled struct {
	Scaled *ScaledTrigger `protobuf:"bytes,3,opt,name=scaled,proto3,oneof"`
}

func (*Trigger_Threshold) isTrigger_TriggerOneof() {}

func (*Trigger_Scaled) isTrigger_TriggerOneof() {}

// Typed configuration for the "envoy.overload_actions.reduce_timeouts" action. See
// :ref:`the docs <config_overload_manager_reducing_timeouts>` for an example of how to configure
// the action with different timeouts and minimum values.
type ScaleTimersOverloadActionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A set of timer scaling rules to be applied.
	TimerScaleFactors []*ScaleTimersOverloadActionConfig_ScaleTimer `protobuf:"bytes,1,rep,name=timer_scale_factors,json=timerScaleFactors,proto3" json:"timer_scale_factors,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ScaleTimersOverloadActionConfig) Reset() {
	*x = ScaleTimersOverloadActionConfig{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleTimersOverloadActionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleTimersOverloadActionConfig) ProtoMessage() {}

func (x *ScaleTimersOverloadActionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleTimersOverloadActionConfig.ProtoReflect.Descriptor instead.
func (*ScaleTimersOverloadActionConfig) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{4}
}

func (x *ScaleTimersOverloadActionConfig) GetTimerScaleFactors() []*ScaleTimersOverloadActionConfig_ScaleTimer {
	if x != nil {
		return x.TimerScaleFactors
	}
	return nil
}

type OverloadAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the overload action. This is just a well-known string that
	// listeners can use for registering callbacks.
	// Valid known overload actions include:
	// - envoy.overload_actions.stop_accepting_requests
	// - envoy.overload_actions.disable_http_keepalive
	// - envoy.overload_actions.stop_accepting_connections
	// - envoy.overload_actions.reject_incoming_connections
	// - envoy.overload_actions.shrink_heap
	// - envoy.overload_actions.reduce_timeouts
	// - envoy.overload_actions.reset_high_memory_stream
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A set of triggers for this action. The state of the action is the maximum
	// state of all triggers, which can be scalar values between 0 and 1 or
	// saturated. Listeners are notified when the overload action changes state.
	// An overload manager action can only have one trigger for a given resource
	// e.g. :ref:`Trigger.name
	// <envoy_v3_api_field_config.overload.v3.Trigger.name>` must be unique
	// in this list.
	Triggers []*Trigger `protobuf:"bytes,2,rep,name=triggers,proto3" json:"triggers,omitempty"`
	// Configuration for the action being instantiated if applicable.
	TypedConfig   *anypb.Any `protobuf:"bytes,3,opt,name=typed_config,json=typedConfig,proto3" json:"typed_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OverloadAction) Reset() {
	*x = OverloadAction{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverloadAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverloadAction) ProtoMessage() {}

func (x *OverloadAction) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverloadAction.ProtoReflect.Descriptor instead.
func (*OverloadAction) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{5}
}

func (x *OverloadAction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OverloadAction) GetTriggers() []*Trigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *OverloadAction) GetTypedConfig() *anypb.Any {
	if x != nil {
		return x.TypedConfig
	}
	return nil
}

// A point within the connection or request lifecycle that provides context on
// whether to shed load at that given stage for the current entity at the
// point.
type LoadShedPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is just a well-known string for the LoadShedPoint.
	// Deployment specific LoadShedPoints e.g. within a custom extension should
	// be prefixed by the company / deployment name to avoid colliding with any
	// open source LoadShedPoints.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A set of triggers for this LoadShedPoint. The LoadShedPoint will use the
	// the maximum state of all triggers, which can be scalar values between 0 and
	// 1 or saturated. A LoadShedPoint can only have one trigger for a given
	// resource e.g. :ref:`Trigger.name
	// <envoy_v3_api_field_config.overload.v3.Trigger.name>` must be unique in
	// this list.
	Triggers      []*Trigger `protobuf:"bytes,2,rep,name=triggers,proto3" json:"triggers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadShedPoint) Reset() {
	*x = LoadShedPoint{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadShedPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadShedPoint) ProtoMessage() {}

func (x *LoadShedPoint) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadShedPoint.ProtoReflect.Descriptor instead.
func (*LoadShedPoint) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{6}
}

func (x *LoadShedPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoadShedPoint) GetTriggers() []*Trigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

// Configuration for which accounts the WatermarkBuffer Factories should
// track.
type BufferFactoryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The minimum power of two at which Envoy starts tracking an account.
	//
	// Envoy has 8 power of two buckets starting with the provided exponent below.
	// Concretely the 1st bucket contains accounts for streams that use
	// [2^minimum_account_to_track_power_of_two,
	// 2^(minimum_account_to_track_power_of_two + 1)) bytes.
	// With the 8th bucket tracking accounts
	// >= 128 * 2^minimum_account_to_track_power_of_two.
	//
	// The maximum value is 56, since we're using uint64_t for bytes counting,
	// and that's the last value that would use the 8 buckets. In practice,
	// we don't expect the proxy to be holding 2^56 bytes.
	//
	// If omitted, Envoy should not do any tracking.
	MinimumAccountToTrackPowerOfTwo uint32 `protobuf:"varint,1,opt,name=minimum_account_to_track_power_of_two,json=minimumAccountToTrackPowerOfTwo,proto3" json:"minimum_account_to_track_power_of_two,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *BufferFactoryConfig) Reset() {
	*x = BufferFactoryConfig{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufferFactoryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferFactoryConfig) ProtoMessage() {}

func (x *BufferFactoryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferFactoryConfig.ProtoReflect.Descriptor instead.
func (*BufferFactoryConfig) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{7}
}

func (x *BufferFactoryConfig) GetMinimumAccountToTrackPowerOfTwo() uint32 {
	if x != nil {
		return x.MinimumAccountToTrackPowerOfTwo
	}
	return 0
}

// [#next-free-field: 6]
type OverloadManager struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The interval for refreshing resource usage.
	RefreshInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=refresh_interval,json=refreshInterval,proto3" json:"refresh_interval,omitempty"`
	// The set of resources to monitor.
	ResourceMonitors []*ResourceMonitor `protobuf:"bytes,2,rep,name=resource_monitors,json=resourceMonitors,proto3" json:"resource_monitors,omitempty"`
	// The set of overload actions.
	Actions []*OverloadAction `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	// The set of load shed points.
	LoadshedPoints []*LoadShedPoint `protobuf:"bytes,5,rep,name=loadshed_points,json=loadshedPoints,proto3" json:"loadshed_points,omitempty"`
	// Configuration for buffer factory.
	BufferFactoryConfig *BufferFactoryConfig `protobuf:"bytes,4,opt,name=buffer_factory_config,json=bufferFactoryConfig,proto3" json:"buffer_factory_config,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *OverloadManager) Reset() {
	*x = OverloadManager{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverloadManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverloadManager) ProtoMessage() {}

func (x *OverloadManager) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverloadManager.ProtoReflect.Descriptor instead.
func (*OverloadManager) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{8}
}

func (x *OverloadManager) GetRefreshInterval() *durationpb.Duration {
	if x != nil {
		return x.RefreshInterval
	}
	return nil
}

func (x *OverloadManager) GetResourceMonitors() []*ResourceMonitor {
	if x != nil {
		return x.ResourceMonitors
	}
	return nil
}

func (x *OverloadManager) GetActions() []*OverloadAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *OverloadManager) GetLoadshedPoints() []*LoadShedPoint {
	if x != nil {
		return x.LoadshedPoints
	}
	return nil
}

func (x *OverloadManager) GetBufferFactoryConfig() *BufferFactoryConfig {
	if x != nil {
		return x.BufferFactoryConfig
	}
	return nil
}

type ScaleTimersOverloadActionConfig_ScaleTimer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of timer this minimum applies to.
	Timer ScaleTimersOverloadActionConfig_TimerType `protobuf:"varint,1,opt,name=timer,proto3,enum=envoy.config.overload.v3.ScaleTimersOverloadActionConfig_TimerType" json:"timer,omitempty"`
	// Types that are valid to be assigned to OverloadAdjust:
	//
	//	*ScaleTimersOverloadActionConfig_ScaleTimer_MinTimeout
	//	*ScaleTimersOverloadActionConfig_ScaleTimer_MinScale
	OverloadAdjust isScaleTimersOverloadActionConfig_ScaleTimer_OverloadAdjust `protobuf_oneof:"overload_adjust"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) Reset() {
	*x = ScaleTimersOverloadActionConfig_ScaleTimer{}
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleTimersOverloadActionConfig_ScaleTimer) ProtoMessage() {}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_config_overload_v3_overload_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleTimersOverloadActionConfig_ScaleTimer.ProtoReflect.Descriptor instead.
func (*ScaleTimersOverloadActionConfig_ScaleTimer) Descriptor() ([]byte, []int) {
	return file_envoy_config_overload_v3_overload_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) GetTimer() ScaleTimersOverloadActionConfig_TimerType {
	if x != nil {
		return x.Timer
	}
	return ScaleTimersOverloadActionConfig_UNSPECIFIED
}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) GetOverloadAdjust() isScaleTimersOverloadActionConfig_ScaleTimer_OverloadAdjust {
	if x != nil {
		return x.OverloadAdjust
	}
	return nil
}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) GetMinTimeout() *durationpb.Duration {
	if x != nil {
		if x, ok := x.OverloadAdjust.(*ScaleTimersOverloadActionConfig_ScaleTimer_MinTimeout); ok {
			return x.MinTimeout
		}
	}
	return nil
}

func (x *ScaleTimersOverloadActionConfig_ScaleTimer) GetMinScale() *v3.Percent {
	if x != nil {
		if x, ok := x.OverloadAdjust.(*ScaleTimersOverloadActionConfig_ScaleTimer_MinScale); ok {
			return x.MinScale
		}
	}
	return nil
}

type isScaleTimersOverloadActionConfig_ScaleTimer_OverloadAdjust interface {
	isScaleTimersOverloadActionConfig_ScaleTimer_OverloadAdjust()
}

type ScaleTimersOverloadActionConfig_ScaleTimer_MinTimeout struct {
	// Sets the minimum duration as an absolute value.
	MinTimeout *durationpb.Duration `protobuf:"bytes,2,opt,name=min_timeout,json=minTimeout,proto3,oneof"`
}

type ScaleTimersOverloadActionConfig_ScaleTimer_MinScale struct {
	// Sets the minimum duration as a percentage of the maximum value.
	MinScale *v3.Percent `protobuf:"bytes,3,opt,name=min_scale,json=minScale,proto3,oneof"`
}

func (*ScaleTimersOverloadActionConfig_ScaleTimer_MinTimeout) isScaleTimersOverloadActionConfig_ScaleTimer_OverloadAdjust() {
}

func (*ScaleTimersOverloadActionConfig_ScaleTimer_MinScale) isScaleTimersOverloadActionConfig_ScaleTimer_OverloadAdjust() {
}

var File_envoy_config_overload_v3_overload_proto protoreflect.FileDescriptor

const file_envoy_config_overload_v3_overload_proto_rawDesc = "" +
	"\n" +
	"'envoy/config/overload/v3/overload.proto\x12\x18envoy.config.overload.v3\x1a\x1benvoy/type/v3/percent.proto\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\"\xbc\x01\n" +
	"\x0fResourceMonitor\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x129\n" +
	"\ftyped_config\x18\x03 \x01(\v2\x14.google.protobuf.AnyH\x00R\vtypedConfig:4\x9aň\x1e/\n" +
	"-envoy.config.overload.v2alpha.ResourceMonitorB\r\n" +
	"\vconfig_typeJ\x04\b\x02\x10\x03R\x06config\"x\n" +
	"\x10ThresholdTrigger\x12-\n" +
	"\x05value\x18\x01 \x01(\x01B\x17\xfaB\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x05value:5\x9aň\x1e0\n" +
	".envoy.config.overload.v2alpha.ThresholdTrigger\"\xa1\x01\n" +
	"\rScaledTrigger\x12D\n" +
	"\x11scaling_threshold\x18\x01 \x01(\x01B\x17\xfaB\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x10scalingThreshold\x12J\n" +
	"\x14saturation_threshold\x18\x02 \x01(\x01B\x17\xfaB\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00\xf0?)\x00\x00\x00\x00\x00\x00\x00\x00R\x13saturationThreshold\"\xf9\x01\n" +
	"\aTrigger\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12J\n" +
	"\tthreshold\x18\x02 \x01(\v2*.envoy.config.overload.v3.ThresholdTriggerH\x00R\tthreshold\x12A\n" +
	"\x06scaled\x18\x03 \x01(\v2'.envoy.config.overload.v3.ScaledTriggerH\x00R\x06scaled:,\x9aň\x1e'\n" +
	"%envoy.config.overload.v2alpha.TriggerB\x14\n" +
	"\rtrigger_oneof\x12\x03\xf8B\x01\"\xcb\x04\n" +
	"\x1fScaleTimersOverloadActionConfig\x12~\n" +
	"\x13timer_scale_factors\x18\x01 \x03(\v2D.envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimerB\b\xfaB\x05\x92\x01\x02\b\x01R\x11timerScaleFactors\x1a\x80\x02\n" +
	"\n" +
	"ScaleTimer\x12e\n" +
	"\x05timer\x18\x01 \x01(\x0e2C.envoy.config.overload.v3.ScaleTimersOverloadActionConfig.TimerTypeB\n" +
	"\xfaB\a\x82\x01\x04\x10\x01 \x00R\x05timer\x12<\n" +
	"\vmin_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationH\x00R\n" +
	"minTimeout\x125\n" +
	"\tmin_scale\x18\x03 \x01(\v2\x16.envoy.type.v3.PercentH\x00R\bminScaleB\x16\n" +
	"\x0foverload_adjust\x12\x03\xf8B\x01\"\xa4\x01\n" +
	"\tTimerType\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12#\n" +
	"\x1fHTTP_DOWNSTREAM_CONNECTION_IDLE\x10\x01\x12\x1f\n" +
	"\x1bHTTP_DOWNSTREAM_STREAM_IDLE\x10\x02\x12\x1c\n" +
	"\x18TRANSPORT_SOCKET_CONNECT\x10\x03\x12\"\n" +
	"\x1eHTTP_DOWNSTREAM_CONNECTION_MAX\x10\x04\"\xe4\x01\n" +
	"\x0eOverloadAction\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12G\n" +
	"\btriggers\x18\x02 \x03(\v2!.envoy.config.overload.v3.TriggerB\b\xfaB\x05\x92\x01\x02\b\x01R\btriggers\x127\n" +
	"\ftyped_config\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\vtypedConfig:3\x9aň\x1e.\n" +
	",envoy.config.overload.v2alpha.OverloadAction\"u\n" +
	"\rLoadShedPoint\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12G\n" +
	"\btriggers\x18\x02 \x03(\v2!.envoy.config.overload.v3.TriggerB\b\xfaB\x05\x92\x01\x02\b\x01R\btriggers\"p\n" +
	"\x13BufferFactoryConfig\x12Y\n" +
	"%minimum_account_to_track_power_of_two\x18\x01 \x01(\rB\t\xfaB\x06*\x04\x188(\n" +
	"R\x1fminimumAccountToTrackPowerOfTwo\"\xe8\x03\n" +
	"\x0fOverloadManager\x12D\n" +
	"\x10refresh_interval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0frefreshInterval\x12`\n" +
	"\x11resource_monitors\x18\x02 \x03(\v2).envoy.config.overload.v3.ResourceMonitorB\b\xfaB\x05\x92\x01\x02\b\x01R\x10resourceMonitors\x12B\n" +
	"\aactions\x18\x03 \x03(\v2(.envoy.config.overload.v3.OverloadActionR\aactions\x12P\n" +
	"\x0floadshed_points\x18\x05 \x03(\v2'.envoy.config.overload.v3.LoadShedPointR\x0eloadshedPoints\x12a\n" +
	"\x15buffer_factory_config\x18\x04 \x01(\v2-.envoy.config.overload.v3.BufferFactoryConfigR\x13bufferFactoryConfig:4\x9aň\x1e/\n" +
	"-envoy.config.overload.v2alpha.OverloadManagerB\x8d\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"&io.envoyproxy.envoy.config.overload.v3B\rOverloadProtoP\x01ZJgithub.com/envoyproxy/go-control-plane/envoy/config/overload/v3;overloadv3b\x06proto3"

var (
	file_envoy_config_overload_v3_overload_proto_rawDescOnce sync.Once
	file_envoy_config_overload_v3_overload_proto_rawDescData []byte
)

func file_envoy_config_overload_v3_overload_proto_rawDescGZIP() []byte {
	file_envoy_config_overload_v3_overload_proto_rawDescOnce.Do(func() {
		file_envoy_config_overload_v3_overload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_config_overload_v3_overload_proto_rawDesc), len(file_envoy_config_overload_v3_overload_proto_rawDesc)))
	})
	return file_envoy_config_overload_v3_overload_proto_rawDescData
}

var file_envoy_config_overload_v3_overload_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_envoy_config_overload_v3_overload_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_envoy_config_overload_v3_overload_proto_goTypes = []any{
	(ScaleTimersOverloadActionConfig_TimerType)(0),     // 0: envoy.config.overload.v3.ScaleTimersOverloadActionConfig.TimerType
	(*ResourceMonitor)(nil),                            // 1: envoy.config.overload.v3.ResourceMonitor
	(*ThresholdTrigger)(nil),                           // 2: envoy.config.overload.v3.ThresholdTrigger
	(*ScaledTrigger)(nil),                              // 3: envoy.config.overload.v3.ScaledTrigger
	(*Trigger)(nil),                                    // 4: envoy.config.overload.v3.Trigger
	(*ScaleTimersOverloadActionConfig)(nil),            // 5: envoy.config.overload.v3.ScaleTimersOverloadActionConfig
	(*OverloadAction)(nil),                             // 6: envoy.config.overload.v3.OverloadAction
	(*LoadShedPoint)(nil),                              // 7: envoy.config.overload.v3.LoadShedPoint
	(*BufferFactoryConfig)(nil),                        // 8: envoy.config.overload.v3.BufferFactoryConfig
	(*OverloadManager)(nil),                            // 9: envoy.config.overload.v3.OverloadManager
	(*ScaleTimersOverloadActionConfig_ScaleTimer)(nil), // 10: envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer
	(*anypb.Any)(nil),                                  // 11: google.protobuf.Any
	(*durationpb.Duration)(nil),                        // 12: google.protobuf.Duration
	(*v3.Percent)(nil),                                 // 13: envoy.type.v3.Percent
}
var file_envoy_config_overload_v3_overload_proto_depIdxs = []int32{
	11, // 0: envoy.config.overload.v3.ResourceMonitor.typed_config:type_name -> google.protobuf.Any
	2,  // 1: envoy.config.overload.v3.Trigger.threshold:type_name -> envoy.config.overload.v3.ThresholdTrigger
	3,  // 2: envoy.config.overload.v3.Trigger.scaled:type_name -> envoy.config.overload.v3.ScaledTrigger
	10, // 3: envoy.config.overload.v3.ScaleTimersOverloadActionConfig.timer_scale_factors:type_name -> envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer
	4,  // 4: envoy.config.overload.v3.OverloadAction.triggers:type_name -> envoy.config.overload.v3.Trigger
	11, // 5: envoy.config.overload.v3.OverloadAction.typed_config:type_name -> google.protobuf.Any
	4,  // 6: envoy.config.overload.v3.LoadShedPoint.triggers:type_name -> envoy.config.overload.v3.Trigger
	12, // 7: envoy.config.overload.v3.OverloadManager.refresh_interval:type_name -> google.protobuf.Duration
	1,  // 8: envoy.config.overload.v3.OverloadManager.resource_monitors:type_name -> envoy.config.overload.v3.ResourceMonitor
	6,  // 9: envoy.config.overload.v3.OverloadManager.actions:type_name -> envoy.config.overload.v3.OverloadAction
	7,  // 10: envoy.config.overload.v3.OverloadManager.loadshed_points:type_name -> envoy.config.overload.v3.LoadShedPoint
	8,  // 11: envoy.config.overload.v3.OverloadManager.buffer_factory_config:type_name -> envoy.config.overload.v3.BufferFactoryConfig
	0,  // 12: envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer.timer:type_name -> envoy.config.overload.v3.ScaleTimersOverloadActionConfig.TimerType
	12, // 13: envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer.min_timeout:type_name -> google.protobuf.Duration
	13, // 14: envoy.config.overload.v3.ScaleTimersOverloadActionConfig.ScaleTimer.min_scale:type_name -> envoy.type.v3.Percent
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_envoy_config_overload_v3_overload_proto_init() }
func file_envoy_config_overload_v3_overload_proto_init() {
	if File_envoy_config_overload_v3_overload_proto != nil {
		return
	}
	file_envoy_config_overload_v3_overload_proto_msgTypes[0].OneofWrappers = []any{
		(*ResourceMonitor_TypedConfig)(nil),
	}
	file_envoy_config_overload_v3_overload_proto_msgTypes[3].OneofWrappers = []any{
		(*Trigger_Threshold)(nil),
		(*Trigger_Scaled)(nil),
	}
	file_envoy_config_overload_v3_overload_proto_msgTypes[9].OneofWrappers = []any{
		(*ScaleTimersOverloadActionConfig_ScaleTimer_MinTimeout)(nil),
		(*ScaleTimersOverloadActionConfig_ScaleTimer_MinScale)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_config_overload_v3_overload_proto_rawDesc), len(file_envoy_config_overload_v3_overload_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_config_overload_v3_overload_proto_goTypes,
		DependencyIndexes: file_envoy_config_overload_v3_overload_proto_depIdxs,
		EnumInfos:         file_envoy_config_overload_v3_overload_proto_enumTypes,
		MessageInfos:      file_envoy_config_overload_v3_overload_proto_msgTypes,
	}.Build()
	File_envoy_config_overload_v3_overload_proto = out.File
	file_envoy_config_overload_v3_overload_proto_goTypes = nil
	file_envoy_config_overload_v3_overload_proto_depIdxs = nil
}
