// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/data/tap/v2alpha/wrapper.proto

package v2alpha

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Wrapper for all fully buffered and streamed tap traces that Envoy emits. This is required for
// sending traces over gRPC APIs or more easily persisting binary messages to files.
type TraceWrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Trace:
	//
	//	*TraceWrapper_HttpBufferedTrace
	//	*TraceWrapper_HttpStreamedTraceSegment
	//	*TraceWrapper_SocketBufferedTrace
	//	*TraceWrapper_SocketStreamedTraceSegment
	Trace         isTraceWrapper_Trace `protobuf_oneof:"trace"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraceWrapper) Reset() {
	*x = TraceWrapper{}
	mi := &file_envoy_data_tap_v2alpha_wrapper_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceWrapper) ProtoMessage() {}

func (x *TraceWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_data_tap_v2alpha_wrapper_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceWrapper.ProtoReflect.Descriptor instead.
func (*TraceWrapper) Descriptor() ([]byte, []int) {
	return file_envoy_data_tap_v2alpha_wrapper_proto_rawDescGZIP(), []int{0}
}

func (x *TraceWrapper) GetTrace() isTraceWrapper_Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *TraceWrapper) GetHttpBufferedTrace() *HttpBufferedTrace {
	if x != nil {
		if x, ok := x.Trace.(*TraceWrapper_HttpBufferedTrace); ok {
			return x.HttpBufferedTrace
		}
	}
	return nil
}

func (x *TraceWrapper) GetHttpStreamedTraceSegment() *HttpStreamedTraceSegment {
	if x != nil {
		if x, ok := x.Trace.(*TraceWrapper_HttpStreamedTraceSegment); ok {
			return x.HttpStreamedTraceSegment
		}
	}
	return nil
}

func (x *TraceWrapper) GetSocketBufferedTrace() *SocketBufferedTrace {
	if x != nil {
		if x, ok := x.Trace.(*TraceWrapper_SocketBufferedTrace); ok {
			return x.SocketBufferedTrace
		}
	}
	return nil
}

func (x *TraceWrapper) GetSocketStreamedTraceSegment() *SocketStreamedTraceSegment {
	if x != nil {
		if x, ok := x.Trace.(*TraceWrapper_SocketStreamedTraceSegment); ok {
			return x.SocketStreamedTraceSegment
		}
	}
	return nil
}

type isTraceWrapper_Trace interface {
	isTraceWrapper_Trace()
}

type TraceWrapper_HttpBufferedTrace struct {
	// An HTTP buffered tap trace.
	HttpBufferedTrace *HttpBufferedTrace `protobuf:"bytes,1,opt,name=http_buffered_trace,json=httpBufferedTrace,proto3,oneof"`
}

type TraceWrapper_HttpStreamedTraceSegment struct {
	// An HTTP streamed tap trace segment.
	HttpStreamedTraceSegment *HttpStreamedTraceSegment `protobuf:"bytes,2,opt,name=http_streamed_trace_segment,json=httpStreamedTraceSegment,proto3,oneof"`
}

type TraceWrapper_SocketBufferedTrace struct {
	// A socket buffered tap trace.
	SocketBufferedTrace *SocketBufferedTrace `protobuf:"bytes,3,opt,name=socket_buffered_trace,json=socketBufferedTrace,proto3,oneof"`
}

type TraceWrapper_SocketStreamedTraceSegment struct {
	// A socket streamed tap trace segment.
	SocketStreamedTraceSegment *SocketStreamedTraceSegment `protobuf:"bytes,4,opt,name=socket_streamed_trace_segment,json=socketStreamedTraceSegment,proto3,oneof"`
}

func (*TraceWrapper_HttpBufferedTrace) isTraceWrapper_Trace() {}

func (*TraceWrapper_HttpStreamedTraceSegment) isTraceWrapper_Trace() {}

func (*TraceWrapper_SocketBufferedTrace) isTraceWrapper_Trace() {}

func (*TraceWrapper_SocketStreamedTraceSegment) isTraceWrapper_Trace() {}

var File_envoy_data_tap_v2alpha_wrapper_proto protoreflect.FileDescriptor

const file_envoy_data_tap_v2alpha_wrapper_proto_rawDesc = "" +
	"\n" +
	"$envoy/data/tap/v2alpha/wrapper.proto\x12\x16envoy.data.tap.v2alpha\x1a!envoy/data/tap/v2alpha/http.proto\x1a&envoy/data/tap/v2alpha/transport.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xc8\x03\n" +
	"\fTraceWrapper\x12[\n" +
	"\x13http_buffered_trace\x18\x01 \x01(\v2).envoy.data.tap.v2alpha.HttpBufferedTraceH\x00R\x11httpBufferedTrace\x12q\n" +
	"\x1bhttp_streamed_trace_segment\x18\x02 \x01(\v20.envoy.data.tap.v2alpha.HttpStreamedTraceSegmentH\x00R\x18httpStreamedTraceSegment\x12a\n" +
	"\x15socket_buffered_trace\x18\x03 \x01(\v2+.envoy.data.tap.v2alpha.SocketBufferedTraceH\x00R\x13socketBufferedTrace\x12w\n" +
	"\x1dsocket_streamed_trace_segment\x18\x04 \x01(\v22.envoy.data.tap.v2alpha.SocketStreamedTraceSegmentH\x00R\x1asocketStreamedTraceSegmentB\f\n" +
	"\x05trace\x12\x03\xf8B\x01B}\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	"$io.envoyproxy.envoy.data.tap.v2alphaB\fWrapperProtoP\x01Z=github.com/envoyproxy/go-control-plane/envoy/data/tap/v2alphab\x06proto3"

var (
	file_envoy_data_tap_v2alpha_wrapper_proto_rawDescOnce sync.Once
	file_envoy_data_tap_v2alpha_wrapper_proto_rawDescData []byte
)

func file_envoy_data_tap_v2alpha_wrapper_proto_rawDescGZIP() []byte {
	file_envoy_data_tap_v2alpha_wrapper_proto_rawDescOnce.Do(func() {
		file_envoy_data_tap_v2alpha_wrapper_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_data_tap_v2alpha_wrapper_proto_rawDesc), len(file_envoy_data_tap_v2alpha_wrapper_proto_rawDesc)))
	})
	return file_envoy_data_tap_v2alpha_wrapper_proto_rawDescData
}

var file_envoy_data_tap_v2alpha_wrapper_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_data_tap_v2alpha_wrapper_proto_goTypes = []any{
	(*TraceWrapper)(nil),               // 0: envoy.data.tap.v2alpha.TraceWrapper
	(*HttpBufferedTrace)(nil),          // 1: envoy.data.tap.v2alpha.HttpBufferedTrace
	(*HttpStreamedTraceSegment)(nil),   // 2: envoy.data.tap.v2alpha.HttpStreamedTraceSegment
	(*SocketBufferedTrace)(nil),        // 3: envoy.data.tap.v2alpha.SocketBufferedTrace
	(*SocketStreamedTraceSegment)(nil), // 4: envoy.data.tap.v2alpha.SocketStreamedTraceSegment
}
var file_envoy_data_tap_v2alpha_wrapper_proto_depIdxs = []int32{
	1, // 0: envoy.data.tap.v2alpha.TraceWrapper.http_buffered_trace:type_name -> envoy.data.tap.v2alpha.HttpBufferedTrace
	2, // 1: envoy.data.tap.v2alpha.TraceWrapper.http_streamed_trace_segment:type_name -> envoy.data.tap.v2alpha.HttpStreamedTraceSegment
	3, // 2: envoy.data.tap.v2alpha.TraceWrapper.socket_buffered_trace:type_name -> envoy.data.tap.v2alpha.SocketBufferedTrace
	4, // 3: envoy.data.tap.v2alpha.TraceWrapper.socket_streamed_trace_segment:type_name -> envoy.data.tap.v2alpha.SocketStreamedTraceSegment
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_envoy_data_tap_v2alpha_wrapper_proto_init() }
func file_envoy_data_tap_v2alpha_wrapper_proto_init() {
	if File_envoy_data_tap_v2alpha_wrapper_proto != nil {
		return
	}
	file_envoy_data_tap_v2alpha_http_proto_init()
	file_envoy_data_tap_v2alpha_transport_proto_init()
	file_envoy_data_tap_v2alpha_wrapper_proto_msgTypes[0].OneofWrappers = []any{
		(*TraceWrapper_HttpBufferedTrace)(nil),
		(*TraceWrapper_HttpStreamedTraceSegment)(nil),
		(*TraceWrapper_SocketBufferedTrace)(nil),
		(*TraceWrapper_SocketStreamedTraceSegment)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_data_tap_v2alpha_wrapper_proto_rawDesc), len(file_envoy_data_tap_v2alpha_wrapper_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_data_tap_v2alpha_wrapper_proto_goTypes,
		DependencyIndexes: file_envoy_data_tap_v2alpha_wrapper_proto_depIdxs,
		MessageInfos:      file_envoy_data_tap_v2alpha_wrapper_proto_msgTypes,
	}.Build()
	File_envoy_data_tap_v2alpha_wrapper_proto = out.File
	file_envoy_data_tap_v2alpha_wrapper_proto_goTypes = nil
	file_envoy_data_tap_v2alpha_wrapper_proto_depIdxs = nil
}
