// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/geoip_providers/maxmind/v3/maxmind.proto

package maxmindv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/cncf/xds/go/xds/annotations/v3"
	v3 "github.com/envoyproxy/go-control-plane/envoy/extensions/geoip_providers/common/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [#next-free-field: 6]
type MaxMindConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Full file path to the Maxmind city database, e.g. /etc/GeoLite2-City.mmdb.
	// Database file is expected to have .mmdb extension.
	CityDbPath string `protobuf:"bytes,1,opt,name=city_db_path,json=cityDbPath,proto3" json:"city_db_path,omitempty"`
	// Full file path to the Maxmind ASN database, e.g. /etc/GeoLite2-ASN.mmdb.
	// Database file is expected to have .mmdb extension.
	// When is defined the ASN information will always be fetched from the “asn_db“.
	AsnDbPath string `protobuf:"bytes,2,opt,name=asn_db_path,json=asnDbPath,proto3" json:"asn_db_path,omitempty"`
	// Full file path to the Maxmind anonymous IP database, e.g. /etc/GeoIP2-Anonymous-IP.mmdb.
	// Database file is expected to have .mmdb extension.
	AnonDbPath string `protobuf:"bytes,3,opt,name=anon_db_path,json=anonDbPath,proto3" json:"anon_db_path,omitempty"`
	// Full file path to the Maxmind ISP database, e.g. /etc/GeoLite2-ISP.mmdb.
	// Database file is expected to have .mmdb extension.
	// If “asn_db_path“ is not defined, ASN information will be fetched from
	// “isp_db“ instead.
	IspDbPath string `protobuf:"bytes,5,opt,name=isp_db_path,json=ispDbPath,proto3" json:"isp_db_path,omitempty"`
	// Common provider configuration that specifies which geolocation headers will be populated with geolocation data.
	CommonProviderConfig *v3.CommonGeoipProviderConfig `protobuf:"bytes,4,opt,name=common_provider_config,json=commonProviderConfig,proto3" json:"common_provider_config,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MaxMindConfig) Reset() {
	*x = MaxMindConfig{}
	mi := &file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaxMindConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxMindConfig) ProtoMessage() {}

func (x *MaxMindConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxMindConfig.ProtoReflect.Descriptor instead.
func (*MaxMindConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescGZIP(), []int{0}
}

func (x *MaxMindConfig) GetCityDbPath() string {
	if x != nil {
		return x.CityDbPath
	}
	return ""
}

func (x *MaxMindConfig) GetAsnDbPath() string {
	if x != nil {
		return x.AsnDbPath
	}
	return ""
}

func (x *MaxMindConfig) GetAnonDbPath() string {
	if x != nil {
		return x.AnonDbPath
	}
	return ""
}

func (x *MaxMindConfig) GetIspDbPath() string {
	if x != nil {
		return x.IspDbPath
	}
	return ""
}

func (x *MaxMindConfig) GetCommonProviderConfig() *v3.CommonGeoipProviderConfig {
	if x != nil {
		return x.CommonProviderConfig
	}
	return nil
}

var File_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto protoreflect.FileDescriptor

const file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDesc = "" +
	"\n" +
	"9envoy/extensions/geoip_providers/maxmind/v3/maxmind.proto\x12+envoy.extensions.geoip_providers.maxmind.v3\x1a7envoy/extensions/geoip_providers/common/v3/common.proto\x1a\x1fxds/annotations/v3/status.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xf3\x02\n" +
	"\rMaxMindConfig\x126\n" +
	"\fcity_db_path\x18\x01 \x01(\tB\x14\xfaB\x11r\x0f2\r^$|^.*\\.mmdb$R\n" +
	"cityDbPath\x124\n" +
	"\vasn_db_path\x18\x02 \x01(\tB\x14\xfaB\x11r\x0f2\r^$|^.*\\.mmdb$R\tasnDbPath\x126\n" +
	"\fanon_db_path\x18\x03 \x01(\tB\x14\xfaB\x11r\x0f2\r^$|^.*\\.mmdb$R\n" +
	"anonDbPath\x124\n" +
	"\visp_db_path\x18\x05 \x01(\tB\x14\xfaB\x11r\x0f2\r^$|^.*\\.mmdb$R\tispDbPath\x12\x85\x01\n" +
	"\x16common_provider_config\x18\x04 \x01(\v2E.envoy.extensions.geoip_providers.common.v3.CommonGeoipProviderConfigB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x14commonProviderConfigB\xb9\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\xd2Ƥ\xe1\x06\x02\b\x01\n" +
	"9io.envoyproxy.envoy.extensions.geoip_providers.maxmind.v3B\fMaxmindProtoP\x01Z\\github.com/envoyproxy/go-control-plane/envoy/extensions/geoip_providers/maxmind/v3;maxmindv3b\x06proto3"

var (
	file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescOnce sync.Once
	file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescData []byte
)

func file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescGZIP() []byte {
	file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDesc), len(file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDesc)))
	})
	return file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDescData
}

var file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_goTypes = []any{
	(*MaxMindConfig)(nil),                // 0: envoy.extensions.geoip_providers.maxmind.v3.MaxMindConfig
	(*v3.CommonGeoipProviderConfig)(nil), // 1: envoy.extensions.geoip_providers.common.v3.CommonGeoipProviderConfig
}
var file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.geoip_providers.maxmind.v3.MaxMindConfig.common_provider_config:type_name -> envoy.extensions.geoip_providers.common.v3.CommonGeoipProviderConfig
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_init() }
func file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_init() {
	if File_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDesc), len(file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_msgTypes,
	}.Build()
	File_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto = out.File
	file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_goTypes = nil
	file_envoy_extensions_geoip_providers_maxmind_v3_maxmind_proto_depIdxs = nil
}
