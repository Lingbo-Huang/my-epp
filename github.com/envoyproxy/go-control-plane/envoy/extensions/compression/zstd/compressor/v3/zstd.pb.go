// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/compression/zstd/compressor/v3/zstd.proto

package compressorv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Reference to http://facebook.github.io/zstd/zstd_manual.html
type Zstd_Strategy int32

const (
	Zstd_DEFAULT  Zstd_Strategy = 0
	Zstd_FAST     Zstd_Strategy = 1
	Zstd_DFAST    Zstd_Strategy = 2
	Zstd_GREEDY   Zstd_Strategy = 3
	Zstd_LAZY     Zstd_Strategy = 4
	Zstd_LAZY2    Zstd_Strategy = 5
	Zstd_BTLAZY2  Zstd_Strategy = 6
	Zstd_BTOPT    Zstd_Strategy = 7
	Zstd_BTULTRA  Zstd_Strategy = 8
	Zstd_BTULTRA2 Zstd_Strategy = 9
)

// Enum value maps for Zstd_Strategy.
var (
	Zstd_Strategy_name = map[int32]string{
		0: "DEFAULT",
		1: "FAST",
		2: "DFAST",
		3: "GREEDY",
		4: "LAZY",
		5: "LAZY2",
		6: "BTLAZY2",
		7: "BTOPT",
		8: "BTULTRA",
		9: "BTULTRA2",
	}
	Zstd_Strategy_value = map[string]int32{
		"DEFAULT":  0,
		"FAST":     1,
		"DFAST":    2,
		"GREEDY":   3,
		"LAZY":     4,
		"LAZY2":    5,
		"BTLAZY2":  6,
		"BTOPT":    7,
		"BTULTRA":  8,
		"BTULTRA2": 9,
	}
)

func (x Zstd_Strategy) Enum() *Zstd_Strategy {
	p := new(Zstd_Strategy)
	*p = x
	return p
}

func (x Zstd_Strategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Zstd_Strategy) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_enumTypes[0].Descriptor()
}

func (Zstd_Strategy) Type() protoreflect.EnumType {
	return &file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_enumTypes[0]
}

func (x Zstd_Strategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Zstd_Strategy.Descriptor instead.
func (Zstd_Strategy) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescGZIP(), []int{0, 0}
}

// [#next-free-field: 6]
type Zstd struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Set compression parameters according to pre-defined compression level table.
	// Note that exact compression parameters are dynamically determined,
	// depending on both compression level and source content size (when known).
	// Value 0 means default, and default level is 3.
	// Setting a level does not automatically set all other compression parameters
	// to default. Setting this will however eventually dynamically impact the compression
	// parameters which have not been manually set. The manually set
	// ones will 'stick'.
	CompressionLevel *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=compression_level,json=compressionLevel,proto3" json:"compression_level,omitempty"`
	// A 32-bits checksum of content is written at end of frame. If not set, defaults to false.
	EnableChecksum bool `protobuf:"varint,2,opt,name=enable_checksum,json=enableChecksum,proto3" json:"enable_checksum,omitempty"`
	// The higher the value of selected strategy, the more complex it is,
	// resulting in stronger and slower compression.
	// Special: value 0 means "use default strategy".
	Strategy Zstd_Strategy `protobuf:"varint,3,opt,name=strategy,proto3,enum=envoy.extensions.compression.zstd.compressor.v3.Zstd_Strategy" json:"strategy,omitempty"`
	// A dictionary for compression. Zstd offers dictionary compression, which greatly improves
	// efficiency on small files and messages. Each dictionary will be generated with a dictionary ID
	// that can be used to search the same dictionary during decompression.
	// Please refer to `zstd manual <https://github.com/facebook/zstd/blob/dev/programs/zstd.1.md#dictionary-builder>`_
	// to train a specific dictionary for compression.
	Dictionary *v3.DataSource `protobuf:"bytes,4,opt,name=dictionary,proto3" json:"dictionary,omitempty"`
	// Value for compressor's next output buffer. If not set, defaults to 4096.
	ChunkSize     *wrapperspb.UInt32Value `protobuf:"bytes,5,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Zstd) Reset() {
	*x = Zstd{}
	mi := &file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Zstd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zstd) ProtoMessage() {}

func (x *Zstd) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zstd.ProtoReflect.Descriptor instead.
func (*Zstd) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescGZIP(), []int{0}
}

func (x *Zstd) GetCompressionLevel() *wrapperspb.UInt32Value {
	if x != nil {
		return x.CompressionLevel
	}
	return nil
}

func (x *Zstd) GetEnableChecksum() bool {
	if x != nil {
		return x.EnableChecksum
	}
	return false
}

func (x *Zstd) GetStrategy() Zstd_Strategy {
	if x != nil {
		return x.Strategy
	}
	return Zstd_DEFAULT
}

func (x *Zstd) GetDictionary() *v3.DataSource {
	if x != nil {
		return x.Dictionary
	}
	return nil
}

func (x *Zstd) GetChunkSize() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ChunkSize
	}
	return nil
}

var File_envoy_extensions_compression_zstd_compressor_v3_zstd_proto protoreflect.FileDescriptor

const file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDesc = "" +
	"\n" +
	":envoy/extensions/compression/zstd/compressor/v3/zstd.proto\x12/envoy.extensions.compression.zstd.compressor.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xf0\x03\n" +
	"\x04Zstd\x12I\n" +
	"\x11compression_level\x18\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x10compressionLevel\x12'\n" +
	"\x0fenable_checksum\x18\x02 \x01(\bR\x0eenableChecksum\x12d\n" +
	"\bstrategy\x18\x03 \x01(\x0e2>.envoy.extensions.compression.zstd.compressor.v3.Zstd.StrategyB\b\xfaB\x05\x82\x01\x02\x10\x01R\bstrategy\x12@\n" +
	"\n" +
	"dictionary\x18\x04 \x01(\v2 .envoy.config.core.v3.DataSourceR\n" +
	"dictionary\x12I\n" +
	"\n" +
	"chunk_size\x18\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueB\f\xfaB\t*\a\x18\x80\x80\x04(\x80 R\tchunkSize\"\x80\x01\n" +
	"\bStrategy\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\b\n" +
	"\x04FAST\x10\x01\x12\t\n" +
	"\x05DFAST\x10\x02\x12\n" +
	"\n" +
	"\x06GREEDY\x10\x03\x12\b\n" +
	"\x04LAZY\x10\x04\x12\t\n" +
	"\x05LAZY2\x10\x05\x12\v\n" +
	"\aBTLAZY2\x10\x06\x12\t\n" +
	"\x05BTOPT\x10\a\x12\v\n" +
	"\aBTULTRA\x10\b\x12\f\n" +
	"\bBTULTRA2\x10\tB\xb9\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"=io.envoyproxy.envoy.extensions.compression.zstd.compressor.v3B\tZstdProtoP\x01Zcgithub.com/envoyproxy/go-control-plane/envoy/extensions/compression/zstd/compressor/v3;compressorv3b\x06proto3"

var (
	file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescOnce sync.Once
	file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescData []byte
)

func file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescGZIP() []byte {
	file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDesc), len(file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDesc)))
	})
	return file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDescData
}

var file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_goTypes = []any{
	(Zstd_Strategy)(0),             // 0: envoy.extensions.compression.zstd.compressor.v3.Zstd.Strategy
	(*Zstd)(nil),                   // 1: envoy.extensions.compression.zstd.compressor.v3.Zstd
	(*wrapperspb.UInt32Value)(nil), // 2: google.protobuf.UInt32Value
	(*v3.DataSource)(nil),          // 3: envoy.config.core.v3.DataSource
}
var file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_depIdxs = []int32{
	2, // 0: envoy.extensions.compression.zstd.compressor.v3.Zstd.compression_level:type_name -> google.protobuf.UInt32Value
	0, // 1: envoy.extensions.compression.zstd.compressor.v3.Zstd.strategy:type_name -> envoy.extensions.compression.zstd.compressor.v3.Zstd.Strategy
	3, // 2: envoy.extensions.compression.zstd.compressor.v3.Zstd.dictionary:type_name -> envoy.config.core.v3.DataSource
	2, // 3: envoy.extensions.compression.zstd.compressor.v3.Zstd.chunk_size:type_name -> google.protobuf.UInt32Value
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_init() }
func file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_init() {
	if File_envoy_extensions_compression_zstd_compressor_v3_zstd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDesc), len(file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_depIdxs,
		EnumInfos:         file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_enumTypes,
		MessageInfos:      file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_msgTypes,
	}.Build()
	File_envoy_extensions_compression_zstd_compressor_v3_zstd_proto = out.File
	file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_goTypes = nil
	file_envoy_extensions_compression_zstd_compressor_v3_zstd_proto_depIdxs = nil
}
