// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/compression/zstd/decompressor/v3/zstd.proto

package decompressorv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Zstd struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dictionaries for decompression. Zstd offers dictionary compression, which greatly improves
	// efficiency on small files and messages. It is necessary to ensure that the dictionary used for
	// decompression is the same as the compression dictionary. Multiple dictionaries can be set, and the
	// dictionary will be automatically selected for decompression according to the dictionary ID in the
	// source content.
	// Please refer to `zstd manual <https://github.com/facebook/zstd/blob/dev/programs/zstd.1.md#dictionary-builder>`_
	// to train specific dictionaries for decompression.
	Dictionaries []*v3.DataSource `protobuf:"bytes,1,rep,name=dictionaries,proto3" json:"dictionaries,omitempty"`
	// Value for decompressor's next output buffer. If not set, defaults to 4096.
	ChunkSize     *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Zstd) Reset() {
	*x = Zstd{}
	mi := &file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Zstd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zstd) ProtoMessage() {}

func (x *Zstd) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zstd.ProtoReflect.Descriptor instead.
func (*Zstd) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescGZIP(), []int{0}
}

func (x *Zstd) GetDictionaries() []*v3.DataSource {
	if x != nil {
		return x.Dictionaries
	}
	return nil
}

func (x *Zstd) GetChunkSize() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ChunkSize
	}
	return nil
}

var File_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto protoreflect.FileDescriptor

const file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDesc = "" +
	"\n" +
	"<envoy/extensions/compression/zstd/decompressor/v3/zstd.proto\x121envoy.extensions.compression.zstd.decompressor.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\x97\x01\n" +
	"\x04Zstd\x12D\n" +
	"\fdictionaries\x18\x01 \x03(\v2 .envoy.config.core.v3.DataSourceR\fdictionaries\x12I\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueB\f\xfaB\t*\a\x18\x80\x80\x04(\x80 R\tchunkSizeB\xbf\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"?io.envoyproxy.envoy.extensions.compression.zstd.decompressor.v3B\tZstdProtoP\x01Zggithub.com/envoyproxy/go-control-plane/envoy/extensions/compression/zstd/decompressor/v3;decompressorv3b\x06proto3"

var (
	file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescOnce sync.Once
	file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescData []byte
)

func file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescGZIP() []byte {
	file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDesc), len(file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDesc)))
	})
	return file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDescData
}

var file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_goTypes = []any{
	(*Zstd)(nil),                   // 0: envoy.extensions.compression.zstd.decompressor.v3.Zstd
	(*v3.DataSource)(nil),          // 1: envoy.config.core.v3.DataSource
	(*wrapperspb.UInt32Value)(nil), // 2: google.protobuf.UInt32Value
}
var file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.compression.zstd.decompressor.v3.Zstd.dictionaries:type_name -> envoy.config.core.v3.DataSource
	2, // 1: envoy.extensions.compression.zstd.decompressor.v3.Zstd.chunk_size:type_name -> google.protobuf.UInt32Value
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_init() }
func file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_init() {
	if File_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDesc), len(file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_msgTypes,
	}.Build()
	File_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto = out.File
	file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_goTypes = nil
	file_envoy_extensions_compression_zstd_decompressor_v3_zstd_proto_depIdxs = nil
}
