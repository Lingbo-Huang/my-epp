// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/http/stateful_session/header/v3/header.proto

package headerv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This extension allows the session state to be tracked via request headers.
//
// This extension encodes the address of the upstream host selected by the load balancer
// into a response header with the :ref:`header configuration
// <envoy_v3_api_msg_extensions.http.stateful_session.header.v3.HeaderBasedSessionState>`.
// When new requests are incoming, this extension will try to parse the specific upstream host
// address by header name. If the address parsed from the header corresponds to a valid
// upstream host, this upstream host will be selected first. See :ref:`stateful session filter
// <envoy_v3_api_msg_extensions.filters.http.stateful_session.v3.StatefulSession>`.
//
// For example, if the header name is set to “session-header“, Envoy will prefer “1.2.3.4:80“
// as the upstream host when the request contains the following header:
//
// .. code-block:: none
//
//	session-header: "MS4yLjMuNDo4MA=="
//
// When processing the upstream response, if “1.2.3.4:80“ is indeed the final choice the extension
// does nothing. If “1.2.3.4:80“ is not the final choice, the new selected host will be set to
// response headers (via the “session-header“ response header).
//
// [#extension: envoy.http.stateful_session.header]
type HeaderBasedSessionState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name that will be used to obtain header value from downstream HTTP request or generate
	// new header for downstream.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderBasedSessionState) Reset() {
	*x = HeaderBasedSessionState{}
	mi := &file_envoy_extensions_http_stateful_session_header_v3_header_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderBasedSessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderBasedSessionState) ProtoMessage() {}

func (x *HeaderBasedSessionState) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_http_stateful_session_header_v3_header_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderBasedSessionState.ProtoReflect.Descriptor instead.
func (*HeaderBasedSessionState) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescGZIP(), []int{0}
}

func (x *HeaderBasedSessionState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_envoy_extensions_http_stateful_session_header_v3_header_proto protoreflect.FileDescriptor

const file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDesc = "" +
	"\n" +
	"=envoy/extensions/http/stateful_session/header/v3/header.proto\x120envoy.extensions.http.stateful_session.header.v3\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"6\n" +
	"\x17HeaderBasedSessionState\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04nameB\xb9\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	">io.envoyproxy.envoy.extensions.http.stateful_session.header.v3B\vHeaderProtoP\x01Z`github.com/envoyproxy/go-control-plane/envoy/extensions/http/stateful_session/header/v3;headerv3b\x06proto3"

var (
	file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescOnce sync.Once
	file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescData []byte
)

func file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescGZIP() []byte {
	file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDesc), len(file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDesc)))
	})
	return file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDescData
}

var file_envoy_extensions_http_stateful_session_header_v3_header_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_http_stateful_session_header_v3_header_proto_goTypes = []any{
	(*HeaderBasedSessionState)(nil), // 0: envoy.extensions.http.stateful_session.header.v3.HeaderBasedSessionState
}
var file_envoy_extensions_http_stateful_session_header_v3_header_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envoy_extensions_http_stateful_session_header_v3_header_proto_init() }
func file_envoy_extensions_http_stateful_session_header_v3_header_proto_init() {
	if File_envoy_extensions_http_stateful_session_header_v3_header_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDesc), len(file_envoy_extensions_http_stateful_session_header_v3_header_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_http_stateful_session_header_v3_header_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_http_stateful_session_header_v3_header_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_http_stateful_session_header_v3_header_proto_msgTypes,
	}.Build()
	File_envoy_extensions_http_stateful_session_header_v3_header_proto = out.File
	file_envoy_extensions_http_stateful_session_header_v3_header_proto_goTypes = nil
	file_envoy_extensions_http_stateful_session_header_v3_header_proto_depIdxs = nil
}
