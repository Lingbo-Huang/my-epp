// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/retry/priority/previous_priorities/v3/previous_priorities_config.proto

package previous_prioritiesv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A retry host selector that attempts to spread retries between priorities, even if certain
// priorities would not normally be attempted due to higher priorities being available.
//
// As priorities get excluded, load will be distributed amongst the remaining healthy priorities
// based on the relative health of the priorities, matching how load is distributed during regular
// host selection. For example, given priority healths of {100, 50, 50}, the original load will be
// {100, 0, 0} (since P0 has capacity to handle 100% of the traffic). If P0 is excluded, the load
// changes to {0, 50, 50}, because P1 is only able to handle 50% of the traffic, causing the
// remaining to spill over to P2.
//
// Each priority attempted will be excluded until there are no healthy priorities left, at which
// point the list of attempted priorities will be reset, essentially starting from the beginning.
// For example, given three priorities P0, P1, P2 with healthy % of 100, 0 and 50 respectively, the
// following sequence of priorities would be selected (assuming update_frequency = 1):
// Attempt 1: P0 (P0 is 100% healthy)
// Attempt 2: P2 (P0 already attempted, P2 only healthy priority)
// Attempt 3: P0 (no healthy priorities, reset)
// Attempt 4: P2
//
// In the case of all upstream hosts being unhealthy, no adjustments will be made to the original
// priority load, so behavior should be identical to not using this plugin.
//
// Using this PriorityFilter requires rebuilding the priority load, which runs in O(# of
// priorities), which might incur significant overhead for clusters with many priorities.
// [#extension: envoy.retry_priorities.previous_priorities]
type PreviousPrioritiesConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How often the priority load should be updated based on previously attempted priorities. Useful
	// to allow each priorities to receive more than one request before being excluded or to reduce
	// the number of times that the priority load has to be recomputed.
	//
	// For example, by setting this to 2, then the first two attempts (initial attempt and first
	// retry) will use the unmodified priority load. The third and fourth attempt will use priority
	// load which excludes the priorities routed to with the first two attempts, and the fifth and
	// sixth attempt will use the priority load excluding the priorities used for the first four
	// attempts.
	//
	// Must be greater than 0.
	UpdateFrequency int32 `protobuf:"varint,1,opt,name=update_frequency,json=updateFrequency,proto3" json:"update_frequency,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PreviousPrioritiesConfig) Reset() {
	*x = PreviousPrioritiesConfig{}
	mi := &file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviousPrioritiesConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousPrioritiesConfig) ProtoMessage() {}

func (x *PreviousPrioritiesConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousPrioritiesConfig.ProtoReflect.Descriptor instead.
func (*PreviousPrioritiesConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescGZIP(), []int{0}
}

func (x *PreviousPrioritiesConfig) GetUpdateFrequency() int32 {
	if x != nil {
		return x.UpdateFrequency
	}
	return 0
}

var File_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto protoreflect.FileDescriptor

const file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDesc = "" +
	"\n" +
	"Wenvoy/extensions/retry/priority/previous_priorities/v3/previous_priorities_config.proto\x126envoy.extensions.retry.priority.previous_priorities.v3\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\"\x96\x01\n" +
	"\x18PreviousPrioritiesConfig\x122\n" +
	"\x10update_frequency\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x0fupdateFrequency:F\x9a≈à\x1eA\n" +
	"?envoy.config.retry.previous_priorities.PreviousPrioritiesConfigB\xe4\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"Dio.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3B\x1dPreviousPrioritiesConfigProtoP\x01Zsgithub.com/envoyproxy/go-control-plane/envoy/extensions/retry/priority/previous_priorities/v3;previous_prioritiesv3b\x06proto3"

var (
	file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescOnce sync.Once
	file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescData []byte
)

func file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescGZIP() []byte {
	file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDesc), len(file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDesc)))
	})
	return file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDescData
}

var file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_goTypes = []any{
	(*PreviousPrioritiesConfig)(nil), // 0: envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig
}
var file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_init()
}
func file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_init() {
	if File_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDesc), len(file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_msgTypes,
	}.Build()
	File_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto = out.File
	file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_goTypes = nil
	file_envoy_extensions_retry_priority_previous_priorities_v3_previous_priorities_config_proto_depIdxs = nil
}
