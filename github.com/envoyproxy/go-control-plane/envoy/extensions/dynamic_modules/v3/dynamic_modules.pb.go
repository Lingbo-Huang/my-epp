// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/dynamic_modules/v3/dynamic_modules.proto

package dynamic_modulesv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration of a dynamic module. A dynamic module is a shared object file that can be loaded via dlopen
// by various Envoy extension points. Currently, only HTTP filter (envoy.filters.http.dynamic_modules) is supported.
//
// How a module is loaded is determined by the extension point that uses it. For example, the HTTP filter
// loads the module with dlopen when Envoy receives a configuration that references the module at load time.
// If loading the module fails, the configuration will be rejected.
//
// Whether or not the shared object is the same is determined by the file path as well as the file's inode depending
// on the platform. Notably, if the file path and the content of the file are the same, the shared object will be reused.
//
// A module must be compatible with the ABI specified in :repo:`abi.h <source/extensions/dynamic_modules/abi.h>`.
// Currently, compatibility is only guaranteed by an exact version match between the Envoy
// codebase and the dynamic module SDKs. In the future, after the ABI is stabilized, we will revisit
// this restriction and hopefully provide a wider compatibility guarantee. Until then, Envoy
// checks the hash of the ABI header files to ensure that the dynamic modules are built against the
// same version of the ABI.
type DynamicModuleConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the dynamic module. The client is expected to have some configuration indicating where to search for the module.
	// In Envoy, the search path can only be configured via the environment variable “ENVOY_DYNAMIC_MODULES_SEARCH_PATH“.
	// The actual search path is “${ENVOY_DYNAMIC_MODULES_SEARCH_PATH}/lib${name}.so“. TODO: make the search path configurable via
	// command line options.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Set true to prevent the module from being unloaded with dlclose.
	// This is useful for modules that have global state that should not be unloaded.
	// A module is closed when no more references to it exist in the process. For example,
	// no HTTP filters are using the module (e.g. after configuration update).
	DoNotClose    bool `protobuf:"varint,3,opt,name=do_not_close,json=doNotClose,proto3" json:"do_not_close,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicModuleConfig) Reset() {
	*x = DynamicModuleConfig{}
	mi := &file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicModuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicModuleConfig) ProtoMessage() {}

func (x *DynamicModuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicModuleConfig.ProtoReflect.Descriptor instead.
func (*DynamicModuleConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescGZIP(), []int{0}
}

func (x *DynamicModuleConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynamicModuleConfig) GetDoNotClose() bool {
	if x != nil {
		return x.DoNotClose
	}
	return false
}

var File_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto protoreflect.FileDescriptor

const file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDesc = "" +
	"\n" +
	"9envoy/extensions/dynamic_modules/v3/dynamic_modules.proto\x12#envoy.extensions.dynamic_modules.v3\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"T\n" +
	"\x13DynamicModuleConfig\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\fdo_not_close\x18\x03 \x01(\bR\n" +
	"doNotCloseB\xb0\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"1io.envoyproxy.envoy.extensions.dynamic_modules.v3B\x13DynamicModulesProtoP\x01Z\\github.com/envoyproxy/go-control-plane/envoy/extensions/dynamic_modules/v3;dynamic_modulesv3b\x06proto3"

var (
	file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescOnce sync.Once
	file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescData []byte
)

func file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescGZIP() []byte {
	file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDesc), len(file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDesc)))
	})
	return file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDescData
}

var file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_goTypes = []any{
	(*DynamicModuleConfig)(nil), // 0: envoy.extensions.dynamic_modules.v3.DynamicModuleConfig
}
var file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_init() }
func file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_init() {
	if File_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDesc), len(file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_msgTypes,
	}.Build()
	File_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto = out.File
	file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_goTypes = nil
	file_envoy_extensions_dynamic_modules_v3_dynamic_modules_proto_depIdxs = nil
}
