// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/transport_sockets/tcp_stats/v3/tcp_stats.proto

package tcp_statsv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the TCP Stats transport socket wrapper, which wraps another transport socket for
// all communication, but emits stats about the underlying TCP connection.
//
// The stats are documented :ref:`here <config_listener_stats_tcp>` for listeners and
// :ref:`here <config_cluster_manager_cluster_stats_tcp>` for clusters.
//
// This transport socket is currently only supported on Linux.
type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The underlying transport socket being wrapped.
	TransportSocket *v3.TransportSocket `protobuf:"bytes,1,opt,name=transport_socket,json=transportSocket,proto3" json:"transport_socket,omitempty"`
	// Period to update stats while the connection is open. If unset, updates only happen when the
	// connection is closed. Stats are always updated one final time when the connection is closed.
	UpdatePeriod  *durationpb.Duration `protobuf:"bytes,2,opt,name=update_period,json=updatePeriod,proto3" json:"update_period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetTransportSocket() *v3.TransportSocket {
	if x != nil {
		return x.TransportSocket
	}
	return nil
}

func (x *Config) GetUpdatePeriod() *durationpb.Duration {
	if x != nil {
		return x.UpdatePeriod
	}
	return nil
}

var File_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto protoreflect.FileDescriptor

const file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDesc = "" +
	"\n" +
	"?envoy/extensions/transport_sockets/tcp_stats/v3/tcp_stats.proto\x12/envoy.extensions.transport_sockets.tcp_stats.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xb2\x01\n" +
	"\x06Config\x12Z\n" +
	"\x10transport_socket\x18\x01 \x01(\v2%.envoy.config.core.v3.TransportSocketB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x0ftransportSocket\x12L\n" +
	"\rupdate_period\x18\x02 \x01(\v2\x19.google.protobuf.DurationB\f\xfaB\t\xaa\x01\x062\x04\x10\xc0\x84=R\fupdatePeriodB\xbc\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"=io.envoyproxy.envoy.extensions.transport_sockets.tcp_stats.v3B\rTcpStatsProtoP\x01Zbgithub.com/envoyproxy/go-control-plane/envoy/extensions/transport_sockets/tcp_stats/v3;tcp_statsv3b\x06proto3"

var (
	file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescOnce sync.Once
	file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescData []byte
)

func file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescGZIP() []byte {
	file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDesc), len(file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDesc)))
	})
	return file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDescData
}

var file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_goTypes = []any{
	(*Config)(nil),              // 0: envoy.extensions.transport_sockets.tcp_stats.v3.Config
	(*v3.TransportSocket)(nil),  // 1: envoy.config.core.v3.TransportSocket
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
}
var file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.transport_sockets.tcp_stats.v3.Config.transport_socket:type_name -> envoy.config.core.v3.TransportSocket
	2, // 1: envoy.extensions.transport_sockets.tcp_stats.v3.Config.update_period:type_name -> google.protobuf.Duration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_init() }
func file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_init() {
	if File_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDesc), len(file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_msgTypes,
	}.Build()
	File_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto = out.File
	file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_goTypes = nil
	file_envoy_extensions_transport_sockets_tcp_stats_v3_tcp_stats_proto_depIdxs = nil
}
