// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/http/header_mutation/v3/header_mutation.proto

package header_mutationv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/common/mutation_rules/v3"
	v31 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [#next-free-field: 6]
type Mutations struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The request mutations are applied before the request is forwarded to the upstream cluster.
	RequestMutations []*v3.HeaderMutation `protobuf:"bytes,1,rep,name=request_mutations,json=requestMutations,proto3" json:"request_mutations,omitempty"`
	// The “path“ header query parameter mutations are applied after “request_mutations“ and before the request
	// is forwarded to the next filter in the filter chain.
	QueryParameterMutations []*v31.KeyValueMutation `protobuf:"bytes,3,rep,name=query_parameter_mutations,json=queryParameterMutations,proto3" json:"query_parameter_mutations,omitempty"`
	// The response mutations are applied before the response is sent to the downstream client.
	ResponseMutations []*v3.HeaderMutation `protobuf:"bytes,2,rep,name=response_mutations,json=responseMutations,proto3" json:"response_mutations,omitempty"`
	// The response trailer mutations are applied before the response is sent to the downstream client.
	ResponseTrailersMutations []*v3.HeaderMutation `protobuf:"bytes,4,rep,name=response_trailers_mutations,json=responseTrailersMutations,proto3" json:"response_trailers_mutations,omitempty"`
	// The request trailer mutations are applied before the request is sent to the upstream cluster.
	RequestTrailersMutations []*v3.HeaderMutation `protobuf:"bytes,5,rep,name=request_trailers_mutations,json=requestTrailersMutations,proto3" json:"request_trailers_mutations,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Mutations) Reset() {
	*x = Mutations{}
	mi := &file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mutations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mutations) ProtoMessage() {}

func (x *Mutations) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mutations.ProtoReflect.Descriptor instead.
func (*Mutations) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescGZIP(), []int{0}
}

func (x *Mutations) GetRequestMutations() []*v3.HeaderMutation {
	if x != nil {
		return x.RequestMutations
	}
	return nil
}

func (x *Mutations) GetQueryParameterMutations() []*v31.KeyValueMutation {
	if x != nil {
		return x.QueryParameterMutations
	}
	return nil
}

func (x *Mutations) GetResponseMutations() []*v3.HeaderMutation {
	if x != nil {
		return x.ResponseMutations
	}
	return nil
}

func (x *Mutations) GetResponseTrailersMutations() []*v3.HeaderMutation {
	if x != nil {
		return x.ResponseTrailersMutations
	}
	return nil
}

func (x *Mutations) GetRequestTrailersMutations() []*v3.HeaderMutation {
	if x != nil {
		return x.RequestTrailersMutations
	}
	return nil
}

// Per route configuration for the header mutation filter.
type HeaderMutationPerRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mutations     *Mutations             `protobuf:"bytes,1,opt,name=mutations,proto3" json:"mutations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderMutationPerRoute) Reset() {
	*x = HeaderMutationPerRoute{}
	mi := &file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderMutationPerRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderMutationPerRoute) ProtoMessage() {}

func (x *HeaderMutationPerRoute) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderMutationPerRoute.ProtoReflect.Descriptor instead.
func (*HeaderMutationPerRoute) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescGZIP(), []int{1}
}

func (x *HeaderMutationPerRoute) GetMutations() *Mutations {
	if x != nil {
		return x.Mutations
	}
	return nil
}

// Configuration for the header mutation filter. The mutation rules in the filter configuration will
// always be applied first and then the per-route mutation rules, if both are specified.
type HeaderMutation struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Mutations *Mutations             `protobuf:"bytes,1,opt,name=mutations,proto3" json:"mutations,omitempty"`
	// If per route HeaderMutationPerRoute config is configured at multiple route levels, header mutations
	// at all specified levels are evaluated. By default, the order is from most specific (i.e. route entry level)
	// to least specific (i.e. route configuration level). Later header mutations may override earlier mutations.
	//
	// This order can be reversed by setting this field to true. In other words, most specific level mutation
	// is evaluated last.
	MostSpecificHeaderMutationsWins bool `protobuf:"varint,2,opt,name=most_specific_header_mutations_wins,json=mostSpecificHeaderMutationsWins,proto3" json:"most_specific_header_mutations_wins,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *HeaderMutation) Reset() {
	*x = HeaderMutation{}
	mi := &file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderMutation) ProtoMessage() {}

func (x *HeaderMutation) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderMutation.ProtoReflect.Descriptor instead.
func (*HeaderMutation) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescGZIP(), []int{2}
}

func (x *HeaderMutation) GetMutations() *Mutations {
	if x != nil {
		return x.Mutations
	}
	return nil
}

func (x *HeaderMutation) GetMostSpecificHeaderMutationsWins() bool {
	if x != nil {
		return x.MostSpecificHeaderMutationsWins
	}
	return false
}

var File_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDesc = "" +
	"\n" +
	"Fenvoy/extensions/filters/http/header_mutation/v3/header_mutation.proto\x120envoy.extensions.filters.http.header_mutation.v3\x1a:envoy/config/common/mutation_rules/v3/mutation_rules.proto\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1dudpa/annotations/status.proto\"\xa5\x04\n" +
	"\tMutations\x12b\n" +
	"\x11request_mutations\x18\x01 \x03(\v25.envoy.config.common.mutation_rules.v3.HeaderMutationR\x10requestMutations\x12b\n" +
	"\x19query_parameter_mutations\x18\x03 \x03(\v2&.envoy.config.core.v3.KeyValueMutationR\x17queryParameterMutations\x12d\n" +
	"\x12response_mutations\x18\x02 \x03(\v25.envoy.config.common.mutation_rules.v3.HeaderMutationR\x11responseMutations\x12u\n" +
	"\x1bresponse_trailers_mutations\x18\x04 \x03(\v25.envoy.config.common.mutation_rules.v3.HeaderMutationR\x19responseTrailersMutations\x12s\n" +
	"\x1arequest_trailers_mutations\x18\x05 \x03(\v25.envoy.config.common.mutation_rules.v3.HeaderMutationR\x18requestTrailersMutations\"s\n" +
	"\x16HeaderMutationPerRoute\x12Y\n" +
	"\tmutations\x18\x01 \x01(\v2;.envoy.extensions.filters.http.header_mutation.v3.MutationsR\tmutations\"\xb9\x01\n" +
	"\x0eHeaderMutation\x12Y\n" +
	"\tmutations\x18\x01 \x01(\v2;.envoy.extensions.filters.http.header_mutation.v3.MutationsR\tmutations\x12L\n" +
	"#most_specific_header_mutations_wins\x18\x02 \x01(\bR\x1fmostSpecificHeaderMutationsWinsB\xca\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	">io.envoyproxy.envoy.extensions.filters.http.header_mutation.v3B\x13HeaderMutationProtoP\x01Zigithub.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/header_mutation/v3;header_mutationv3b\x06proto3"

var (
	file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescData []byte
)

func file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDesc), len(file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDescData
}

var file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_goTypes = []any{
	(*Mutations)(nil),              // 0: envoy.extensions.filters.http.header_mutation.v3.Mutations
	(*HeaderMutationPerRoute)(nil), // 1: envoy.extensions.filters.http.header_mutation.v3.HeaderMutationPerRoute
	(*HeaderMutation)(nil),         // 2: envoy.extensions.filters.http.header_mutation.v3.HeaderMutation
	(*v3.HeaderMutation)(nil),      // 3: envoy.config.common.mutation_rules.v3.HeaderMutation
	(*v31.KeyValueMutation)(nil),   // 4: envoy.config.core.v3.KeyValueMutation
}
var file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_depIdxs = []int32{
	3, // 0: envoy.extensions.filters.http.header_mutation.v3.Mutations.request_mutations:type_name -> envoy.config.common.mutation_rules.v3.HeaderMutation
	4, // 1: envoy.extensions.filters.http.header_mutation.v3.Mutations.query_parameter_mutations:type_name -> envoy.config.core.v3.KeyValueMutation
	3, // 2: envoy.extensions.filters.http.header_mutation.v3.Mutations.response_mutations:type_name -> envoy.config.common.mutation_rules.v3.HeaderMutation
	3, // 3: envoy.extensions.filters.http.header_mutation.v3.Mutations.response_trailers_mutations:type_name -> envoy.config.common.mutation_rules.v3.HeaderMutation
	3, // 4: envoy.extensions.filters.http.header_mutation.v3.Mutations.request_trailers_mutations:type_name -> envoy.config.common.mutation_rules.v3.HeaderMutation
	0, // 5: envoy.extensions.filters.http.header_mutation.v3.HeaderMutationPerRoute.mutations:type_name -> envoy.extensions.filters.http.header_mutation.v3.Mutations
	0, // 6: envoy.extensions.filters.http.header_mutation.v3.HeaderMutation.mutations:type_name -> envoy.extensions.filters.http.header_mutation.v3.Mutations
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_init() }
func file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_init() {
	if File_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDesc), len(file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto = out.File
	file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_goTypes = nil
	file_envoy_extensions_filters_http_header_mutation_v3_header_mutation_proto_depIdxs = nil
}
