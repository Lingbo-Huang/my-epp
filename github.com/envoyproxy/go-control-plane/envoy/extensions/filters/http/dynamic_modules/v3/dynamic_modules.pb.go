// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/http/dynamic_modules/v3/dynamic_modules.proto

package dynamic_modulesv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/extensions/dynamic_modules/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration of the HTTP filter for dynamic modules. This filter allows loading shared object files
// that can be loaded via dlopen by the HTTP filter.
//
// A module can be loaded by multiple HTTP filters, hence the program can be structured in a way that
// the module is loaded only once and shared across multiple filters providing multiple functionalities.
type DynamicModuleFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies the shared-object level configuration.
	DynamicModuleConfig *v3.DynamicModuleConfig `protobuf:"bytes,1,opt,name=dynamic_module_config,json=dynamicModuleConfig,proto3" json:"dynamic_module_config,omitempty"`
	// The name for this filter configuration. This can be used to distinguish between different filter implementations
	// inside a dynamic module. For example, a module can have completely different filter implementations.
	// When Envoy receives this configuration, it passes the filter_name to the dynamic module's HTTP filter config init function
	// together with the filter_config.
	// That way a module can decide which in-module filter implementation to use based on the name at load time.
	FilterName string `protobuf:"bytes,2,opt,name=filter_name,json=filterName,proto3" json:"filter_name,omitempty"`
	// The configuration for the filter chosen by filter_name. This is passed to the module's HTTP filter initialization function.
	// Together with the filter_name, the module can decide which in-module filter implementation to use and
	// fine-tune the behavior of the filter.
	//
	// For example, if a module has two filter implementations, one for logging and one for header manipulation,
	// filter_name is used to choose either logging or header manipulation. The filter_config can be used to
	// configure the logging level or the header manipulation behavior.
	//
	// “google.protobuf.Struct“ is serialized as JSON before
	// passing it to the plugin. “google.protobuf.BytesValue“ and
	// “google.protobuf.StringValue“ are passed directly without the wrapper.
	//
	// .. code-block:: yaml
	//
	//	# Passing in a string
	//	filter_config:
	//	  "@type": "type.googleapis.com/google.protobuf.StringValue"
	//	  value: hello
	//
	//	# Passing in raw bytes
	//	filter_config:
	//	  "@type": "type.googleapis.com/google.protobuf.BytesValue"
	//	  value: aGVsbG8= # echo -n "hello" | base64
	FilterConfig  *anypb.Any `protobuf:"bytes,3,opt,name=filter_config,json=filterConfig,proto3" json:"filter_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicModuleFilter) Reset() {
	*x = DynamicModuleFilter{}
	mi := &file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicModuleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicModuleFilter) ProtoMessage() {}

func (x *DynamicModuleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicModuleFilter.ProtoReflect.Descriptor instead.
func (*DynamicModuleFilter) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescGZIP(), []int{0}
}

func (x *DynamicModuleFilter) GetDynamicModuleConfig() *v3.DynamicModuleConfig {
	if x != nil {
		return x.DynamicModuleConfig
	}
	return nil
}

func (x *DynamicModuleFilter) GetFilterName() string {
	if x != nil {
		return x.FilterName
	}
	return ""
}

func (x *DynamicModuleFilter) GetFilterConfig() *anypb.Any {
	if x != nil {
		return x.FilterConfig
	}
	return nil
}

// Configuration of the HTTP per-route filter for dynamic modules. This filter allows loading shared object files
// that can be loaded via dlopen by the HTTP filter.
type DynamicModuleFilterPerRoute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies the shared-object level configuration.
	DynamicModuleConfig *v3.DynamicModuleConfig `protobuf:"bytes,1,opt,name=dynamic_module_config,json=dynamicModuleConfig,proto3" json:"dynamic_module_config,omitempty"`
	// The name for this filter configuration. This can be used to distinguish between different filter implementations
	// inside a dynamic module. For example, a module can have completely different filter implementations.
	// When Envoy receives this configuration, it passes the filter_name to the dynamic module's HTTP per-route filter config init function
	// together with the filter_config.
	// That way a module can decide which in-module filter implementation to use based on the name at load time.
	PerRouteConfigName string `protobuf:"bytes,2,opt,name=per_route_config_name,json=perRouteConfigName,proto3" json:"per_route_config_name,omitempty"`
	// The configuration for the filter chosen by filter_name. This is passed to the module's HTTP per-route filter initialization function.
	// Together with the filter_name, the module can decide which in-module filter implementation to use and
	// fine-tune the behavior of the filter on a specific route.
	//
	// For example, if a module has two filter implementations, one for logging and one for header manipulation,
	// filter_name is used to choose either logging or header manipulation. The filter_config can be used to
	// configure the logging level or the header manipulation behavior.
	//
	// “google.protobuf.Struct“ is serialized as JSON before
	// passing it to the plugin. “google.protobuf.BytesValue“ and
	// “google.protobuf.StringValue“ are passed directly without the wrapper.
	//
	// .. code-block:: yaml
	//
	//	# Passing in a string
	//	filter_config:
	//	  "@type": "type.googleapis.com/google.protobuf.StringValue"
	//	  value: hello
	//
	//	# Passing in raw bytes
	//	filter_config:
	//	  "@type": "type.googleapis.com/google.protobuf.BytesValue"
	//	  value: aGVsbG8= # echo -n "hello" | base64
	FilterConfig  *anypb.Any `protobuf:"bytes,3,opt,name=filter_config,json=filterConfig,proto3" json:"filter_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicModuleFilterPerRoute) Reset() {
	*x = DynamicModuleFilterPerRoute{}
	mi := &file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicModuleFilterPerRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicModuleFilterPerRoute) ProtoMessage() {}

func (x *DynamicModuleFilterPerRoute) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicModuleFilterPerRoute.ProtoReflect.Descriptor instead.
func (*DynamicModuleFilterPerRoute) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescGZIP(), []int{1}
}

func (x *DynamicModuleFilterPerRoute) GetDynamicModuleConfig() *v3.DynamicModuleConfig {
	if x != nil {
		return x.DynamicModuleConfig
	}
	return nil
}

func (x *DynamicModuleFilterPerRoute) GetPerRouteConfigName() string {
	if x != nil {
		return x.PerRouteConfigName
	}
	return ""
}

func (x *DynamicModuleFilterPerRoute) GetFilterConfig() *anypb.Any {
	if x != nil {
		return x.FilterConfig
	}
	return nil
}

var File_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDesc = "" +
	"\n" +
	"Fenvoy/extensions/filters/http/dynamic_modules/v3/dynamic_modules.proto\x120envoy.extensions.filters.http.dynamic_modules.v3\x1a9envoy/extensions/dynamic_modules/v3/dynamic_modules.proto\x1a\x19google/protobuf/any.proto\x1a\x1dudpa/annotations/status.proto\"\xdf\x01\n" +
	"\x13DynamicModuleFilter\x12l\n" +
	"\x15dynamic_module_config\x18\x01 \x01(\v28.envoy.extensions.dynamic_modules.v3.DynamicModuleConfigR\x13dynamicModuleConfig\x12\x1f\n" +
	"\vfilter_name\x18\x02 \x01(\tR\n" +
	"filterName\x129\n" +
	"\rfilter_config\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\ffilterConfig\"\xf9\x01\n" +
	"\x1bDynamicModuleFilterPerRoute\x12l\n" +
	"\x15dynamic_module_config\x18\x01 \x01(\v28.envoy.extensions.dynamic_modules.v3.DynamicModuleConfigR\x13dynamicModuleConfig\x121\n" +
	"\x15per_route_config_name\x18\x02 \x01(\tR\x12perRouteConfigName\x129\n" +
	"\rfilter_config\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\ffilterConfigB\xca\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	">io.envoyproxy.envoy.extensions.filters.http.dynamic_modules.v3B\x13DynamicModulesProtoP\x01Zigithub.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/dynamic_modules/v3;dynamic_modulesv3b\x06proto3"

var (
	file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescData []byte
)

func file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDesc), len(file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDescData
}

var file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_goTypes = []any{
	(*DynamicModuleFilter)(nil),         // 0: envoy.extensions.filters.http.dynamic_modules.v3.DynamicModuleFilter
	(*DynamicModuleFilterPerRoute)(nil), // 1: envoy.extensions.filters.http.dynamic_modules.v3.DynamicModuleFilterPerRoute
	(*v3.DynamicModuleConfig)(nil),      // 2: envoy.extensions.dynamic_modules.v3.DynamicModuleConfig
	(*anypb.Any)(nil),                   // 3: google.protobuf.Any
}
var file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_depIdxs = []int32{
	2, // 0: envoy.extensions.filters.http.dynamic_modules.v3.DynamicModuleFilter.dynamic_module_config:type_name -> envoy.extensions.dynamic_modules.v3.DynamicModuleConfig
	3, // 1: envoy.extensions.filters.http.dynamic_modules.v3.DynamicModuleFilter.filter_config:type_name -> google.protobuf.Any
	2, // 2: envoy.extensions.filters.http.dynamic_modules.v3.DynamicModuleFilterPerRoute.dynamic_module_config:type_name -> envoy.extensions.dynamic_modules.v3.DynamicModuleConfig
	3, // 3: envoy.extensions.filters.http.dynamic_modules.v3.DynamicModuleFilterPerRoute.filter_config:type_name -> google.protobuf.Any
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_init() }
func file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_init() {
	if File_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDesc), len(file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto = out.File
	file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_goTypes = nil
	file_envoy_extensions_filters_http_dynamic_modules_v3_dynamic_modules_proto_depIdxs = nil
}
