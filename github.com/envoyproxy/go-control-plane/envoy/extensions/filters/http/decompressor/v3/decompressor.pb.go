// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/http/decompressor/v3/decompressor.proto

package decompressorv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Decompressor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A decompressor library to use for both request and response decompression. Currently only
	// :ref:`envoy.compression.gzip.compressor<envoy_v3_api_msg_extensions.compression.gzip.decompressor.v3.Gzip>`
	// is included in Envoy.
	// [#extension-category: envoy.compression.decompressor]
	DecompressorLibrary *v3.TypedExtensionConfig `protobuf:"bytes,1,opt,name=decompressor_library,json=decompressorLibrary,proto3" json:"decompressor_library,omitempty"`
	// Configuration for request decompression. Decompression is enabled by default if left empty.
	RequestDirectionConfig *Decompressor_RequestDirectionConfig `protobuf:"bytes,2,opt,name=request_direction_config,json=requestDirectionConfig,proto3" json:"request_direction_config,omitempty"`
	// Configuration for response decompression. Decompression is enabled by default if left empty.
	ResponseDirectionConfig *Decompressor_ResponseDirectionConfig `protobuf:"bytes,3,opt,name=response_direction_config,json=responseDirectionConfig,proto3" json:"response_direction_config,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Decompressor) Reset() {
	*x = Decompressor{}
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decompressor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decompressor) ProtoMessage() {}

func (x *Decompressor) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decompressor.ProtoReflect.Descriptor instead.
func (*Decompressor) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescGZIP(), []int{0}
}

func (x *Decompressor) GetDecompressorLibrary() *v3.TypedExtensionConfig {
	if x != nil {
		return x.DecompressorLibrary
	}
	return nil
}

func (x *Decompressor) GetRequestDirectionConfig() *Decompressor_RequestDirectionConfig {
	if x != nil {
		return x.RequestDirectionConfig
	}
	return nil
}

func (x *Decompressor) GetResponseDirectionConfig() *Decompressor_ResponseDirectionConfig {
	if x != nil {
		return x.ResponseDirectionConfig
	}
	return nil
}

// Common configuration for filter behavior on both the request and response direction.
type Decompressor_CommonDirectionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Runtime flag that controls whether the filter is enabled for decompression or not. If set to false, the
	// filter will operate as a pass-through filter. If the message is unspecified, the filter will be enabled.
	Enabled *v3.RuntimeFeatureFlag `protobuf:"bytes,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// If set to true, will decompress response even if a “no-transform“ cache control header is set.
	IgnoreNoTransformHeader bool `protobuf:"varint,2,opt,name=ignore_no_transform_header,json=ignoreNoTransformHeader,proto3" json:"ignore_no_transform_header,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Decompressor_CommonDirectionConfig) Reset() {
	*x = Decompressor_CommonDirectionConfig{}
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decompressor_CommonDirectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decompressor_CommonDirectionConfig) ProtoMessage() {}

func (x *Decompressor_CommonDirectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decompressor_CommonDirectionConfig.ProtoReflect.Descriptor instead.
func (*Decompressor_CommonDirectionConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Decompressor_CommonDirectionConfig) GetEnabled() *v3.RuntimeFeatureFlag {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *Decompressor_CommonDirectionConfig) GetIgnoreNoTransformHeader() bool {
	if x != nil {
		return x.IgnoreNoTransformHeader
	}
	return false
}

// Configuration for filter behavior on the request direction.
type Decompressor_RequestDirectionConfig struct {
	state        protoimpl.MessageState              `protogen:"open.v1"`
	CommonConfig *Decompressor_CommonDirectionConfig `protobuf:"bytes,1,opt,name=common_config,json=commonConfig,proto3" json:"common_config,omitempty"`
	// If set to true, and response decompression is enabled, the filter modifies the Accept-Encoding
	// request header by appending the decompressor_library's encoding. Defaults to true.
	AdvertiseAcceptEncoding *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=advertise_accept_encoding,json=advertiseAcceptEncoding,proto3" json:"advertise_accept_encoding,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Decompressor_RequestDirectionConfig) Reset() {
	*x = Decompressor_RequestDirectionConfig{}
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decompressor_RequestDirectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decompressor_RequestDirectionConfig) ProtoMessage() {}

func (x *Decompressor_RequestDirectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decompressor_RequestDirectionConfig.ProtoReflect.Descriptor instead.
func (*Decompressor_RequestDirectionConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Decompressor_RequestDirectionConfig) GetCommonConfig() *Decompressor_CommonDirectionConfig {
	if x != nil {
		return x.CommonConfig
	}
	return nil
}

func (x *Decompressor_RequestDirectionConfig) GetAdvertiseAcceptEncoding() *wrapperspb.BoolValue {
	if x != nil {
		return x.AdvertiseAcceptEncoding
	}
	return nil
}

// Configuration for filter behavior on the response direction.
type Decompressor_ResponseDirectionConfig struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	CommonConfig  *Decompressor_CommonDirectionConfig `protobuf:"bytes,1,opt,name=common_config,json=commonConfig,proto3" json:"common_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decompressor_ResponseDirectionConfig) Reset() {
	*x = Decompressor_ResponseDirectionConfig{}
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decompressor_ResponseDirectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decompressor_ResponseDirectionConfig) ProtoMessage() {}

func (x *Decompressor_ResponseDirectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decompressor_ResponseDirectionConfig.ProtoReflect.Descriptor instead.
func (*Decompressor_ResponseDirectionConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Decompressor_ResponseDirectionConfig) GetCommonConfig() *Decompressor_CommonDirectionConfig {
	if x != nil {
		return x.CommonConfig
	}
	return nil
}

var File_envoy_extensions_filters_http_decompressor_v3_decompressor_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDesc = "" +
	"\n" +
	"@envoy/extensions/filters/http/decompressor/v3/decompressor.proto\x12-envoy.extensions.filters.http.decompressor.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a$envoy/config/core/v3/extension.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xb2\a\n" +
	"\fDecompressor\x12g\n" +
	"\x14decompressor_library\x18\x01 \x01(\v2*.envoy.config.core.v3.TypedExtensionConfigB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x13decompressorLibrary\x12\x8c\x01\n" +
	"\x18request_direction_config\x18\x02 \x01(\v2R.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfigR\x16requestDirectionConfig\x12\x8f\x01\n" +
	"\x19response_direction_config\x18\x03 \x01(\v2S.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfigR\x17responseDirectionConfig\x1a\x98\x01\n" +
	"\x15CommonDirectionConfig\x12B\n" +
	"\aenabled\x18\x01 \x01(\v2(.envoy.config.core.v3.RuntimeFeatureFlagR\aenabled\x12;\n" +
	"\x1aignore_no_transform_header\x18\x02 \x01(\bR\x17ignoreNoTransformHeader\x1a\xe8\x01\n" +
	"\x16RequestDirectionConfig\x12v\n" +
	"\rcommon_config\x18\x01 \x01(\v2Q.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfigR\fcommonConfig\x12V\n" +
	"\x19advertise_accept_encoding\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x17advertiseAcceptEncoding\x1a\x91\x01\n" +
	"\x17ResponseDirectionConfig\x12v\n" +
	"\rcommon_config\x18\x01 \x01(\v2Q.envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfigR\fcommonConfigB\xbf\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	";io.envoyproxy.envoy.extensions.filters.http.decompressor.v3B\x11DecompressorProtoP\x01Zcgithub.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/decompressor/v3;decompressorv3b\x06proto3"

var (
	file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescData []byte
)

func file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDesc), len(file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDescData
}

var file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_goTypes = []any{
	(*Decompressor)(nil),                         // 0: envoy.extensions.filters.http.decompressor.v3.Decompressor
	(*Decompressor_CommonDirectionConfig)(nil),   // 1: envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig
	(*Decompressor_RequestDirectionConfig)(nil),  // 2: envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig
	(*Decompressor_ResponseDirectionConfig)(nil), // 3: envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig
	(*v3.TypedExtensionConfig)(nil),              // 4: envoy.config.core.v3.TypedExtensionConfig
	(*v3.RuntimeFeatureFlag)(nil),                // 5: envoy.config.core.v3.RuntimeFeatureFlag
	(*wrapperspb.BoolValue)(nil),                 // 6: google.protobuf.BoolValue
}
var file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_depIdxs = []int32{
	4, // 0: envoy.extensions.filters.http.decompressor.v3.Decompressor.decompressor_library:type_name -> envoy.config.core.v3.TypedExtensionConfig
	2, // 1: envoy.extensions.filters.http.decompressor.v3.Decompressor.request_direction_config:type_name -> envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig
	3, // 2: envoy.extensions.filters.http.decompressor.v3.Decompressor.response_direction_config:type_name -> envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig
	5, // 3: envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig.enabled:type_name -> envoy.config.core.v3.RuntimeFeatureFlag
	1, // 4: envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.common_config:type_name -> envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig
	6, // 5: envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig.advertise_accept_encoding:type_name -> google.protobuf.BoolValue
	1, // 6: envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig.common_config:type_name -> envoy.extensions.filters.http.decompressor.v3.Decompressor.CommonDirectionConfig
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_init() }
func file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_init() {
	if File_envoy_extensions_filters_http_decompressor_v3_decompressor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDesc), len(file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_http_decompressor_v3_decompressor_proto = out.File
	file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_goTypes = nil
	file_envoy_extensions_filters_http_decompressor_v3_decompressor_proto_depIdxs = nil
}
