// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/http/grpc_field_extraction/v3/config.proto

package grpc_field_extractionv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GrpcFieldExtractionConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The proto descriptor set binary for the gRPC services.
	//
	// It could be passed by a local file through “Datasource.filename“ or embedded in the
	// “Datasource.inline_bytes“.
	DescriptorSet *v3.DataSource `protobuf:"bytes,1,opt,name=descriptor_set,json=descriptorSet,proto3" json:"descriptor_set,omitempty"`
	// Specify the extraction info.
	// The key is the fully qualified gRPC method name.
	// “${package}.${Service}.${Method}“, like
	// “endpoints.examples.bookstore.BookStore.GetShelf“
	//
	// The value is the field extractions for individual gRPC method.
	ExtractionsByMethod map[string]*FieldExtractions `protobuf:"bytes,2,rep,name=extractions_by_method,json=extractionsByMethod,proto3" json:"extractions_by_method,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GrpcFieldExtractionConfig) Reset() {
	*x = GrpcFieldExtractionConfig{}
	mi := &file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcFieldExtractionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcFieldExtractionConfig) ProtoMessage() {}

func (x *GrpcFieldExtractionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcFieldExtractionConfig.ProtoReflect.Descriptor instead.
func (*GrpcFieldExtractionConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescGZIP(), []int{0}
}

func (x *GrpcFieldExtractionConfig) GetDescriptorSet() *v3.DataSource {
	if x != nil {
		return x.DescriptorSet
	}
	return nil
}

func (x *GrpcFieldExtractionConfig) GetExtractionsByMethod() map[string]*FieldExtractions {
	if x != nil {
		return x.ExtractionsByMethod
	}
	return nil
}

// This message can be used to support per route config approach later even
// though the Istio doesn't support that so far.
type FieldExtractions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The field extractions for requests.
	// The key is the field path within the grpc request.
	// For example, we can define “foo.bar.name“ if we want to extract
	// “Request.foo.bar.name“.
	//
	// .. code-block:: proto
	//
	//	message Request {
	//	  Foo foo = 1;
	//	}
	//
	//	message Foo {
	//	  Bar bar = 1;
	//	}
	//
	//	message Bar {
	//	  string name = 1;
	//	}
	RequestFieldExtractions map[string]*RequestFieldValueDisposition `protobuf:"bytes,1,rep,name=request_field_extractions,json=requestFieldExtractions,proto3" json:"request_field_extractions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *FieldExtractions) Reset() {
	*x = FieldExtractions{}
	mi := &file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldExtractions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldExtractions) ProtoMessage() {}

func (x *FieldExtractions) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldExtractions.ProtoReflect.Descriptor instead.
func (*FieldExtractions) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescGZIP(), []int{1}
}

func (x *FieldExtractions) GetRequestFieldExtractions() map[string]*RequestFieldValueDisposition {
	if x != nil {
		return x.RequestFieldExtractions
	}
	return nil
}

type RequestFieldValueDisposition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Disposition:
	//
	//	*RequestFieldValueDisposition_DynamicMetadata
	Disposition   isRequestFieldValueDisposition_Disposition `protobuf_oneof:"disposition"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestFieldValueDisposition) Reset() {
	*x = RequestFieldValueDisposition{}
	mi := &file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestFieldValueDisposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFieldValueDisposition) ProtoMessage() {}

func (x *RequestFieldValueDisposition) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFieldValueDisposition.ProtoReflect.Descriptor instead.
func (*RequestFieldValueDisposition) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescGZIP(), []int{2}
}

func (x *RequestFieldValueDisposition) GetDisposition() isRequestFieldValueDisposition_Disposition {
	if x != nil {
		return x.Disposition
	}
	return nil
}

func (x *RequestFieldValueDisposition) GetDynamicMetadata() string {
	if x != nil {
		if x, ok := x.Disposition.(*RequestFieldValueDisposition_DynamicMetadata); ok {
			return x.DynamicMetadata
		}
	}
	return ""
}

type isRequestFieldValueDisposition_Disposition interface {
	isRequestFieldValueDisposition_Disposition()
}

type RequestFieldValueDisposition_DynamicMetadata struct {
	// The dynamic metadata namespace. If empty, "envoy.filters.http.grpc_field_extraction" will be used by default.
	//
	// Unimplemented. Uses "envoy.filters.http.grpc_field_extraction" for now.
	DynamicMetadata string `protobuf:"bytes,1,opt,name=dynamic_metadata,json=dynamicMetadata,proto3,oneof"`
}

func (*RequestFieldValueDisposition_DynamicMetadata) isRequestFieldValueDisposition_Disposition() {}

var File_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDesc = "" +
	"\n" +
	"Cenvoy/extensions/filters/http/grpc_field_extraction/v3/config.proto\x126envoy.extensions.filters.http.grpc_field_extraction.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xa2\x03\n" +
	"\x19GrpcFieldExtractionConfig\x12Q\n" +
	"\x0edescriptor_set\x18\x01 \x01(\v2 .envoy.config.core.v3.DataSourceB\b\xfaB\x05\x8a\x01\x02\x10\x01R\rdescriptorSet\x12\x9e\x01\n" +
	"\x15extractions_by_method\x18\x02 \x03(\v2j.envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig.ExtractionsByMethodEntryR\x13extractionsByMethod\x1a\x90\x01\n" +
	"\x18ExtractionsByMethodEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12^\n" +
	"\x05value\x18\x02 \x01(\v2H.envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractionsR\x05value:\x028\x01\"\xd9\x02\n" +
	"\x10FieldExtractions\x12\xa1\x01\n" +
	"\x19request_field_extractions\x18\x01 \x03(\v2e.envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions.RequestFieldExtractionsEntryR\x17requestFieldExtractions\x1a\xa0\x01\n" +
	"\x1cRequestFieldExtractionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12j\n" +
	"\x05value\x18\x02 \x01(\v2T.envoy.extensions.filters.http.grpc_field_extraction.v3.RequestFieldValueDispositionR\x05value:\x028\x01\"Z\n" +
	"\x1cRequestFieldValueDisposition\x12+\n" +
	"\x10dynamic_metadata\x18\x01 \x01(\tH\x00R\x0fdynamicMetadataB\r\n" +
	"\vdispositionB\xd4\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"Dio.envoyproxy.envoy.extensions.filters.http.grpc_field_extraction.v3B\vConfigProtoP\x01Zugithub.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/grpc_field_extraction/v3;grpc_field_extractionv3b\x06proto3"

var (
	file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescData []byte
)

func file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDesc), len(file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDescData
}

var file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_goTypes = []any{
	(*GrpcFieldExtractionConfig)(nil),    // 0: envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig
	(*FieldExtractions)(nil),             // 1: envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions
	(*RequestFieldValueDisposition)(nil), // 2: envoy.extensions.filters.http.grpc_field_extraction.v3.RequestFieldValueDisposition
	nil,                                  // 3: envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig.ExtractionsByMethodEntry
	nil,                                  // 4: envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions.RequestFieldExtractionsEntry
	(*v3.DataSource)(nil),                // 5: envoy.config.core.v3.DataSource
}
var file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_depIdxs = []int32{
	5, // 0: envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig.descriptor_set:type_name -> envoy.config.core.v3.DataSource
	3, // 1: envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig.extractions_by_method:type_name -> envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig.ExtractionsByMethodEntry
	4, // 2: envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions.request_field_extractions:type_name -> envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions.RequestFieldExtractionsEntry
	1, // 3: envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig.ExtractionsByMethodEntry.value:type_name -> envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions
	2, // 4: envoy.extensions.filters.http.grpc_field_extraction.v3.FieldExtractions.RequestFieldExtractionsEntry.value:type_name -> envoy.extensions.filters.http.grpc_field_extraction.v3.RequestFieldValueDisposition
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_init() }
func file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_init() {
	if File_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto != nil {
		return
	}
	file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes[2].OneofWrappers = []any{
		(*RequestFieldValueDisposition_DynamicMetadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDesc), len(file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto = out.File
	file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_goTypes = nil
	file_envoy_extensions_filters_http_grpc_field_extraction_v3_config_proto_depIdxs = nil
}
