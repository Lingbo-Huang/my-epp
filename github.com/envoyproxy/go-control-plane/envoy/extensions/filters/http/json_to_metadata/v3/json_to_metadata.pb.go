// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/http/json_to_metadata/v3/json_to_metadata.proto

package json_to_metadatav3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JsonToMetadata_ValueType int32

const (
	// The value is a serialized `protobuf.Value
	// <https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto#L62>`_.
	JsonToMetadata_PROTOBUF_VALUE JsonToMetadata_ValueType = 0
	JsonToMetadata_STRING         JsonToMetadata_ValueType = 1
	JsonToMetadata_NUMBER         JsonToMetadata_ValueType = 2
)

// Enum value maps for JsonToMetadata_ValueType.
var (
	JsonToMetadata_ValueType_name = map[int32]string{
		0: "PROTOBUF_VALUE",
		1: "STRING",
		2: "NUMBER",
	}
	JsonToMetadata_ValueType_value = map[string]int32{
		"PROTOBUF_VALUE": 0,
		"STRING":         1,
		"NUMBER":         2,
	}
)

func (x JsonToMetadata_ValueType) Enum() *JsonToMetadata_ValueType {
	p := new(JsonToMetadata_ValueType)
	*p = x
	return p
}

func (x JsonToMetadata_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JsonToMetadata_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_enumTypes[0].Descriptor()
}

func (JsonToMetadata_ValueType) Type() protoreflect.EnumType {
	return &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_enumTypes[0]
}

func (x JsonToMetadata_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JsonToMetadata_ValueType.Descriptor instead.
func (JsonToMetadata_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP(), []int{0, 0}
}

type JsonToMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// At least one of request_rules and response_rules must be provided.
	// Rules to match json body of requests.
	RequestRules *JsonToMetadata_MatchRules `protobuf:"bytes,1,opt,name=request_rules,json=requestRules,proto3" json:"request_rules,omitempty"`
	// Rules to match json body of responses.
	ResponseRules *JsonToMetadata_MatchRules `protobuf:"bytes,2,opt,name=response_rules,json=responseRules,proto3" json:"response_rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonToMetadata) Reset() {
	*x = JsonToMetadata{}
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonToMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonToMetadata) ProtoMessage() {}

func (x *JsonToMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonToMetadata.ProtoReflect.Descriptor instead.
func (*JsonToMetadata) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *JsonToMetadata) GetRequestRules() *JsonToMetadata_MatchRules {
	if x != nil {
		return x.RequestRules
	}
	return nil
}

func (x *JsonToMetadata) GetResponseRules() *JsonToMetadata_MatchRules {
	if x != nil {
		return x.ResponseRules
	}
	return nil
}

// [#next-free-field: 6]
type JsonToMetadata_KeyValuePair struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace — if this is empty, the filter's namespace will be used.
	MetadataNamespace string `protobuf:"bytes,1,opt,name=metadata_namespace,json=metadataNamespace,proto3" json:"metadata_namespace,omitempty"`
	// The key to use within the namespace.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to ValueType:
	//
	//	*JsonToMetadata_KeyValuePair_Value
	ValueType isJsonToMetadata_KeyValuePair_ValueType `protobuf_oneof:"value_type"`
	// The value's type — defaults to protobuf.Value.
	Type JsonToMetadata_ValueType `protobuf:"varint,4,opt,name=type,proto3,enum=envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata_ValueType" json:"type,omitempty"`
	// False if we want to overwrite the existing metadata value. Default to false.
	PreserveExistingMetadataValue bool `protobuf:"varint,5,opt,name=preserve_existing_metadata_value,json=preserveExistingMetadataValue,proto3" json:"preserve_existing_metadata_value,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *JsonToMetadata_KeyValuePair) Reset() {
	*x = JsonToMetadata_KeyValuePair{}
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonToMetadata_KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonToMetadata_KeyValuePair) ProtoMessage() {}

func (x *JsonToMetadata_KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonToMetadata_KeyValuePair.ProtoReflect.Descriptor instead.
func (*JsonToMetadata_KeyValuePair) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JsonToMetadata_KeyValuePair) GetMetadataNamespace() string {
	if x != nil {
		return x.MetadataNamespace
	}
	return ""
}

func (x *JsonToMetadata_KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JsonToMetadata_KeyValuePair) GetValueType() isJsonToMetadata_KeyValuePair_ValueType {
	if x != nil {
		return x.ValueType
	}
	return nil
}

func (x *JsonToMetadata_KeyValuePair) GetValue() *structpb.Value {
	if x != nil {
		if x, ok := x.ValueType.(*JsonToMetadata_KeyValuePair_Value); ok {
			return x.Value
		}
	}
	return nil
}

func (x *JsonToMetadata_KeyValuePair) GetType() JsonToMetadata_ValueType {
	if x != nil {
		return x.Type
	}
	return JsonToMetadata_PROTOBUF_VALUE
}

func (x *JsonToMetadata_KeyValuePair) GetPreserveExistingMetadataValue() bool {
	if x != nil {
		return x.PreserveExistingMetadataValue
	}
	return false
}

type isJsonToMetadata_KeyValuePair_ValueType interface {
	isJsonToMetadata_KeyValuePair_ValueType()
}

type JsonToMetadata_KeyValuePair_Value struct {
	// The value to pair with the given key.
	//
	// When used for on_present case, if value is non-empty it'll be used instead
	// of the the value of the JSON key. If both are empty, the the value of the
	// JSON key is used as-is.
	//
	// When used for on_missing/on_error case, a non-empty value
	// must be provided.
	//
	// It ignores ValueType, i.e., not type casting.
	Value *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

func (*JsonToMetadata_KeyValuePair_Value) isJsonToMetadata_KeyValuePair_ValueType() {}

type JsonToMetadata_Selector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Selector:
	//
	//	*JsonToMetadata_Selector_Key
	Selector      isJsonToMetadata_Selector_Selector `protobuf_oneof:"selector"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonToMetadata_Selector) Reset() {
	*x = JsonToMetadata_Selector{}
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonToMetadata_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonToMetadata_Selector) ProtoMessage() {}

func (x *JsonToMetadata_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonToMetadata_Selector.ProtoReflect.Descriptor instead.
func (*JsonToMetadata_Selector) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP(), []int{0, 1}
}

func (x *JsonToMetadata_Selector) GetSelector() isJsonToMetadata_Selector_Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *JsonToMetadata_Selector) GetKey() string {
	if x != nil {
		if x, ok := x.Selector.(*JsonToMetadata_Selector_Key); ok {
			return x.Key
		}
	}
	return ""
}

type isJsonToMetadata_Selector_Selector interface {
	isJsonToMetadata_Selector_Selector()
}

type JsonToMetadata_Selector_Key struct {
	// key to match
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

func (*JsonToMetadata_Selector_Key) isJsonToMetadata_Selector_Selector() {}

// A Rule defines what metadata to apply when a key-value is present, missing in the json
// or fail to parse the payload.
type JsonToMetadata_Rule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies that a match will be performed on the value of a property.
	// Here's an example to match on 1 in {"foo": {"bar": 1}, "bar": 2}
	//
	// selectors:
	// - key: foo
	// - key: bar
	Selectors []*JsonToMetadata_Selector `protobuf:"bytes,1,rep,name=selectors,proto3" json:"selectors,omitempty"`
	// If the attribute is present, apply this metadata KeyValuePair.
	OnPresent *JsonToMetadata_KeyValuePair `protobuf:"bytes,2,opt,name=on_present,json=onPresent,proto3" json:"on_present,omitempty"`
	// If the attribute is missing, apply this metadata KeyValuePair.
	//
	// The value in the KeyValuePair must be set.
	OnMissing *JsonToMetadata_KeyValuePair `protobuf:"bytes,3,opt,name=on_missing,json=onMissing,proto3" json:"on_missing,omitempty"`
	// If the body is too large or fail to parse or content-type is mismatched, apply this metadata KeyValuePair.
	//
	// The value in the KeyValuePair must be set.
	OnError       *JsonToMetadata_KeyValuePair `protobuf:"bytes,4,opt,name=on_error,json=onError,proto3" json:"on_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JsonToMetadata_Rule) Reset() {
	*x = JsonToMetadata_Rule{}
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonToMetadata_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonToMetadata_Rule) ProtoMessage() {}

func (x *JsonToMetadata_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonToMetadata_Rule.ProtoReflect.Descriptor instead.
func (*JsonToMetadata_Rule) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP(), []int{0, 2}
}

func (x *JsonToMetadata_Rule) GetSelectors() []*JsonToMetadata_Selector {
	if x != nil {
		return x.Selectors
	}
	return nil
}

func (x *JsonToMetadata_Rule) GetOnPresent() *JsonToMetadata_KeyValuePair {
	if x != nil {
		return x.OnPresent
	}
	return nil
}

func (x *JsonToMetadata_Rule) GetOnMissing() *JsonToMetadata_KeyValuePair {
	if x != nil {
		return x.OnMissing
	}
	return nil
}

func (x *JsonToMetadata_Rule) GetOnError() *JsonToMetadata_KeyValuePair {
	if x != nil {
		return x.OnError
	}
	return nil
}

type JsonToMetadata_MatchRules struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of rules to apply.
	Rules []*JsonToMetadata_Rule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	// Allowed content-type for json to metadata transformation.
	// Default to “{"application/json"}“.
	//
	// Set “allow_empty_content_type“ if empty/missing content-type header
	// is allowed.
	AllowContentTypes []string `protobuf:"bytes,2,rep,name=allow_content_types,json=allowContentTypes,proto3" json:"allow_content_types,omitempty"`
	// Allowed empty content-type for json to metadata transformation.
	// Default to false.
	AllowEmptyContentType bool `protobuf:"varint,3,opt,name=allow_empty_content_type,json=allowEmptyContentType,proto3" json:"allow_empty_content_type,omitempty"`
	// Allowed content-type by regex match for json to metadata transformation.
	// This can be used in parallel with “allow_content_types“.
	AllowContentTypesRegex *v3.RegexMatcher `protobuf:"bytes,4,opt,name=allow_content_types_regex,json=allowContentTypesRegex,proto3" json:"allow_content_types_regex,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JsonToMetadata_MatchRules) Reset() {
	*x = JsonToMetadata_MatchRules{}
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonToMetadata_MatchRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonToMetadata_MatchRules) ProtoMessage() {}

func (x *JsonToMetadata_MatchRules) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonToMetadata_MatchRules.ProtoReflect.Descriptor instead.
func (*JsonToMetadata_MatchRules) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP(), []int{0, 3}
}

func (x *JsonToMetadata_MatchRules) GetRules() []*JsonToMetadata_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *JsonToMetadata_MatchRules) GetAllowContentTypes() []string {
	if x != nil {
		return x.AllowContentTypes
	}
	return nil
}

func (x *JsonToMetadata_MatchRules) GetAllowEmptyContentType() bool {
	if x != nil {
		return x.AllowEmptyContentType
	}
	return false
}

func (x *JsonToMetadata_MatchRules) GetAllowContentTypesRegex() *v3.RegexMatcher {
	if x != nil {
		return x.AllowContentTypesRegex
	}
	return nil
}

var File_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDesc = "" +
	"\n" +
	"Henvoy/extensions/filters/http/json_to_metadata/v3/json_to_metadata.proto\x121envoy.extensions.filters.http.json_to_metadata.v3\x1a!envoy/type/matcher/v3/regex.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xc7\v\n" +
	"\x0eJsonToMetadata\x12q\n" +
	"\rrequest_rules\x18\x01 \x01(\v2L.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRulesR\frequestRules\x12s\n" +
	"\x0eresponse_rules\x18\x02 \x01(\v2L.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRulesR\rresponseRules\x1a\xca\x02\n" +
	"\fKeyValuePair\x12-\n" +
	"\x12metadata_namespace\x18\x01 \x01(\tR\x11metadataNamespace\x12\x19\n" +
	"\x03key\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03key\x12.\n" +
	"\x05value\x18\x03 \x01(\v2\x16.google.protobuf.ValueH\x00R\x05value\x12i\n" +
	"\x04type\x18\x04 \x01(\x0e2K.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.ValueTypeB\b\xfaB\x05\x82\x01\x02\x10\x01R\x04type\x12G\n" +
	" preserve_existing_metadata_value\x18\x05 \x01(\bR\x1dpreserveExistingMetadataValueB\f\n" +
	"\n" +
	"value_type\x1a3\n" +
	"\bSelector\x12\x1b\n" +
	"\x03key\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01H\x00R\x03keyB\n" +
	"\n" +
	"\bselector\x1a\xc3\x03\n" +
	"\x04Rule\x12r\n" +
	"\tselectors\x18\x01 \x03(\v2J.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.SelectorB\b\xfaB\x05\x92\x01\x02\b\x01R\tselectors\x12m\n" +
	"\n" +
	"on_present\x18\x02 \x01(\v2N.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePairR\tonPresent\x12m\n" +
	"\n" +
	"on_missing\x18\x03 \x01(\v2N.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePairR\tonMissing\x12i\n" +
	"\bon_error\x18\x04 \x01(\v2N.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePairR\aonError\x1a\xcb\x02\n" +
	"\n" +
	"MatchRules\x12f\n" +
	"\x05rules\x18\x01 \x03(\v2F.envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.RuleB\b\xfaB\x05\x92\x01\x02\b\x01R\x05rules\x12<\n" +
	"\x13allow_content_types\x18\x02 \x03(\tB\f\xfaB\t\x92\x01\x06\"\x04r\x02\x10\x01R\x11allowContentTypes\x127\n" +
	"\x18allow_empty_content_type\x18\x03 \x01(\bR\x15allowEmptyContentType\x12^\n" +
	"\x19allow_content_types_regex\x18\x04 \x01(\v2#.envoy.type.matcher.v3.RegexMatcherR\x16allowContentTypesRegex\"7\n" +
	"\tValueType\x12\x12\n" +
	"\x0ePROTOBUF_VALUE\x10\x00\x12\n" +
	"\n" +
	"\x06STRING\x10\x01\x12\n" +
	"\n" +
	"\x06NUMBER\x10\x02B\xcd\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"?io.envoyproxy.envoy.extensions.filters.http.json_to_metadata.v3B\x13JsonToMetadataProtoP\x01Zkgithub.com/envoyproxy/go-control-plane/envoy/extensions/filters/http/json_to_metadata/v3;json_to_metadatav3b\x06proto3"

var (
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescData []byte
)

func file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDesc), len(file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDescData
}

var file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_goTypes = []any{
	(JsonToMetadata_ValueType)(0),       // 0: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.ValueType
	(*JsonToMetadata)(nil),              // 1: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata
	(*JsonToMetadata_KeyValuePair)(nil), // 2: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePair
	(*JsonToMetadata_Selector)(nil),     // 3: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Selector
	(*JsonToMetadata_Rule)(nil),         // 4: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Rule
	(*JsonToMetadata_MatchRules)(nil),   // 5: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRules
	(*structpb.Value)(nil),              // 6: google.protobuf.Value
	(*v3.RegexMatcher)(nil),             // 7: envoy.type.matcher.v3.RegexMatcher
}
var file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_depIdxs = []int32{
	5,  // 0: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.request_rules:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRules
	5,  // 1: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.response_rules:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRules
	6,  // 2: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePair.value:type_name -> google.protobuf.Value
	0,  // 3: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePair.type:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.ValueType
	3,  // 4: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Rule.selectors:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Selector
	2,  // 5: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Rule.on_present:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePair
	2,  // 6: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Rule.on_missing:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePair
	2,  // 7: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Rule.on_error:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.KeyValuePair
	4,  // 8: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRules.rules:type_name -> envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.Rule
	7,  // 9: envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata.MatchRules.allow_content_types_regex:type_name -> envoy.type.matcher.v3.RegexMatcher
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_init() }
func file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_init() {
	if File_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto != nil {
		return
	}
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[1].OneofWrappers = []any{
		(*JsonToMetadata_KeyValuePair_Value)(nil),
	}
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes[2].OneofWrappers = []any{
		(*JsonToMetadata_Selector_Key)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDesc), len(file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_depIdxs,
		EnumInfos:         file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_enumTypes,
		MessageInfos:      file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto = out.File
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_goTypes = nil
	file_envoy_extensions_filters_http_json_to_metadata_v3_json_to_metadata_proto_depIdxs = nil
}
