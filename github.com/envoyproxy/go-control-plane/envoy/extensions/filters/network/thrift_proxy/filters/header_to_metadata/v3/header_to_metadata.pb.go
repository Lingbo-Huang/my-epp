// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/network/thrift_proxy/filters/header_to_metadata/v3/header_to_metadata.proto

package header_to_metadatav3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeaderToMetadata_ValueType int32

const (
	HeaderToMetadata_STRING HeaderToMetadata_ValueType = 0
	HeaderToMetadata_NUMBER HeaderToMetadata_ValueType = 1
	// The value is a serialized `protobuf.Value
	// <https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto#L62>`_.
	HeaderToMetadata_PROTOBUF_VALUE HeaderToMetadata_ValueType = 2
)

// Enum value maps for HeaderToMetadata_ValueType.
var (
	HeaderToMetadata_ValueType_name = map[int32]string{
		0: "STRING",
		1: "NUMBER",
		2: "PROTOBUF_VALUE",
	}
	HeaderToMetadata_ValueType_value = map[string]int32{
		"STRING":         0,
		"NUMBER":         1,
		"PROTOBUF_VALUE": 2,
	}
)

func (x HeaderToMetadata_ValueType) Enum() *HeaderToMetadata_ValueType {
	p := new(HeaderToMetadata_ValueType)
	*p = x
	return p
}

func (x HeaderToMetadata_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeaderToMetadata_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_enumTypes[0].Descriptor()
}

func (HeaderToMetadata_ValueType) Type() protoreflect.EnumType {
	return &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_enumTypes[0]
}

func (x HeaderToMetadata_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeaderToMetadata_ValueType.Descriptor instead.
func (HeaderToMetadata_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescGZIP(), []int{0, 0}
}

// ValueEncode defines the encoding algorithm.
type HeaderToMetadata_ValueEncode int32

const (
	// The value is not encoded.
	HeaderToMetadata_NONE HeaderToMetadata_ValueEncode = 0
	// The value is encoded in `Base64 <https://tools.ietf.org/html/rfc4648#section-4>`_.
	// Note: this is mostly used for STRING and PROTOBUF_VALUE to escape the
	// non-ASCII characters in the header.
	HeaderToMetadata_BASE64 HeaderToMetadata_ValueEncode = 1
)

// Enum value maps for HeaderToMetadata_ValueEncode.
var (
	HeaderToMetadata_ValueEncode_name = map[int32]string{
		0: "NONE",
		1: "BASE64",
	}
	HeaderToMetadata_ValueEncode_value = map[string]int32{
		"NONE":   0,
		"BASE64": 1,
	}
)

func (x HeaderToMetadata_ValueEncode) Enum() *HeaderToMetadata_ValueEncode {
	p := new(HeaderToMetadata_ValueEncode)
	*p = x
	return p
}

func (x HeaderToMetadata_ValueEncode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeaderToMetadata_ValueEncode) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_enumTypes[1].Descriptor()
}

func (HeaderToMetadata_ValueEncode) Type() protoreflect.EnumType {
	return &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_enumTypes[1]
}

func (x HeaderToMetadata_ValueEncode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeaderToMetadata_ValueEncode.Descriptor instead.
func (HeaderToMetadata_ValueEncode) EnumDescriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescGZIP(), []int{0, 1}
}

type HeaderToMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of rules to apply to requests.
	RequestRules  []*HeaderToMetadata_Rule `protobuf:"bytes,1,rep,name=request_rules,json=requestRules,proto3" json:"request_rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderToMetadata) Reset() {
	*x = HeaderToMetadata{}
	mi := &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderToMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderToMetadata) ProtoMessage() {}

func (x *HeaderToMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderToMetadata.ProtoReflect.Descriptor instead.
func (*HeaderToMetadata) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *HeaderToMetadata) GetRequestRules() []*HeaderToMetadata_Rule {
	if x != nil {
		return x.RequestRules
	}
	return nil
}

// [#next-free-field: 7]
type HeaderToMetadata_KeyValuePair struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace — if this is empty, the filter's namespace will be used.
	MetadataNamespace string `protobuf:"bytes,1,opt,name=metadata_namespace,json=metadataNamespace,proto3" json:"metadata_namespace,omitempty"`
	// The key to use within the namespace.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to ValueType:
	//
	//	*HeaderToMetadata_KeyValuePair_Value
	//	*HeaderToMetadata_KeyValuePair_RegexValueRewrite
	ValueType isHeaderToMetadata_KeyValuePair_ValueType `protobuf_oneof:"value_type"`
	// The value's type — defaults to string.
	Type HeaderToMetadata_ValueType `protobuf:"varint,5,opt,name=type,proto3,enum=envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata_ValueType" json:"type,omitempty"`
	// How is the value encoded, default is NONE (not encoded).
	// The value will be decoded accordingly before storing to metadata.
	Encode        HeaderToMetadata_ValueEncode `protobuf:"varint,6,opt,name=encode,proto3,enum=envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata_ValueEncode" json:"encode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderToMetadata_KeyValuePair) Reset() {
	*x = HeaderToMetadata_KeyValuePair{}
	mi := &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderToMetadata_KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderToMetadata_KeyValuePair) ProtoMessage() {}

func (x *HeaderToMetadata_KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderToMetadata_KeyValuePair.ProtoReflect.Descriptor instead.
func (*HeaderToMetadata_KeyValuePair) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescGZIP(), []int{0, 0}
}

func (x *HeaderToMetadata_KeyValuePair) GetMetadataNamespace() string {
	if x != nil {
		return x.MetadataNamespace
	}
	return ""
}

func (x *HeaderToMetadata_KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeaderToMetadata_KeyValuePair) GetValueType() isHeaderToMetadata_KeyValuePair_ValueType {
	if x != nil {
		return x.ValueType
	}
	return nil
}

func (x *HeaderToMetadata_KeyValuePair) GetValue() string {
	if x != nil {
		if x, ok := x.ValueType.(*HeaderToMetadata_KeyValuePair_Value); ok {
			return x.Value
		}
	}
	return ""
}

func (x *HeaderToMetadata_KeyValuePair) GetRegexValueRewrite() *v3.RegexMatchAndSubstitute {
	if x != nil {
		if x, ok := x.ValueType.(*HeaderToMetadata_KeyValuePair_RegexValueRewrite); ok {
			return x.RegexValueRewrite
		}
	}
	return nil
}

func (x *HeaderToMetadata_KeyValuePair) GetType() HeaderToMetadata_ValueType {
	if x != nil {
		return x.Type
	}
	return HeaderToMetadata_STRING
}

func (x *HeaderToMetadata_KeyValuePair) GetEncode() HeaderToMetadata_ValueEncode {
	if x != nil {
		return x.Encode
	}
	return HeaderToMetadata_NONE
}

type isHeaderToMetadata_KeyValuePair_ValueType interface {
	isHeaderToMetadata_KeyValuePair_ValueType()
}

type HeaderToMetadata_KeyValuePair_Value struct {
	// The value to pair with the given key.
	//
	// When used for on_present case, if value is non-empty it'll be used instead
	// of the header value. If both are empty, the header value is used as-is.
	//
	// When used for on_missing case, a non-empty value must be provided.
	Value string `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type HeaderToMetadata_KeyValuePair_RegexValueRewrite struct {
	// If present, the header's value will be matched and substituted with this.
	// If there is no match or substitution, the header value is used as-is.
	//
	// This is only used for on_present.
	RegexValueRewrite *v3.RegexMatchAndSubstitute `protobuf:"bytes,4,opt,name=regex_value_rewrite,json=regexValueRewrite,proto3,oneof"`
}

func (*HeaderToMetadata_KeyValuePair_Value) isHeaderToMetadata_KeyValuePair_ValueType() {}

func (*HeaderToMetadata_KeyValuePair_RegexValueRewrite) isHeaderToMetadata_KeyValuePair_ValueType() {}

// A Rule defines what metadata to apply when a header is present or missing.
type HeaderToMetadata_Rule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies that a match will be performed on the value of a header.
	//
	// The header to be extracted.
	Header string `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// If the header is present, apply this metadata KeyValuePair.
	//
	// If the value in the KeyValuePair is non-empty, it'll be used instead
	// of the header value.
	OnPresent *HeaderToMetadata_KeyValuePair `protobuf:"bytes,2,opt,name=on_present,json=onPresent,proto3" json:"on_present,omitempty"`
	// If the header is not present, apply this metadata KeyValuePair.
	//
	// The value in the KeyValuePair must be set, since it'll be used in lieu
	// of the missing header value.
	OnMissing *HeaderToMetadata_KeyValuePair `protobuf:"bytes,3,opt,name=on_missing,json=onMissing,proto3" json:"on_missing,omitempty"`
	// Whether or not to remove the header after a rule is applied.
	//
	// This prevents headers from leaking.
	Remove        bool `protobuf:"varint,4,opt,name=remove,proto3" json:"remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderToMetadata_Rule) Reset() {
	*x = HeaderToMetadata_Rule{}
	mi := &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderToMetadata_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderToMetadata_Rule) ProtoMessage() {}

func (x *HeaderToMetadata_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderToMetadata_Rule.ProtoReflect.Descriptor instead.
func (*HeaderToMetadata_Rule) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescGZIP(), []int{0, 1}
}

func (x *HeaderToMetadata_Rule) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *HeaderToMetadata_Rule) GetOnPresent() *HeaderToMetadata_KeyValuePair {
	if x != nil {
		return x.OnPresent
	}
	return nil
}

func (x *HeaderToMetadata_Rule) GetOnMissing() *HeaderToMetadata_KeyValuePair {
	if x != nil {
		return x.OnMissing
	}
	return nil
}

func (x *HeaderToMetadata_Rule) GetRemove() bool {
	if x != nil {
		return x.Remove
	}
	return false
}

var File_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDesc = "" +
	"\n" +
	"denvoy/extensions/filters/network/thrift_proxy/filters/header_to_metadata/v3/header_to_metadata.proto\x12Kenvoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3\x1a!envoy/type/matcher/v3/regex.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xd3\b\n" +
	"\x10HeaderToMetadata\x12\x91\x01\n" +
	"\rrequest_rules\x18\x01 \x03(\v2b.envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.RuleB\b\xfaB\x05\x92\x01\x02\b\x01R\frequestRules\x1a\xec\x03\n" +
	"\fKeyValuePair\x12-\n" +
	"\x12metadata_namespace\x18\x01 \x01(\tR\x11metadataNamespace\x12\x19\n" +
	"\x03key\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03key\x12\x16\n" +
	"\x05value\x18\x03 \x01(\tH\x00R\x05value\x12`\n" +
	"\x13regex_value_rewrite\x18\x04 \x01(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteH\x00R\x11regexValueRewrite\x12\x85\x01\n" +
	"\x04type\x18\x05 \x01(\x0e2g.envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueTypeB\b\xfaB\x05\x82\x01\x02\x10\x01R\x04type\x12\x81\x01\n" +
	"\x06encode\x18\x06 \x01(\x0e2i.envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueEncodeR\x06encodeB\f\n" +
	"\n" +
	"value_type\x1a\xdd\x02\n" +
	"\x04Rule\x12%\n" +
	"\x06header\x18\x01 \x01(\tB\r\xfaB\n" +
	"r\b\x10\x01\xc8\x01\x00\xc0\x01\x01R\x06header\x12\x89\x01\n" +
	"\n" +
	"on_present\x18\x02 \x01(\v2j.envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePairR\tonPresent\x12\x89\x01\n" +
	"\n" +
	"on_missing\x18\x03 \x01(\v2j.envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePairR\tonMissing\x12\x16\n" +
	"\x06remove\x18\x04 \x01(\bR\x06remove\"7\n" +
	"\tValueType\x12\n" +
	"\n" +
	"\x06STRING\x10\x00\x12\n" +
	"\n" +
	"\x06NUMBER\x10\x01\x12\x12\n" +
	"\x0ePROTOBUF_VALUE\x10\x02\"#\n" +
	"\vValueEncode\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06BASE64\x10\x01B\x86\x02\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"Yio.envoyproxy.envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3B\x15HeaderToMetadataProtoP\x01Z\x87\x01github.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/thrift_proxy/filters/header_to_metadata/v3;header_to_metadatav3b\x06proto3"

var (
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescData []byte
)

func file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDesc), len(file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDescData
}

var file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_goTypes = []any{
	(HeaderToMetadata_ValueType)(0),       // 0: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueType
	(HeaderToMetadata_ValueEncode)(0),     // 1: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueEncode
	(*HeaderToMetadata)(nil),              // 2: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata
	(*HeaderToMetadata_KeyValuePair)(nil), // 3: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair
	(*HeaderToMetadata_Rule)(nil),         // 4: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.Rule
	(*v3.RegexMatchAndSubstitute)(nil),    // 5: envoy.type.matcher.v3.RegexMatchAndSubstitute
}
var file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_depIdxs = []int32{
	4, // 0: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.request_rules:type_name -> envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.Rule
	5, // 1: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair.regex_value_rewrite:type_name -> envoy.type.matcher.v3.RegexMatchAndSubstitute
	0, // 2: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair.type:type_name -> envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueType
	1, // 3: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair.encode:type_name -> envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.ValueEncode
	3, // 4: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.Rule.on_present:type_name -> envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair
	3, // 5: envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.Rule.on_missing:type_name -> envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata.KeyValuePair
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() {
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_init()
}
func file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_init() {
	if File_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto != nil {
		return
	}
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes[1].OneofWrappers = []any{
		(*HeaderToMetadata_KeyValuePair_Value)(nil),
		(*HeaderToMetadata_KeyValuePair_RegexValueRewrite)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDesc), len(file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_depIdxs,
		EnumInfos:         file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_enumTypes,
		MessageInfos:      file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto = out.File
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_goTypes = nil
	file_envoy_extensions_filters_network_thrift_proxy_filters_header_to_metadata_v3_header_to_metadata_proto_depIdxs = nil
}
