// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/filters/network/mongo_proxy/v3/mongo_proxy.proto

package mongo_proxyv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/extensions/filters/common/fault/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [#next-free-field: 6]
type MongoProxy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The human readable prefix to use when emitting :ref:`statistics
	// <config_network_filters_mongo_proxy_stats>`.
	StatPrefix string `protobuf:"bytes,1,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// The optional path to use for writing Mongo access logs. If not access log
	// path is specified no access logs will be written. Note that access log is
	// also gated :ref:`runtime <config_network_filters_mongo_proxy_runtime>`.
	AccessLog string `protobuf:"bytes,2,opt,name=access_log,json=accessLog,proto3" json:"access_log,omitempty"`
	// Inject a fixed delay before proxying a Mongo operation. Delays are
	// applied to the following MongoDB operations: Query, Insert, GetMore,
	// and KillCursors. Once an active delay is in progress, all incoming
	// data up until the timer event fires will be a part of the delay.
	Delay *v3.FaultDelay `protobuf:"bytes,3,opt,name=delay,proto3" json:"delay,omitempty"`
	// Flag to specify whether :ref:`dynamic metadata
	// <config_network_filters_mongo_proxy_dynamic_metadata>` should be emitted. Defaults to false.
	EmitDynamicMetadata bool `protobuf:"varint,4,opt,name=emit_dynamic_metadata,json=emitDynamicMetadata,proto3" json:"emit_dynamic_metadata,omitempty"`
	// List of commands to emit metrics for. Defaults to "delete", "insert", and "update".
	// Note that metrics will not be emitted for "find" commands, since those are considered
	// queries, and metrics for those are emitted under a dedicated "query" namespace.
	Commands      []string `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MongoProxy) Reset() {
	*x = MongoProxy{}
	mi := &file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoProxy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoProxy) ProtoMessage() {}

func (x *MongoProxy) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoProxy.ProtoReflect.Descriptor instead.
func (*MongoProxy) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *MongoProxy) GetStatPrefix() string {
	if x != nil {
		return x.StatPrefix
	}
	return ""
}

func (x *MongoProxy) GetAccessLog() string {
	if x != nil {
		return x.AccessLog
	}
	return ""
}

func (x *MongoProxy) GetDelay() *v3.FaultDelay {
	if x != nil {
		return x.Delay
	}
	return nil
}

func (x *MongoProxy) GetEmitDynamicMetadata() bool {
	if x != nil {
		return x.EmitDynamicMetadata
	}
	return false
}

func (x *MongoProxy) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

var File_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto protoreflect.FileDescriptor

const file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDesc = "" +
	"\n" +
	"Aenvoy/extensions/filters/network/mongo_proxy/v3/mongo_proxy.proto\x12/envoy.extensions.filters.network.mongo_proxy.v3\x1a4envoy/extensions/filters/common/fault/v3/fault.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\"\xaf\x02\n" +
	"\n" +
	"MongoProxy\x12(\n" +
	"\vstat_prefix\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"statPrefix\x12\x1d\n" +
	"\n" +
	"access_log\x18\x02 \x01(\tR\taccessLog\x12J\n" +
	"\x05delay\x18\x03 \x01(\v24.envoy.extensions.filters.common.fault.v3.FaultDelayR\x05delay\x122\n" +
	"\x15emit_dynamic_metadata\x18\x04 \x01(\bR\x13emitDynamicMetadata\x12\x1a\n" +
	"\bcommands\x18\x05 \x03(\tR\bcommands:<\x9aÅˆ\x1e7\n" +
	"5envoy.config.filter.network.mongo_proxy.v2.MongoProxyB\xc0\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"=io.envoyproxy.envoy.extensions.filters.network.mongo_proxy.v3B\x0fMongoProxyProtoP\x01Zdgithub.com/envoyproxy/go-control-plane/envoy/extensions/filters/network/mongo_proxy/v3;mongo_proxyv3b\x06proto3"

var (
	file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescOnce sync.Once
	file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescData []byte
)

func file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescGZIP() []byte {
	file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDesc), len(file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDesc)))
	})
	return file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDescData
}

var file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_goTypes = []any{
	(*MongoProxy)(nil),    // 0: envoy.extensions.filters.network.mongo_proxy.v3.MongoProxy
	(*v3.FaultDelay)(nil), // 1: envoy.extensions.filters.common.fault.v3.FaultDelay
}
var file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.filters.network.mongo_proxy.v3.MongoProxy.delay:type_name -> envoy.extensions.filters.common.fault.v3.FaultDelay
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_init() }
func file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_init() {
	if File_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDesc), len(file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_msgTypes,
	}.Build()
	File_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto = out.File
	file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_goTypes = nil
	file_envoy_extensions_filters_network_mongo_proxy_v3_mongo_proxy_proto_depIdxs = nil
}
