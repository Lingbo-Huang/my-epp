// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/matching/common_inputs/ssl/v3/ssl_inputs.proto

package sslv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// List of comma-delimited URIs in the SAN field of the peer certificate for a downstream.
// [#extension: envoy.matching.inputs.uri_san]
type UriSanInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UriSanInput) Reset() {
	*x = UriSanInput{}
	mi := &file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UriSanInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UriSanInput) ProtoMessage() {}

func (x *UriSanInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UriSanInput.ProtoReflect.Descriptor instead.
func (*UriSanInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescGZIP(), []int{0}
}

// List of comma-delimited DNS entries in the SAN field of the peer certificate for a downstream.
// [#extension: envoy.matching.inputs.dns_san]
type DnsSanInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsSanInput) Reset() {
	*x = DnsSanInput{}
	mi := &file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsSanInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsSanInput) ProtoMessage() {}

func (x *DnsSanInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsSanInput.ProtoReflect.Descriptor instead.
func (*DnsSanInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescGZIP(), []int{1}
}

// Input that matches the subject field of the peer certificate in RFC 2253 format for a
// downstream.
// [#extension: envoy.matching.inputs.subject]
type SubjectInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubjectInput) Reset() {
	*x = SubjectInput{}
	mi := &file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubjectInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectInput) ProtoMessage() {}

func (x *SubjectInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectInput.ProtoReflect.Descriptor instead.
func (*SubjectInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescGZIP(), []int{2}
}

var File_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto protoreflect.FileDescriptor

const file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDesc = "" +
	"\n" +
	"?envoy/extensions/matching/common_inputs/ssl/v3/ssl_inputs.proto\x12.envoy.extensions.matching.common_inputs.ssl.v3\x1a\x1dudpa/annotations/status.proto\"\r\n" +
	"\vUriSanInput\"\r\n" +
	"\vDnsSanInput\"\x0e\n" +
	"\fSubjectInputB\xb5\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"<io.envoyproxy.envoy.extensions.matching.common_inputs.ssl.v3B\x0eSslInputsProtoP\x01Z[github.com/envoyproxy/go-control-plane/envoy/extensions/matching/common_inputs/ssl/v3;sslv3b\x06proto3"

var (
	file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescOnce sync.Once
	file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescData []byte
)

func file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescGZIP() []byte {
	file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDesc), len(file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDesc)))
	})
	return file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDescData
}

var file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_goTypes = []any{
	(*UriSanInput)(nil),  // 0: envoy.extensions.matching.common_inputs.ssl.v3.UriSanInput
	(*DnsSanInput)(nil),  // 1: envoy.extensions.matching.common_inputs.ssl.v3.DnsSanInput
	(*SubjectInput)(nil), // 2: envoy.extensions.matching.common_inputs.ssl.v3.SubjectInput
}
var file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_init() }
func file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_init() {
	if File_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDesc), len(file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_msgTypes,
	}.Build()
	File_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto = out.File
	file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_goTypes = nil
	file_envoy_extensions_matching_common_inputs_ssl_v3_ssl_inputs_proto_depIdxs = nil
}
