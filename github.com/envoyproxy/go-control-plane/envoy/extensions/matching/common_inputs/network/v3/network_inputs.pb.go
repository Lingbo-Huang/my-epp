// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/matching/common_inputs/network/v3/network_inputs.proto

package networkv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Specifies that matching should be performed by the destination IP address.
// [#extension: envoy.matching.inputs.destination_ip]
type DestinationIPInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestinationIPInput) Reset() {
	*x = DestinationIPInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestinationIPInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationIPInput) ProtoMessage() {}

func (x *DestinationIPInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationIPInput.ProtoReflect.Descriptor instead.
func (*DestinationIPInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{0}
}

// Specifies that matching should be performed by the destination port.
// [#extension: envoy.matching.inputs.destination_port]
type DestinationPortInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestinationPortInput) Reset() {
	*x = DestinationPortInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestinationPortInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationPortInput) ProtoMessage() {}

func (x *DestinationPortInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationPortInput.ProtoReflect.Descriptor instead.
func (*DestinationPortInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{1}
}

// Specifies that matching should be performed by the source IP address.
// [#extension: envoy.matching.inputs.source_ip]
type SourceIPInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceIPInput) Reset() {
	*x = SourceIPInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceIPInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceIPInput) ProtoMessage() {}

func (x *SourceIPInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceIPInput.ProtoReflect.Descriptor instead.
func (*SourceIPInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{2}
}

// Specifies that matching should be performed by the source port.
// [#extension: envoy.matching.inputs.source_port]
type SourcePortInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourcePortInput) Reset() {
	*x = SourcePortInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourcePortInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourcePortInput) ProtoMessage() {}

func (x *SourcePortInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourcePortInput.ProtoReflect.Descriptor instead.
func (*SourcePortInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{3}
}

// Input that matches by the directly connected source IP address (this
// will only be different from the source IP address when using a listener
// filter that overrides the source address, such as the :ref:`Proxy Protocol
// listener filter <config_listener_filters_proxy_protocol>`).
// [#extension: envoy.matching.inputs.direct_source_ip]
type DirectSourceIPInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectSourceIPInput) Reset() {
	*x = DirectSourceIPInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectSourceIPInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectSourceIPInput) ProtoMessage() {}

func (x *DirectSourceIPInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectSourceIPInput.ProtoReflect.Descriptor instead.
func (*DirectSourceIPInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{4}
}

// Input that matches by the source IP type.
// Specifies the source IP match type. The values include:
//
// * “local“ - matches a connection originating from the same host,
// [#extension: envoy.matching.inputs.source_type]
type SourceTypeInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceTypeInput) Reset() {
	*x = SourceTypeInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceTypeInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceTypeInput) ProtoMessage() {}

func (x *SourceTypeInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceTypeInput.ProtoReflect.Descriptor instead.
func (*SourceTypeInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{5}
}

// Input that matches by the requested server name (e.g. SNI in TLS).
//
// :ref:`TLS Inspector <config_listener_filters_tls_inspector>` provides the requested server name based on SNI,
// when TLS protocol is detected.
// [#extension: envoy.matching.inputs.server_name]
type ServerNameInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerNameInput) Reset() {
	*x = ServerNameInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerNameInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNameInput) ProtoMessage() {}

func (x *ServerNameInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNameInput.ProtoReflect.Descriptor instead.
func (*ServerNameInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{6}
}

// Input that matches by the transport protocol.
//
// Suggested values include:
//
//   - “raw_buffer“ - default, used when no transport protocol is detected,
//   - “tls“ - set by :ref:`envoy.filters.listener.tls_inspector <config_listener_filters_tls_inspector>`
//     when TLS protocol is detected.
//
// [#extension: envoy.matching.inputs.transport_protocol]
type TransportProtocolInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransportProtocolInput) Reset() {
	*x = TransportProtocolInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransportProtocolInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportProtocolInput) ProtoMessage() {}

func (x *TransportProtocolInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportProtocolInput.ProtoReflect.Descriptor instead.
func (*TransportProtocolInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{7}
}

// List of quoted and comma-separated requested application protocols. The list consists of a
// single negotiated application protocol once the network stream is established.
//
// Examples:
//
// * “'h2','http/1.1'“
// * “'h2c'“
//
// Suggested values in the list include:
//
//   - “http/1.1“ - set by :ref:`envoy.filters.listener.tls_inspector
//     <config_listener_filters_tls_inspector>` and :ref:`envoy.filters.listener.http_inspector
//     <config_listener_filters_http_inspector>`,
//   - “h2“ - set by :ref:`envoy.filters.listener.tls_inspector <config_listener_filters_tls_inspector>`
//   - “h2c“ - set by :ref:`envoy.filters.listener.http_inspector <config_listener_filters_http_inspector>`
//
// .. attention::
//
//	Currently, :ref:`TLS Inspector <config_listener_filters_tls_inspector>` provides
//	application protocol detection based on the requested
//	`ALPN <https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation>`_ values.
//
//	However, the use of ALPN is pretty much limited to the HTTP/2 traffic on the Internet,
//	and matching on values other than ``h2`` is going to lead to a lot of false negatives,
//	unless all connecting clients are known to use ALPN.
//
// [#extension: envoy.matching.inputs.application_protocol]
type ApplicationProtocolInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationProtocolInput) Reset() {
	*x = ApplicationProtocolInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationProtocolInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationProtocolInput) ProtoMessage() {}

func (x *ApplicationProtocolInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationProtocolInput.ProtoReflect.Descriptor instead.
func (*ApplicationProtocolInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{8}
}

// Input that matches by a specific filter state key.
// The value of the provided filter state key will be the raw string representation of the filter state object
// [#extension: envoy.matching.inputs.filter_state]
type FilterStateInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterStateInput) Reset() {
	*x = FilterStateInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterStateInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterStateInput) ProtoMessage() {}

func (x *FilterStateInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterStateInput.ProtoReflect.Descriptor instead.
func (*FilterStateInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{9}
}

func (x *FilterStateInput) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Input that matches dynamic metadata by key.
// DynamicMetadataInput provides a general interface using “filter“ and “path“ to retrieve value from
// :ref:`Metadata <envoy_v3_api_msg_config.core.v3.Metadata>`.
//
// For example, for the following Metadata:
//
// .. code-block:: yaml
//
//	filter_metadata:
//	  envoy.xxx:
//	    prop:
//	      foo: bar
//	      xyz:
//	        hello: envoy
//
// The following DynamicMetadataInput will retrieve a string value "bar" from the Metadata.
//
// .. code-block:: yaml
//
//	filter: envoy.xxx
//	path:
//	- key: prop
//	- key: foo
//
// [#extension: envoy.matching.inputs.dynamic_metadata]
type DynamicMetadataInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The filter name to retrieve the Struct from the Metadata.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// The path to retrieve the Value from the Struct.
	Path          []*DynamicMetadataInput_PathSegment `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicMetadataInput) Reset() {
	*x = DynamicMetadataInput{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicMetadataInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicMetadataInput) ProtoMessage() {}

func (x *DynamicMetadataInput) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicMetadataInput.ProtoReflect.Descriptor instead.
func (*DynamicMetadataInput) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{10}
}

func (x *DynamicMetadataInput) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *DynamicMetadataInput) GetPath() []*DynamicMetadataInput_PathSegment {
	if x != nil {
		return x.Path
	}
	return nil
}

// Specifies the segment in a path to retrieve value from Metadata.
// Note: Currently it's not supported to retrieve a value from a list in Metadata. This means that
// if the segment key refers to a list, it has to be the last segment in a path.
type DynamicMetadataInput_PathSegment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Segment:
	//
	//	*DynamicMetadataInput_PathSegment_Key
	Segment       isDynamicMetadataInput_PathSegment_Segment `protobuf_oneof:"segment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicMetadataInput_PathSegment) Reset() {
	*x = DynamicMetadataInput_PathSegment{}
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicMetadataInput_PathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicMetadataInput_PathSegment) ProtoMessage() {}

func (x *DynamicMetadataInput_PathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicMetadataInput_PathSegment.ProtoReflect.Descriptor instead.
func (*DynamicMetadataInput_PathSegment) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP(), []int{10, 0}
}

func (x *DynamicMetadataInput_PathSegment) GetSegment() isDynamicMetadataInput_PathSegment_Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *DynamicMetadataInput_PathSegment) GetKey() string {
	if x != nil {
		if x, ok := x.Segment.(*DynamicMetadataInput_PathSegment_Key); ok {
			return x.Key
		}
	}
	return ""
}

type isDynamicMetadataInput_PathSegment_Segment interface {
	isDynamicMetadataInput_PathSegment_Segment()
}

type DynamicMetadataInput_PathSegment_Key struct {
	// If specified, use the key to retrieve the value in a Struct.
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

func (*DynamicMetadataInput_PathSegment_Key) isDynamicMetadataInput_PathSegment_Segment() {}

var File_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto protoreflect.FileDescriptor

const file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDesc = "" +
	"\n" +
	"Genvoy/extensions/matching/common_inputs/network/v3/network_inputs.proto\x122envoy.extensions.matching.common_inputs.network.v3\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\x14\n" +
	"\x12DestinationIPInput\"\x16\n" +
	"\x14DestinationPortInput\"\x0f\n" +
	"\rSourceIPInput\"\x11\n" +
	"\x0fSourcePortInput\"\x15\n" +
	"\x13DirectSourceIPInput\"\x11\n" +
	"\x0fSourceTypeInput\"\x11\n" +
	"\x0fServerNameInput\"\x18\n" +
	"\x16TransportProtocolInput\"\x1a\n" +
	"\x18ApplicationProtocolInput\"-\n" +
	"\x10FilterStateInput\x12\x19\n" +
	"\x03key\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03key\"\xe7\x01\n" +
	"\x14DynamicMetadataInput\x12\x1f\n" +
	"\x06filter\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06filter\x12r\n" +
	"\x04path\x18\x02 \x03(\v2T.envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput.PathSegmentB\b\xfaB\x05\x92\x01\x02\b\x01R\x04path\x1a:\n" +
	"\vPathSegment\x12\x1b\n" +
	"\x03key\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01H\x00R\x03keyB\x0e\n" +
	"\asegment\x12\x03\xf8B\x01B\xc5\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"@io.envoyproxy.envoy.extensions.matching.common_inputs.network.v3B\x12NetworkInputsProtoP\x01Zcgithub.com/envoyproxy/go-control-plane/envoy/extensions/matching/common_inputs/network/v3;networkv3b\x06proto3"

var (
	file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescOnce sync.Once
	file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescData []byte
)

func file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescGZIP() []byte {
	file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDesc), len(file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDesc)))
	})
	return file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDescData
}

var file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_goTypes = []any{
	(*DestinationIPInput)(nil),               // 0: envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput
	(*DestinationPortInput)(nil),             // 1: envoy.extensions.matching.common_inputs.network.v3.DestinationPortInput
	(*SourceIPInput)(nil),                    // 2: envoy.extensions.matching.common_inputs.network.v3.SourceIPInput
	(*SourcePortInput)(nil),                  // 3: envoy.extensions.matching.common_inputs.network.v3.SourcePortInput
	(*DirectSourceIPInput)(nil),              // 4: envoy.extensions.matching.common_inputs.network.v3.DirectSourceIPInput
	(*SourceTypeInput)(nil),                  // 5: envoy.extensions.matching.common_inputs.network.v3.SourceTypeInput
	(*ServerNameInput)(nil),                  // 6: envoy.extensions.matching.common_inputs.network.v3.ServerNameInput
	(*TransportProtocolInput)(nil),           // 7: envoy.extensions.matching.common_inputs.network.v3.TransportProtocolInput
	(*ApplicationProtocolInput)(nil),         // 8: envoy.extensions.matching.common_inputs.network.v3.ApplicationProtocolInput
	(*FilterStateInput)(nil),                 // 9: envoy.extensions.matching.common_inputs.network.v3.FilterStateInput
	(*DynamicMetadataInput)(nil),             // 10: envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput
	(*DynamicMetadataInput_PathSegment)(nil), // 11: envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput.PathSegment
}
var file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_depIdxs = []int32{
	11, // 0: envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput.path:type_name -> envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput.PathSegment
	1,  // [1:1] is the sub-list for method output_type
	1,  // [1:1] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_init() }
func file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_init() {
	if File_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto != nil {
		return
	}
	file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes[11].OneofWrappers = []any{
		(*DynamicMetadataInput_PathSegment_Key)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDesc), len(file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_msgTypes,
	}.Build()
	File_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto = out.File
	file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_goTypes = nil
	file_envoy_extensions_matching_common_inputs_network_v3_network_inputs_proto_depIdxs = nil
}
