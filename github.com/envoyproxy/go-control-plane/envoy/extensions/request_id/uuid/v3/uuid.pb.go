// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/request_id/uuid/v3/uuid.proto

package uuidv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the default UUID request ID extension which has the following behavior:
//
//  1. Request ID is propagated using the :ref:`x-request-id
//     <config_http_conn_man_headers_x-request-id>` header.
//
//  2. Request ID is a universally unique identifier `(UUID4)
//     <https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)>`_.
//
//  3. Tracing decision (sampled, forced, etc) is set in 14th nibble of the UUID. By default this will
//     overwrite existing UUIDs received in the “x-request-id“ header if the trace sampling decision
//     is changed. The 14th nibble of the UUID4 has been chosen because it is fixed to '4' by the
//     standard. Thus, '4' indicates a default UUID and no trace status. This nibble is swapped to:
//
//     a. '9': Sampled.
//     b. 'a': Force traced due to server-side override.
//     c. 'b': Force traced due to client-side request ID joining.
//
//     See the :ref:`x-request-id <config_http_conn_man_headers_x-request-id>` documentation for
//     more information.
type UuidRequestIdConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the implementation alters the UUID to contain the trace sampling decision as per the
	// “UuidRequestIdConfig“ message documentation. This defaults to true. If disabled no
	// modification to the UUID will be performed. It is important to note that if disabled,
	// stable sampling of traces, access logs, etc. will no longer work and only random sampling will
	// be possible.
	PackTraceReason *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=pack_trace_reason,json=packTraceReason,proto3" json:"pack_trace_reason,omitempty"`
	// Set whether to use :ref:`x-request-id<config_http_conn_man_headers_x-request-id>` for sampling or not.
	// This defaults to true. See the :ref:`context propagation <arch_overview_tracing_context_propagation>`
	// overview for more information.
	UseRequestIdForTraceSampling *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=use_request_id_for_trace_sampling,json=useRequestIdForTraceSampling,proto3" json:"use_request_id_for_trace_sampling,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *UuidRequestIdConfig) Reset() {
	*x = UuidRequestIdConfig{}
	mi := &file_envoy_extensions_request_id_uuid_v3_uuid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UuidRequestIdConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UuidRequestIdConfig) ProtoMessage() {}

func (x *UuidRequestIdConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_request_id_uuid_v3_uuid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UuidRequestIdConfig.ProtoReflect.Descriptor instead.
func (*UuidRequestIdConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescGZIP(), []int{0}
}

func (x *UuidRequestIdConfig) GetPackTraceReason() *wrapperspb.BoolValue {
	if x != nil {
		return x.PackTraceReason
	}
	return nil
}

func (x *UuidRequestIdConfig) GetUseRequestIdForTraceSampling() *wrapperspb.BoolValue {
	if x != nil {
		return x.UseRequestIdForTraceSampling
	}
	return nil
}

var File_envoy_extensions_request_id_uuid_v3_uuid_proto protoreflect.FileDescriptor

const file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDesc = "" +
	"\n" +
	".envoy/extensions/request_id/uuid/v3/uuid.proto\x12#envoy.extensions.request_id.uuid.v3\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1dudpa/annotations/status.proto\"\xc2\x01\n" +
	"\x13UuidRequestIdConfig\x12F\n" +
	"\x11pack_trace_reason\x18\x01 \x01(\v2\x1a.google.protobuf.BoolValueR\x0fpackTraceReason\x12c\n" +
	"!use_request_id_for_trace_sampling\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x1cuseRequestIdForTraceSamplingB\x9b\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"1io.envoyproxy.envoy.extensions.request_id.uuid.v3B\tUuidProtoP\x01ZQgithub.com/envoyproxy/go-control-plane/envoy/extensions/request_id/uuid/v3;uuidv3b\x06proto3"

var (
	file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescOnce sync.Once
	file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescData []byte
)

func file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescGZIP() []byte {
	file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDesc), len(file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDesc)))
	})
	return file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDescData
}

var file_envoy_extensions_request_id_uuid_v3_uuid_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_request_id_uuid_v3_uuid_proto_goTypes = []any{
	(*UuidRequestIdConfig)(nil),  // 0: envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
	(*wrapperspb.BoolValue)(nil), // 1: google.protobuf.BoolValue
}
var file_envoy_extensions_request_id_uuid_v3_uuid_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig.pack_trace_reason:type_name -> google.protobuf.BoolValue
	1, // 1: envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig.use_request_id_for_trace_sampling:type_name -> google.protobuf.BoolValue
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_extensions_request_id_uuid_v3_uuid_proto_init() }
func file_envoy_extensions_request_id_uuid_v3_uuid_proto_init() {
	if File_envoy_extensions_request_id_uuid_v3_uuid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDesc), len(file_envoy_extensions_request_id_uuid_v3_uuid_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_request_id_uuid_v3_uuid_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_request_id_uuid_v3_uuid_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_request_id_uuid_v3_uuid_proto_msgTypes,
	}.Build()
	File_envoy_extensions_request_id_uuid_v3_uuid_proto = out.File
	file_envoy_extensions_request_id_uuid_v3_uuid_proto_goTypes = nil
	file_envoy_extensions_request_id_uuid_v3_uuid_proto_depIdxs = nil
}
