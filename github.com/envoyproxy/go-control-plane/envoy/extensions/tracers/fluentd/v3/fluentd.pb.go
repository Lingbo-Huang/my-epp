// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/extensions/tracers/fluentd/v3/fluentd.proto

package fluentdv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for the Fluentd tracer.
// This tracer extension will send the emitted traces over a TCP connection to an upstream that is accepting
// the Fluentd Forward Protocol as described in: `Fluentd Forward Protocol Specification
// <https://github.com/fluent/fluentd/wiki/Forward-Protocol-Specification-v1>`_.
// [#extension: envoy.tracers.fluentd]
// [#next-free-field: 7]
type FluentdConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The upstream cluster to connect to for streaming the Fluentd messages.
	Cluster string `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// A tag is a string separated with “.“ (e.g. “log.type“) to categorize events.
	// See: https://github.com/fluent/fluentd/wiki/Forward-Protocol-Specification-v1#message-modes
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// The prefix to use when emitting tracer stats.
	StatPrefix string `protobuf:"bytes,3,opt,name=stat_prefix,json=statPrefix,proto3" json:"stat_prefix,omitempty"`
	// Interval for flushing traces to the TCP stream. Tracer will flush requests every time
	// this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
	// 1 second.
	BufferFlushInterval *durationpb.Duration `protobuf:"bytes,4,opt,name=buffer_flush_interval,json=bufferFlushInterval,proto3" json:"buffer_flush_interval,omitempty"`
	// Soft size limit in bytes for access log entries buffer. The logger will buffer requests until
	// this limit it hit, or every time flush interval is elapsed, whichever comes first. When the buffer
	// limit is hit, the logger will immediately flush the buffer contents. Setting it to zero effectively
	// disables the batching. Defaults to 16384.
	BufferSizeBytes *wrapperspb.UInt32Value `protobuf:"bytes,5,opt,name=buffer_size_bytes,json=bufferSizeBytes,proto3" json:"buffer_size_bytes,omitempty"`
	// Optional retry, in case upstream connection has failed. If this field is not set, the default values will be applied.
	RetryPolicy   *v3.RetryPolicy `protobuf:"bytes,6,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FluentdConfig) Reset() {
	*x = FluentdConfig{}
	mi := &file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FluentdConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FluentdConfig) ProtoMessage() {}

func (x *FluentdConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FluentdConfig.ProtoReflect.Descriptor instead.
func (*FluentdConfig) Descriptor() ([]byte, []int) {
	return file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescGZIP(), []int{0}
}

func (x *FluentdConfig) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *FluentdConfig) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *FluentdConfig) GetStatPrefix() string {
	if x != nil {
		return x.StatPrefix
	}
	return ""
}

func (x *FluentdConfig) GetBufferFlushInterval() *durationpb.Duration {
	if x != nil {
		return x.BufferFlushInterval
	}
	return nil
}

func (x *FluentdConfig) GetBufferSizeBytes() *wrapperspb.UInt32Value {
	if x != nil {
		return x.BufferSizeBytes
	}
	return nil
}

func (x *FluentdConfig) GetRetryPolicy() *v3.RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

var File_envoy_extensions_tracers_fluentd_v3_fluentd_proto protoreflect.FileDescriptor

const file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDesc = "" +
	"\n" +
	"1envoy/extensions/tracers/fluentd/v3/fluentd.proto\x12#envoy.extensions.tracers.fluentd.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1eudpa/annotations/migrate.proto\x1a\x1dudpa/annotations/status.proto\x1a\x17validate/validate.proto\"\xe0\x02\n" +
	"\rFluentdConfig\x12!\n" +
	"\acluster\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\acluster\x12\x19\n" +
	"\x03tag\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03tag\x12(\n" +
	"\vstat_prefix\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"statPrefix\x12W\n" +
	"\x15buffer_flush_interval\x18\x04 \x01(\v2\x19.google.protobuf.DurationB\b\xfaB\x05\xaa\x01\x02*\x00R\x13bufferFlushInterval\x12H\n" +
	"\x11buffer_size_bytes\x18\x05 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x0fbufferSizeBytes\x12D\n" +
	"\fretry_policy\x18\x06 \x01(\v2!.envoy.config.core.v3.RetryPolicyR\vretryPolicyB\xd1\x01\xf2\x98\xfe\x8f\x05*\x12(envoy.extensions.tracers.fluentd.v4alpha\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"1io.envoyproxy.envoy.extensions.tracers.fluentd.v3B\fFluentdProtoP\x01ZTgithub.com/envoyproxy/go-control-plane/envoy/extensions/tracers/fluentd/v3;fluentdv3b\x06proto3"

var (
	file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescOnce sync.Once
	file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescData []byte
)

func file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescGZIP() []byte {
	file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescOnce.Do(func() {
		file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDesc), len(file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDesc)))
	})
	return file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDescData
}

var file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_goTypes = []any{
	(*FluentdConfig)(nil),          // 0: envoy.extensions.tracers.fluentd.v3.FluentdConfig
	(*durationpb.Duration)(nil),    // 1: google.protobuf.Duration
	(*wrapperspb.UInt32Value)(nil), // 2: google.protobuf.UInt32Value
	(*v3.RetryPolicy)(nil),         // 3: envoy.config.core.v3.RetryPolicy
}
var file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_depIdxs = []int32{
	1, // 0: envoy.extensions.tracers.fluentd.v3.FluentdConfig.buffer_flush_interval:type_name -> google.protobuf.Duration
	2, // 1: envoy.extensions.tracers.fluentd.v3.FluentdConfig.buffer_size_bytes:type_name -> google.protobuf.UInt32Value
	3, // 2: envoy.extensions.tracers.fluentd.v3.FluentdConfig.retry_policy:type_name -> envoy.config.core.v3.RetryPolicy
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_init() }
func file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_init() {
	if File_envoy_extensions_tracers_fluentd_v3_fluentd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDesc), len(file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_goTypes,
		DependencyIndexes: file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_depIdxs,
		MessageInfos:      file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_msgTypes,
	}.Build()
	File_envoy_extensions_tracers_fluentd_v3_fluentd_proto = out.File
	file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_goTypes = nil
	file_envoy_extensions_tracers_fluentd_v3_fluentd_proto_depIdxs = nil
}
