// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/type/matcher/node.proto

package matcher

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Specifies the way to match a Node.
// The match follows AND semantics.
type NodeMatcher struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Specifies match criteria on the node id.
	NodeId *StringMatcher `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Specifies match criteria on the node metadata.
	NodeMetadatas []*StructMatcher `protobuf:"bytes,2,rep,name=node_metadatas,json=nodeMetadatas,proto3" json:"node_metadatas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeMatcher) Reset() {
	*x = NodeMatcher{}
	mi := &file_envoy_type_matcher_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMatcher) ProtoMessage() {}

func (x *NodeMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_type_matcher_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMatcher.ProtoReflect.Descriptor instead.
func (*NodeMatcher) Descriptor() ([]byte, []int) {
	return file_envoy_type_matcher_node_proto_rawDescGZIP(), []int{0}
}

func (x *NodeMatcher) GetNodeId() *StringMatcher {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *NodeMatcher) GetNodeMetadatas() []*StructMatcher {
	if x != nil {
		return x.NodeMetadatas
	}
	return nil
}

var File_envoy_type_matcher_node_proto protoreflect.FileDescriptor

const file_envoy_type_matcher_node_proto_rawDesc = "" +
	"\n" +
	"\x1denvoy/type/matcher/node.proto\x12\x12envoy.type.matcher\x1a\x1fenvoy/type/matcher/string.proto\x1a\x1fenvoy/type/matcher/struct.proto\x1a\x1dudpa/annotations/status.proto\"\x93\x01\n" +
	"\vNodeMatcher\x12:\n" +
	"\anode_id\x18\x01 \x01(\v2!.envoy.type.matcher.StringMatcherR\x06nodeId\x12H\n" +
	"\x0enode_metadatas\x18\x02 \x03(\v2!.envoy.type.matcher.StructMatcherR\rnodeMetadatasBr\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	" io.envoyproxy.envoy.type.matcherB\tNodeProtoP\x01Z9github.com/envoyproxy/go-control-plane/envoy/type/matcherb\x06proto3"

var (
	file_envoy_type_matcher_node_proto_rawDescOnce sync.Once
	file_envoy_type_matcher_node_proto_rawDescData []byte
)

func file_envoy_type_matcher_node_proto_rawDescGZIP() []byte {
	file_envoy_type_matcher_node_proto_rawDescOnce.Do(func() {
		file_envoy_type_matcher_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_type_matcher_node_proto_rawDesc), len(file_envoy_type_matcher_node_proto_rawDesc)))
	})
	return file_envoy_type_matcher_node_proto_rawDescData
}

var file_envoy_type_matcher_node_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_type_matcher_node_proto_goTypes = []any{
	(*NodeMatcher)(nil),   // 0: envoy.type.matcher.NodeMatcher
	(*StringMatcher)(nil), // 1: envoy.type.matcher.StringMatcher
	(*StructMatcher)(nil), // 2: envoy.type.matcher.StructMatcher
}
var file_envoy_type_matcher_node_proto_depIdxs = []int32{
	1, // 0: envoy.type.matcher.NodeMatcher.node_id:type_name -> envoy.type.matcher.StringMatcher
	2, // 1: envoy.type.matcher.NodeMatcher.node_metadatas:type_name -> envoy.type.matcher.StructMatcher
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_envoy_type_matcher_node_proto_init() }
func file_envoy_type_matcher_node_proto_init() {
	if File_envoy_type_matcher_node_proto != nil {
		return
	}
	file_envoy_type_matcher_string_proto_init()
	file_envoy_type_matcher_struct_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_type_matcher_node_proto_rawDesc), len(file_envoy_type_matcher_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_type_matcher_node_proto_goTypes,
		DependencyIndexes: file_envoy_type_matcher_node_proto_depIdxs,
		MessageInfos:      file_envoy_type_matcher_node_proto_msgTypes,
	}.Build()
	File_envoy_type_matcher_node_proto = out.File
	file_envoy_type_matcher_node_proto_goTypes = nil
	file_envoy_type_matcher_node_proto_depIdxs = nil
}
