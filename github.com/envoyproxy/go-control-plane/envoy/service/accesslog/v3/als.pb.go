// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/service/accesslog/v3/als.proto

package accesslogv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	v31 "github.com/envoyproxy/go-control-plane/envoy/data/accesslog/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Empty response for the StreamAccessLogs API. Will never be sent. See below.
type StreamAccessLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAccessLogsResponse) Reset() {
	*x = StreamAccessLogsResponse{}
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAccessLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAccessLogsResponse) ProtoMessage() {}

func (x *StreamAccessLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAccessLogsResponse.ProtoReflect.Descriptor instead.
func (*StreamAccessLogsResponse) Descriptor() ([]byte, []int) {
	return file_envoy_service_accesslog_v3_als_proto_rawDescGZIP(), []int{0}
}

// Stream message for the StreamAccessLogs API. Envoy will open a stream to the server and stream
// access logs without ever expecting a response.
type StreamAccessLogsMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier data that will only be sent in the first message on the stream. This is effectively
	// structured metadata and is a performance optimization.
	Identifier *StreamAccessLogsMessage_Identifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Batches of log entries of a single type. Generally speaking, a given stream should only
	// ever include one type of log entry.
	//
	// Types that are valid to be assigned to LogEntries:
	//
	//	*StreamAccessLogsMessage_HttpLogs
	//	*StreamAccessLogsMessage_TcpLogs
	LogEntries    isStreamAccessLogsMessage_LogEntries `protobuf_oneof:"log_entries"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAccessLogsMessage) Reset() {
	*x = StreamAccessLogsMessage{}
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAccessLogsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAccessLogsMessage) ProtoMessage() {}

func (x *StreamAccessLogsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAccessLogsMessage.ProtoReflect.Descriptor instead.
func (*StreamAccessLogsMessage) Descriptor() ([]byte, []int) {
	return file_envoy_service_accesslog_v3_als_proto_rawDescGZIP(), []int{1}
}

func (x *StreamAccessLogsMessage) GetIdentifier() *StreamAccessLogsMessage_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *StreamAccessLogsMessage) GetLogEntries() isStreamAccessLogsMessage_LogEntries {
	if x != nil {
		return x.LogEntries
	}
	return nil
}

func (x *StreamAccessLogsMessage) GetHttpLogs() *StreamAccessLogsMessage_HTTPAccessLogEntries {
	if x != nil {
		if x, ok := x.LogEntries.(*StreamAccessLogsMessage_HttpLogs); ok {
			return x.HttpLogs
		}
	}
	return nil
}

func (x *StreamAccessLogsMessage) GetTcpLogs() *StreamAccessLogsMessage_TCPAccessLogEntries {
	if x != nil {
		if x, ok := x.LogEntries.(*StreamAccessLogsMessage_TcpLogs); ok {
			return x.TcpLogs
		}
	}
	return nil
}

type isStreamAccessLogsMessage_LogEntries interface {
	isStreamAccessLogsMessage_LogEntries()
}

type StreamAccessLogsMessage_HttpLogs struct {
	HttpLogs *StreamAccessLogsMessage_HTTPAccessLogEntries `protobuf:"bytes,2,opt,name=http_logs,json=httpLogs,proto3,oneof"`
}

type StreamAccessLogsMessage_TcpLogs struct {
	TcpLogs *StreamAccessLogsMessage_TCPAccessLogEntries `protobuf:"bytes,3,opt,name=tcp_logs,json=tcpLogs,proto3,oneof"`
}

func (*StreamAccessLogsMessage_HttpLogs) isStreamAccessLogsMessage_LogEntries() {}

func (*StreamAccessLogsMessage_TcpLogs) isStreamAccessLogsMessage_LogEntries() {}

type StreamAccessLogsMessage_Identifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The node sending the access log messages over the stream.
	Node *v3.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// The friendly name of the log configured in :ref:`CommonGrpcAccessLogConfig
	// <envoy_v3_api_msg_extensions.access_loggers.grpc.v3.CommonGrpcAccessLogConfig>`.
	LogName       string `protobuf:"bytes,2,opt,name=log_name,json=logName,proto3" json:"log_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAccessLogsMessage_Identifier) Reset() {
	*x = StreamAccessLogsMessage_Identifier{}
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAccessLogsMessage_Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAccessLogsMessage_Identifier) ProtoMessage() {}

func (x *StreamAccessLogsMessage_Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAccessLogsMessage_Identifier.ProtoReflect.Descriptor instead.
func (*StreamAccessLogsMessage_Identifier) Descriptor() ([]byte, []int) {
	return file_envoy_service_accesslog_v3_als_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StreamAccessLogsMessage_Identifier) GetNode() *v3.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *StreamAccessLogsMessage_Identifier) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

// Wrapper for batches of HTTP access log entries.
type StreamAccessLogsMessage_HTTPAccessLogEntries struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	LogEntry      []*v31.HTTPAccessLogEntry `protobuf:"bytes,1,rep,name=log_entry,json=logEntry,proto3" json:"log_entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAccessLogsMessage_HTTPAccessLogEntries) Reset() {
	*x = StreamAccessLogsMessage_HTTPAccessLogEntries{}
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAccessLogsMessage_HTTPAccessLogEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAccessLogsMessage_HTTPAccessLogEntries) ProtoMessage() {}

func (x *StreamAccessLogsMessage_HTTPAccessLogEntries) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAccessLogsMessage_HTTPAccessLogEntries.ProtoReflect.Descriptor instead.
func (*StreamAccessLogsMessage_HTTPAccessLogEntries) Descriptor() ([]byte, []int) {
	return file_envoy_service_accesslog_v3_als_proto_rawDescGZIP(), []int{1, 1}
}

func (x *StreamAccessLogsMessage_HTTPAccessLogEntries) GetLogEntry() []*v31.HTTPAccessLogEntry {
	if x != nil {
		return x.LogEntry
	}
	return nil
}

// Wrapper for batches of TCP access log entries.
type StreamAccessLogsMessage_TCPAccessLogEntries struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	LogEntry      []*v31.TCPAccessLogEntry `protobuf:"bytes,1,rep,name=log_entry,json=logEntry,proto3" json:"log_entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAccessLogsMessage_TCPAccessLogEntries) Reset() {
	*x = StreamAccessLogsMessage_TCPAccessLogEntries{}
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAccessLogsMessage_TCPAccessLogEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAccessLogsMessage_TCPAccessLogEntries) ProtoMessage() {}

func (x *StreamAccessLogsMessage_TCPAccessLogEntries) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_accesslog_v3_als_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAccessLogsMessage_TCPAccessLogEntries.ProtoReflect.Descriptor instead.
func (*StreamAccessLogsMessage_TCPAccessLogEntries) Descriptor() ([]byte, []int) {
	return file_envoy_service_accesslog_v3_als_proto_rawDescGZIP(), []int{1, 2}
}

func (x *StreamAccessLogsMessage_TCPAccessLogEntries) GetLogEntry() []*v31.TCPAccessLogEntry {
	if x != nil {
		return x.LogEntry
	}
	return nil
}

var File_envoy_service_accesslog_v3_als_proto protoreflect.FileDescriptor

const file_envoy_service_accesslog_v3_als_proto_rawDesc = "" +
	"\n" +
	"$envoy/service/accesslog/v3/als.proto\x12\x1aenvoy.service.accesslog.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a'envoy/data/accesslog/v3/accesslog.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\"V\n" +
	"\x18StreamAccessLogsResponse::\x9aň\x1e5\n" +
	"3envoy.service.accesslog.v2.StreamAccessLogsResponse\"\xc1\a\n" +
	"\x17StreamAccessLogsMessage\x12^\n" +
	"\n" +
	"identifier\x18\x01 \x01(\v2>.envoy.service.accesslog.v3.StreamAccessLogsMessage.IdentifierR\n" +
	"identifier\x12g\n" +
	"\thttp_logs\x18\x02 \x01(\v2H.envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntriesH\x00R\bhttpLogs\x12d\n" +
	"\btcp_logs\x18\x03 \x01(\v2G.envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntriesH\x00R\atcpLogs\x1a\xb0\x01\n" +
	"\n" +
	"Identifier\x128\n" +
	"\x04node\x18\x01 \x01(\v2\x1a.envoy.config.core.v3.NodeB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x04node\x12\"\n" +
	"\blog_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\alogName:D\x9aň\x1e?\n" +
	"=envoy.service.accesslog.v2.StreamAccessLogsMessage.Identifier\x1a\xba\x01\n" +
	"\x14HTTPAccessLogEntries\x12R\n" +
	"\tlog_entry\x18\x01 \x03(\v2+.envoy.data.accesslog.v3.HTTPAccessLogEntryB\b\xfaB\x05\x92\x01\x02\b\x01R\blogEntry:N\x9aň\x1eI\n" +
	"Genvoy.service.accesslog.v2.StreamAccessLogsMessage.HTTPAccessLogEntries\x1a\xb7\x01\n" +
	"\x13TCPAccessLogEntries\x12Q\n" +
	"\tlog_entry\x18\x01 \x03(\v2*.envoy.data.accesslog.v3.TCPAccessLogEntryB\b\xfaB\x05\x92\x01\x02\b\x01R\blogEntry:M\x9aň\x1eH\n" +
	"Fenvoy.service.accesslog.v2.StreamAccessLogsMessage.TCPAccessLogEntries:9\x9aň\x1e4\n" +
	"2envoy.service.accesslog.v2.StreamAccessLogsMessageB\x12\n" +
	"\vlog_entries\x12\x03\xf8B\x012\x96\x01\n" +
	"\x10AccessLogService\x12\x81\x01\n" +
	"\x10StreamAccessLogs\x123.envoy.service.accesslog.v3.StreamAccessLogsMessage\x1a4.envoy.service.accesslog.v3.StreamAccessLogsResponse\"\x00(\x01B\x8d\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"(io.envoyproxy.envoy.service.accesslog.v3B\bAlsProtoP\x01ZMgithub.com/envoyproxy/go-control-plane/envoy/service/accesslog/v3;accesslogv3b\x06proto3"

var (
	file_envoy_service_accesslog_v3_als_proto_rawDescOnce sync.Once
	file_envoy_service_accesslog_v3_als_proto_rawDescData []byte
)

func file_envoy_service_accesslog_v3_als_proto_rawDescGZIP() []byte {
	file_envoy_service_accesslog_v3_als_proto_rawDescOnce.Do(func() {
		file_envoy_service_accesslog_v3_als_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_service_accesslog_v3_als_proto_rawDesc), len(file_envoy_service_accesslog_v3_als_proto_rawDesc)))
	})
	return file_envoy_service_accesslog_v3_als_proto_rawDescData
}

var file_envoy_service_accesslog_v3_als_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_envoy_service_accesslog_v3_als_proto_goTypes = []any{
	(*StreamAccessLogsResponse)(nil),                     // 0: envoy.service.accesslog.v3.StreamAccessLogsResponse
	(*StreamAccessLogsMessage)(nil),                      // 1: envoy.service.accesslog.v3.StreamAccessLogsMessage
	(*StreamAccessLogsMessage_Identifier)(nil),           // 2: envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier
	(*StreamAccessLogsMessage_HTTPAccessLogEntries)(nil), // 3: envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries
	(*StreamAccessLogsMessage_TCPAccessLogEntries)(nil),  // 4: envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries
	(*v3.Node)(nil),                // 5: envoy.config.core.v3.Node
	(*v31.HTTPAccessLogEntry)(nil), // 6: envoy.data.accesslog.v3.HTTPAccessLogEntry
	(*v31.TCPAccessLogEntry)(nil),  // 7: envoy.data.accesslog.v3.TCPAccessLogEntry
}
var file_envoy_service_accesslog_v3_als_proto_depIdxs = []int32{
	2, // 0: envoy.service.accesslog.v3.StreamAccessLogsMessage.identifier:type_name -> envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier
	3, // 1: envoy.service.accesslog.v3.StreamAccessLogsMessage.http_logs:type_name -> envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries
	4, // 2: envoy.service.accesslog.v3.StreamAccessLogsMessage.tcp_logs:type_name -> envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries
	5, // 3: envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier.node:type_name -> envoy.config.core.v3.Node
	6, // 4: envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries.log_entry:type_name -> envoy.data.accesslog.v3.HTTPAccessLogEntry
	7, // 5: envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries.log_entry:type_name -> envoy.data.accesslog.v3.TCPAccessLogEntry
	1, // 6: envoy.service.accesslog.v3.AccessLogService.StreamAccessLogs:input_type -> envoy.service.accesslog.v3.StreamAccessLogsMessage
	0, // 7: envoy.service.accesslog.v3.AccessLogService.StreamAccessLogs:output_type -> envoy.service.accesslog.v3.StreamAccessLogsResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_envoy_service_accesslog_v3_als_proto_init() }
func file_envoy_service_accesslog_v3_als_proto_init() {
	if File_envoy_service_accesslog_v3_als_proto != nil {
		return
	}
	file_envoy_service_accesslog_v3_als_proto_msgTypes[1].OneofWrappers = []any{
		(*StreamAccessLogsMessage_HttpLogs)(nil),
		(*StreamAccessLogsMessage_TcpLogs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_service_accesslog_v3_als_proto_rawDesc), len(file_envoy_service_accesslog_v3_als_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_envoy_service_accesslog_v3_als_proto_goTypes,
		DependencyIndexes: file_envoy_service_accesslog_v3_als_proto_depIdxs,
		MessageInfos:      file_envoy_service_accesslog_v3_als_proto_msgTypes,
	}.Build()
	File_envoy_service_accesslog_v3_als_proto = out.File
	file_envoy_service_accesslog_v3_als_proto_goTypes = nil
	file_envoy_service_accesslog_v3_als_proto_depIdxs = nil
}
