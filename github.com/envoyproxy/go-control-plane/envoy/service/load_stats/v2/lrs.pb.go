// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/service/load_stats/v2/lrs.proto

package load_statsv2

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	core "github.com/envoyproxy/go-control-plane/envoy/api/v2/core"
	endpoint "github.com/envoyproxy/go-control-plane/envoy/api/v2/endpoint"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A load report Envoy sends to the management server.
// [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
type LoadStatsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node identifier for Envoy instance.
	Node *core.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// A list of load stats to report.
	ClusterStats  []*endpoint.ClusterStats `protobuf:"bytes,2,rep,name=cluster_stats,json=clusterStats,proto3" json:"cluster_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadStatsRequest) Reset() {
	*x = LoadStatsRequest{}
	mi := &file_envoy_service_load_stats_v2_lrs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadStatsRequest) ProtoMessage() {}

func (x *LoadStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_load_stats_v2_lrs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadStatsRequest.ProtoReflect.Descriptor instead.
func (*LoadStatsRequest) Descriptor() ([]byte, []int) {
	return file_envoy_service_load_stats_v2_lrs_proto_rawDescGZIP(), []int{0}
}

func (x *LoadStatsRequest) GetNode() *core.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *LoadStatsRequest) GetClusterStats() []*endpoint.ClusterStats {
	if x != nil {
		return x.ClusterStats
	}
	return nil
}

// The management server sends envoy a LoadStatsResponse with all clusters it
// is interested in learning load stats about.
// [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
type LoadStatsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Clusters to report stats for.
	// Not populated if *send_all_clusters* is true.
	Clusters []string `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// If true, the client should send all clusters it knows about.
	// Only clients that advertise the "envoy.lrs.supports_send_all_clusters" capability in their
	// :ref:`client_features<envoy_api_field_core.Node.client_features>` field will honor this field.
	SendAllClusters bool `protobuf:"varint,4,opt,name=send_all_clusters,json=sendAllClusters,proto3" json:"send_all_clusters,omitempty"`
	// The minimum interval of time to collect stats over. This is only a minimum for two reasons:
	//  1. There may be some delay from when the timer fires until stats sampling occurs.
	//  2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
	//     that is observed in between the corresponding previous *LoadStatsRequest* and this
	//     *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
	//     of inobservability that might otherwise exists between the messages. New clusters are not
	//     subject to this consideration.
	LoadReportingInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=load_reporting_interval,json=loadReportingInterval,proto3" json:"load_reporting_interval,omitempty"`
	// Set to *true* if the management server supports endpoint granularity
	// report.
	ReportEndpointGranularity bool `protobuf:"varint,3,opt,name=report_endpoint_granularity,json=reportEndpointGranularity,proto3" json:"report_endpoint_granularity,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *LoadStatsResponse) Reset() {
	*x = LoadStatsResponse{}
	mi := &file_envoy_service_load_stats_v2_lrs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadStatsResponse) ProtoMessage() {}

func (x *LoadStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_load_stats_v2_lrs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadStatsResponse.ProtoReflect.Descriptor instead.
func (*LoadStatsResponse) Descriptor() ([]byte, []int) {
	return file_envoy_service_load_stats_v2_lrs_proto_rawDescGZIP(), []int{1}
}

func (x *LoadStatsResponse) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *LoadStatsResponse) GetSendAllClusters() bool {
	if x != nil {
		return x.SendAllClusters
	}
	return false
}

func (x *LoadStatsResponse) GetLoadReportingInterval() *durationpb.Duration {
	if x != nil {
		return x.LoadReportingInterval
	}
	return nil
}

func (x *LoadStatsResponse) GetReportEndpointGranularity() bool {
	if x != nil {
		return x.ReportEndpointGranularity
	}
	return false
}

var File_envoy_service_load_stats_v2_lrs_proto protoreflect.FileDescriptor

const file_envoy_service_load_stats_v2_lrs_proto_rawDesc = "" +
	"\n" +
	"%envoy/service/load_stats/v2/lrs.proto\x12\x1benvoy.service.load_stats.v2\x1a\x1cenvoy/api/v2/core/base.proto\x1a'envoy/api/v2/endpoint/load_report.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1dudpa/annotations/status.proto\"\x89\x01\n" +
	"\x10LoadStatsRequest\x12+\n" +
	"\x04node\x18\x01 \x01(\v2\x17.envoy.api.v2.core.NodeR\x04node\x12H\n" +
	"\rcluster_stats\x18\x02 \x03(\v2#.envoy.api.v2.endpoint.ClusterStatsR\fclusterStats\"\xee\x01\n" +
	"\x11LoadStatsResponse\x12\x1a\n" +
	"\bclusters\x18\x01 \x03(\tR\bclusters\x12*\n" +
	"\x11send_all_clusters\x18\x04 \x01(\bR\x0fsendAllClusters\x12Q\n" +
	"\x17load_reporting_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x15loadReportingInterval\x12>\n" +
	"\x1breport_endpoint_granularity\x18\x03 \x01(\bR\x19reportEndpointGranularity2\x8e\x01\n" +
	"\x14LoadReportingService\x12v\n" +
	"\x0fStreamLoadStats\x12-.envoy.service.load_stats.v2.LoadStatsRequest\x1a..envoy.service.load_stats.v2.LoadStatsResponse\"\x00(\x010\x01B\x90\x01\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	")io.envoyproxy.envoy.service.load_stats.v2B\bLrsProtoP\x01ZOgithub.com/envoyproxy/go-control-plane/envoy/service/load_stats/v2;load_statsv2b\x06proto3"

var (
	file_envoy_service_load_stats_v2_lrs_proto_rawDescOnce sync.Once
	file_envoy_service_load_stats_v2_lrs_proto_rawDescData []byte
)

func file_envoy_service_load_stats_v2_lrs_proto_rawDescGZIP() []byte {
	file_envoy_service_load_stats_v2_lrs_proto_rawDescOnce.Do(func() {
		file_envoy_service_load_stats_v2_lrs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_service_load_stats_v2_lrs_proto_rawDesc), len(file_envoy_service_load_stats_v2_lrs_proto_rawDesc)))
	})
	return file_envoy_service_load_stats_v2_lrs_proto_rawDescData
}

var file_envoy_service_load_stats_v2_lrs_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_service_load_stats_v2_lrs_proto_goTypes = []any{
	(*LoadStatsRequest)(nil),      // 0: envoy.service.load_stats.v2.LoadStatsRequest
	(*LoadStatsResponse)(nil),     // 1: envoy.service.load_stats.v2.LoadStatsResponse
	(*core.Node)(nil),             // 2: envoy.api.v2.core.Node
	(*endpoint.ClusterStats)(nil), // 3: envoy.api.v2.endpoint.ClusterStats
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
}
var file_envoy_service_load_stats_v2_lrs_proto_depIdxs = []int32{
	2, // 0: envoy.service.load_stats.v2.LoadStatsRequest.node:type_name -> envoy.api.v2.core.Node
	3, // 1: envoy.service.load_stats.v2.LoadStatsRequest.cluster_stats:type_name -> envoy.api.v2.endpoint.ClusterStats
	4, // 2: envoy.service.load_stats.v2.LoadStatsResponse.load_reporting_interval:type_name -> google.protobuf.Duration
	0, // 3: envoy.service.load_stats.v2.LoadReportingService.StreamLoadStats:input_type -> envoy.service.load_stats.v2.LoadStatsRequest
	1, // 4: envoy.service.load_stats.v2.LoadReportingService.StreamLoadStats:output_type -> envoy.service.load_stats.v2.LoadStatsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_envoy_service_load_stats_v2_lrs_proto_init() }
func file_envoy_service_load_stats_v2_lrs_proto_init() {
	if File_envoy_service_load_stats_v2_lrs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_service_load_stats_v2_lrs_proto_rawDesc), len(file_envoy_service_load_stats_v2_lrs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_envoy_service_load_stats_v2_lrs_proto_goTypes,
		DependencyIndexes: file_envoy_service_load_stats_v2_lrs_proto_depIdxs,
		MessageInfos:      file_envoy_service_load_stats_v2_lrs_proto_msgTypes,
	}.Build()
	File_envoy_service_load_stats_v2_lrs_proto = out.File
	file_envoy_service_load_stats_v2_lrs_proto_goTypes = nil
	file_envoy_service_load_stats_v2_lrs_proto_depIdxs = nil
}
