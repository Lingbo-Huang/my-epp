// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/service/event_reporting/v3/event_reporting_service.proto

package event_reportingv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [#not-implemented-hide:]
// An events envoy sends to the management server.
type StreamEventsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier data that will only be sent in the first message on the stream. This is effectively
	// structured metadata and is a performance optimization.
	Identifier *StreamEventsRequest_Identifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Batch of events. When the stream is already active, it will be the events occurred
	// since the last message had been sent. If the server receives unknown event type, it should
	// silently ignore it.
	//
	// The following events are supported:
	//
	// * :ref:`HealthCheckEvent <envoy_v3_api_msg_data.core.v3.HealthCheckEvent>`
	// * :ref:`OutlierDetectionEvent <envoy_v3_api_msg_data.cluster.v3.OutlierDetectionEvent>`
	Events        []*anypb.Any `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescGZIP(), []int{0}
}

func (x *StreamEventsRequest) GetIdentifier() *StreamEventsRequest_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *StreamEventsRequest) GetEvents() []*anypb.Any {
	if x != nil {
		return x.Events
	}
	return nil
}

// [#not-implemented-hide:]
// The management server may send envoy a StreamEventsResponse to tell which events the server
// is interested in. In future, with aggregated event reporting service, this message will
// contain, for example, clusters the envoy should send events for, or event types the server
// wants to process.
type StreamEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsResponse) Reset() {
	*x = StreamEventsResponse{}
	mi := &file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsResponse) ProtoMessage() {}

func (x *StreamEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamEventsResponse) Descriptor() ([]byte, []int) {
	return file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescGZIP(), []int{1}
}

type StreamEventsRequest_Identifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The node sending the event messages over the stream.
	Node          *v3.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest_Identifier) Reset() {
	*x = StreamEventsRequest_Identifier{}
	mi := &file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest_Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest_Identifier) ProtoMessage() {}

func (x *StreamEventsRequest_Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest_Identifier.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest_Identifier) Descriptor() ([]byte, []int) {
	return file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StreamEventsRequest_Identifier) GetNode() *v3.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

var File_envoy_service_event_reporting_v3_event_reporting_service_proto protoreflect.FileDescriptor

const file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDesc = "" +
	"\n" +
	">envoy/service/event_reporting/v3/event_reporting_service.proto\x12 envoy.service.event_reporting.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x19google/protobuf/any.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\x1a\x17validate/validate.proto\"\x87\x03\n" +
	"\x13StreamEventsRequest\x12`\n" +
	"\n" +
	"identifier\x18\x01 \x01(\v2@.envoy.service.event_reporting.v3.StreamEventsRequest.IdentifierR\n" +
	"identifier\x126\n" +
	"\x06events\x18\x02 \x03(\v2\x14.google.protobuf.AnyB\b\xfaB\x05\x92\x01\x02\b\x01R\x06events\x1a\x93\x01\n" +
	"\n" +
	"Identifier\x128\n" +
	"\x04node\x18\x01 \x01(\v2\x1a.envoy.config.core.v3.NodeB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x04node:K\x9aň\x1eF\n" +
	"Denvoy.service.event_reporting.v2alpha.StreamEventsRequest.Identifier:@\x9aň\x1e;\n" +
	"9envoy.service.event_reporting.v2alpha.StreamEventsRequest\"Y\n" +
	"\x14StreamEventsResponse:A\x9aň\x1e<\n" +
	":envoy.service.event_reporting.v2alpha.StreamEventsResponse2\x9d\x01\n" +
	"\x15EventReportingService\x12\x83\x01\n" +
	"\fStreamEvents\x125.envoy.service.event_reporting.v3.StreamEventsRequest\x1a6.envoy.service.event_reporting.v3.StreamEventsResponse\"\x00(\x010\x01B\xb1\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	".io.envoyproxy.envoy.service.event_reporting.v3B\x1aEventReportingServiceProtoP\x01ZYgithub.com/envoyproxy/go-control-plane/envoy/service/event_reporting/v3;event_reportingv3b\x06proto3"

var (
	file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescOnce sync.Once
	file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescData []byte
)

func file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescGZIP() []byte {
	file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescOnce.Do(func() {
		file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDesc), len(file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDesc)))
	})
	return file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDescData
}

var file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_envoy_service_event_reporting_v3_event_reporting_service_proto_goTypes = []any{
	(*StreamEventsRequest)(nil),            // 0: envoy.service.event_reporting.v3.StreamEventsRequest
	(*StreamEventsResponse)(nil),           // 1: envoy.service.event_reporting.v3.StreamEventsResponse
	(*StreamEventsRequest_Identifier)(nil), // 2: envoy.service.event_reporting.v3.StreamEventsRequest.Identifier
	(*anypb.Any)(nil),                      // 3: google.protobuf.Any
	(*v3.Node)(nil),                        // 4: envoy.config.core.v3.Node
}
var file_envoy_service_event_reporting_v3_event_reporting_service_proto_depIdxs = []int32{
	2, // 0: envoy.service.event_reporting.v3.StreamEventsRequest.identifier:type_name -> envoy.service.event_reporting.v3.StreamEventsRequest.Identifier
	3, // 1: envoy.service.event_reporting.v3.StreamEventsRequest.events:type_name -> google.protobuf.Any
	4, // 2: envoy.service.event_reporting.v3.StreamEventsRequest.Identifier.node:type_name -> envoy.config.core.v3.Node
	0, // 3: envoy.service.event_reporting.v3.EventReportingService.StreamEvents:input_type -> envoy.service.event_reporting.v3.StreamEventsRequest
	1, // 4: envoy.service.event_reporting.v3.EventReportingService.StreamEvents:output_type -> envoy.service.event_reporting.v3.StreamEventsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_envoy_service_event_reporting_v3_event_reporting_service_proto_init() }
func file_envoy_service_event_reporting_v3_event_reporting_service_proto_init() {
	if File_envoy_service_event_reporting_v3_event_reporting_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDesc), len(file_envoy_service_event_reporting_v3_event_reporting_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_envoy_service_event_reporting_v3_event_reporting_service_proto_goTypes,
		DependencyIndexes: file_envoy_service_event_reporting_v3_event_reporting_service_proto_depIdxs,
		MessageInfos:      file_envoy_service_event_reporting_v3_event_reporting_service_proto_msgTypes,
	}.Build()
	File_envoy_service_event_reporting_v3_event_reporting_service_proto = out.File
	file_envoy_service_event_reporting_v3_event_reporting_service_proto_goTypes = nil
	file_envoy_service_event_reporting_v3_event_reporting_service_proto_depIdxs = nil
}
