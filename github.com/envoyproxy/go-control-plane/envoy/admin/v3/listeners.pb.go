// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/admin/v3/listeners.proto

package adminv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Admin endpoint uses this wrapper for “/listeners“ to display listener status information.
// See :ref:`/listeners <operations_admin_interface_listeners>` for more information.
type Listeners struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of listener statuses.
	ListenerStatuses []*ListenerStatus `protobuf:"bytes,1,rep,name=listener_statuses,json=listenerStatuses,proto3" json:"listener_statuses,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Listeners) Reset() {
	*x = Listeners{}
	mi := &file_envoy_admin_v3_listeners_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listeners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listeners) ProtoMessage() {}

func (x *Listeners) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_admin_v3_listeners_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listeners.ProtoReflect.Descriptor instead.
func (*Listeners) Descriptor() ([]byte, []int) {
	return file_envoy_admin_v3_listeners_proto_rawDescGZIP(), []int{0}
}

func (x *Listeners) GetListenerStatuses() []*ListenerStatus {
	if x != nil {
		return x.ListenerStatuses
	}
	return nil
}

// Details an individual listener's current status.
type ListenerStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the listener
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The actual local address that the listener is listening on. If a listener was configured
	// to listen on port 0, then this address has the port that was allocated by the OS.
	LocalAddress *v3.Address `protobuf:"bytes,2,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	// The additional addresses the listener is listening on as specified via the :ref:`additional_addresses <envoy_v3_api_field_config.listener.v3.Listener.additional_addresses>`
	// configuration.
	AdditionalLocalAddresses []*v3.Address `protobuf:"bytes,3,rep,name=additional_local_addresses,json=additionalLocalAddresses,proto3" json:"additional_local_addresses,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ListenerStatus) Reset() {
	*x = ListenerStatus{}
	mi := &file_envoy_admin_v3_listeners_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListenerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerStatus) ProtoMessage() {}

func (x *ListenerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_admin_v3_listeners_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerStatus.ProtoReflect.Descriptor instead.
func (*ListenerStatus) Descriptor() ([]byte, []int) {
	return file_envoy_admin_v3_listeners_proto_rawDescGZIP(), []int{1}
}

func (x *ListenerStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListenerStatus) GetLocalAddress() *v3.Address {
	if x != nil {
		return x.LocalAddress
	}
	return nil
}

func (x *ListenerStatus) GetAdditionalLocalAddresses() []*v3.Address {
	if x != nil {
		return x.AdditionalLocalAddresses
	}
	return nil
}

var File_envoy_admin_v3_listeners_proto protoreflect.FileDescriptor

const file_envoy_admin_v3_listeners_proto_rawDesc = "" +
	"\n" +
	"\x1eenvoy/admin/v3/listeners.proto\x12\x0eenvoy.admin.v3\x1a\"envoy/config/core/v3/address.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\"~\n" +
	"\tListeners\x12K\n" +
	"\x11listener_statuses\x18\x01 \x03(\v2\x1e.envoy.admin.v3.ListenerStatusR\x10listenerStatuses:$\x9aň\x1e\x1f\n" +
	"\x1denvoy.admin.v2alpha.Listeners\"\xf0\x01\n" +
	"\x0eListenerStatus\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12B\n" +
	"\rlocal_address\x18\x02 \x01(\v2\x1d.envoy.config.core.v3.AddressR\flocalAddress\x12[\n" +
	"\x1aadditional_local_addresses\x18\x03 \x03(\v2\x1d.envoy.config.core.v3.AddressR\x18additionalLocalAddresses:)\x9aň\x1e$\n" +
	"\"envoy.admin.v2alpha.ListenerStatusBw\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"\x1cio.envoyproxy.envoy.admin.v3B\x0eListenersProtoP\x01Z=github.com/envoyproxy/go-control-plane/envoy/admin/v3;adminv3b\x06proto3"

var (
	file_envoy_admin_v3_listeners_proto_rawDescOnce sync.Once
	file_envoy_admin_v3_listeners_proto_rawDescData []byte
)

func file_envoy_admin_v3_listeners_proto_rawDescGZIP() []byte {
	file_envoy_admin_v3_listeners_proto_rawDescOnce.Do(func() {
		file_envoy_admin_v3_listeners_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_admin_v3_listeners_proto_rawDesc), len(file_envoy_admin_v3_listeners_proto_rawDesc)))
	})
	return file_envoy_admin_v3_listeners_proto_rawDescData
}

var file_envoy_admin_v3_listeners_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_admin_v3_listeners_proto_goTypes = []any{
	(*Listeners)(nil),      // 0: envoy.admin.v3.Listeners
	(*ListenerStatus)(nil), // 1: envoy.admin.v3.ListenerStatus
	(*v3.Address)(nil),     // 2: envoy.config.core.v3.Address
}
var file_envoy_admin_v3_listeners_proto_depIdxs = []int32{
	1, // 0: envoy.admin.v3.Listeners.listener_statuses:type_name -> envoy.admin.v3.ListenerStatus
	2, // 1: envoy.admin.v3.ListenerStatus.local_address:type_name -> envoy.config.core.v3.Address
	2, // 2: envoy.admin.v3.ListenerStatus.additional_local_addresses:type_name -> envoy.config.core.v3.Address
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_envoy_admin_v3_listeners_proto_init() }
func file_envoy_admin_v3_listeners_proto_init() {
	if File_envoy_admin_v3_listeners_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_admin_v3_listeners_proto_rawDesc), len(file_envoy_admin_v3_listeners_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_admin_v3_listeners_proto_goTypes,
		DependencyIndexes: file_envoy_admin_v3_listeners_proto_depIdxs,
		MessageInfos:      file_envoy_admin_v3_listeners_proto_msgTypes,
	}.Build()
	File_envoy_admin_v3_listeners_proto = out.File
	file_envoy_admin_v3_listeners_proto_goTypes = nil
	file_envoy_admin_v3_listeners_proto_depIdxs = nil
}
