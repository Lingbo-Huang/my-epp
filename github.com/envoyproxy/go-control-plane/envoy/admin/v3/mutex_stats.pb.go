// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/admin/v3/mutex_stats.proto

package adminv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Proto representation of the statistics collected upon absl::Mutex contention, if Envoy is run
// under :option:`--enable-mutex-tracing`. For more information, see the “absl::Mutex“
// [docs](https://abseil.io/about/design/mutex#extra-features).
//
// *NB*: The wait cycles below are measured by “absl::base_internal::CycleClock“, and may not
// correspond to core clock frequency. For more information, see the “CycleClock“
// [docs](https://github.com/abseil/abseil-cpp/blob/master/absl/base/internal/cycleclock.h).
type MutexStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of individual mutex contentions which have occurred since startup.
	NumContentions uint64 `protobuf:"varint,1,opt,name=num_contentions,json=numContentions,proto3" json:"num_contentions,omitempty"`
	// The length of the current contention wait cycle.
	CurrentWaitCycles uint64 `protobuf:"varint,2,opt,name=current_wait_cycles,json=currentWaitCycles,proto3" json:"current_wait_cycles,omitempty"`
	// The lifetime total of all contention wait cycles.
	LifetimeWaitCycles uint64 `protobuf:"varint,3,opt,name=lifetime_wait_cycles,json=lifetimeWaitCycles,proto3" json:"lifetime_wait_cycles,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MutexStats) Reset() {
	*x = MutexStats{}
	mi := &file_envoy_admin_v3_mutex_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MutexStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutexStats) ProtoMessage() {}

func (x *MutexStats) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_admin_v3_mutex_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutexStats.ProtoReflect.Descriptor instead.
func (*MutexStats) Descriptor() ([]byte, []int) {
	return file_envoy_admin_v3_mutex_stats_proto_rawDescGZIP(), []int{0}
}

func (x *MutexStats) GetNumContentions() uint64 {
	if x != nil {
		return x.NumContentions
	}
	return 0
}

func (x *MutexStats) GetCurrentWaitCycles() uint64 {
	if x != nil {
		return x.CurrentWaitCycles
	}
	return 0
}

func (x *MutexStats) GetLifetimeWaitCycles() uint64 {
	if x != nil {
		return x.LifetimeWaitCycles
	}
	return 0
}

var File_envoy_admin_v3_mutex_stats_proto protoreflect.FileDescriptor

const file_envoy_admin_v3_mutex_stats_proto_rawDesc = "" +
	"\n" +
	" envoy/admin/v3/mutex_stats.proto\x12\x0eenvoy.admin.v3\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\"\xbe\x01\n" +
	"\n" +
	"MutexStats\x12'\n" +
	"\x0fnum_contentions\x18\x01 \x01(\x04R\x0enumContentions\x12.\n" +
	"\x13current_wait_cycles\x18\x02 \x01(\x04R\x11currentWaitCycles\x120\n" +
	"\x14lifetime_wait_cycles\x18\x03 \x01(\x04R\x12lifetimeWaitCycles:%\x9aň\x1e \n" +
	"\x1eenvoy.admin.v2alpha.MutexStatsBx\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"\x1cio.envoyproxy.envoy.admin.v3B\x0fMutexStatsProtoP\x01Z=github.com/envoyproxy/go-control-plane/envoy/admin/v3;adminv3b\x06proto3"

var (
	file_envoy_admin_v3_mutex_stats_proto_rawDescOnce sync.Once
	file_envoy_admin_v3_mutex_stats_proto_rawDescData []byte
)

func file_envoy_admin_v3_mutex_stats_proto_rawDescGZIP() []byte {
	file_envoy_admin_v3_mutex_stats_proto_rawDescOnce.Do(func() {
		file_envoy_admin_v3_mutex_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_admin_v3_mutex_stats_proto_rawDesc), len(file_envoy_admin_v3_mutex_stats_proto_rawDesc)))
	})
	return file_envoy_admin_v3_mutex_stats_proto_rawDescData
}

var file_envoy_admin_v3_mutex_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_admin_v3_mutex_stats_proto_goTypes = []any{
	(*MutexStats)(nil), // 0: envoy.admin.v3.MutexStats
}
var file_envoy_admin_v3_mutex_stats_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envoy_admin_v3_mutex_stats_proto_init() }
func file_envoy_admin_v3_mutex_stats_proto_init() {
	if File_envoy_admin_v3_mutex_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_admin_v3_mutex_stats_proto_rawDesc), len(file_envoy_admin_v3_mutex_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_admin_v3_mutex_stats_proto_goTypes,
		DependencyIndexes: file_envoy_admin_v3_mutex_stats_proto_depIdxs,
		MessageInfos:      file_envoy_admin_v3_mutex_stats_proto_msgTypes,
	}.Build()
	File_envoy_admin_v3_mutex_stats_proto = out.File
	file_envoy_admin_v3_mutex_stats_proto_goTypes = nil
	file_envoy_admin_v3_mutex_stats_proto_depIdxs = nil
}
