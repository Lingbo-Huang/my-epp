// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/admin/v3/server_info.proto

package adminv3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	v3 "github.com/envoyproxy/go-control-plane/envoy/config/core/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerInfo_State int32

const (
	// Server is live and serving traffic.
	ServerInfo_LIVE ServerInfo_State = 0
	// Server is draining listeners in response to external health checks failing.
	ServerInfo_DRAINING ServerInfo_State = 1
	// Server has not yet completed cluster manager initialization.
	ServerInfo_PRE_INITIALIZING ServerInfo_State = 2
	// Server is running the cluster manager initialization callbacks (e.g., RDS).
	ServerInfo_INITIALIZING ServerInfo_State = 3
)

// Enum value maps for ServerInfo_State.
var (
	ServerInfo_State_name = map[int32]string{
		0: "LIVE",
		1: "DRAINING",
		2: "PRE_INITIALIZING",
		3: "INITIALIZING",
	}
	ServerInfo_State_value = map[string]int32{
		"LIVE":             0,
		"DRAINING":         1,
		"PRE_INITIALIZING": 2,
		"INITIALIZING":     3,
	}
)

func (x ServerInfo_State) Enum() *ServerInfo_State {
	p := new(ServerInfo_State)
	*p = x
	return p
}

func (x ServerInfo_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerInfo_State) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_admin_v3_server_info_proto_enumTypes[0].Descriptor()
}

func (ServerInfo_State) Type() protoreflect.EnumType {
	return &file_envoy_admin_v3_server_info_proto_enumTypes[0]
}

func (x ServerInfo_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerInfo_State.Descriptor instead.
func (ServerInfo_State) EnumDescriptor() ([]byte, []int) {
	return file_envoy_admin_v3_server_info_proto_rawDescGZIP(), []int{0, 0}
}

type CommandLineOptions_IpVersion int32

const (
	CommandLineOptions_v4 CommandLineOptions_IpVersion = 0
	CommandLineOptions_v6 CommandLineOptions_IpVersion = 1
)

// Enum value maps for CommandLineOptions_IpVersion.
var (
	CommandLineOptions_IpVersion_name = map[int32]string{
		0: "v4",
		1: "v6",
	}
	CommandLineOptions_IpVersion_value = map[string]int32{
		"v4": 0,
		"v6": 1,
	}
)

func (x CommandLineOptions_IpVersion) Enum() *CommandLineOptions_IpVersion {
	p := new(CommandLineOptions_IpVersion)
	*p = x
	return p
}

func (x CommandLineOptions_IpVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandLineOptions_IpVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_admin_v3_server_info_proto_enumTypes[1].Descriptor()
}

func (CommandLineOptions_IpVersion) Type() protoreflect.EnumType {
	return &file_envoy_admin_v3_server_info_proto_enumTypes[1]
}

func (x CommandLineOptions_IpVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandLineOptions_IpVersion.Descriptor instead.
func (CommandLineOptions_IpVersion) EnumDescriptor() ([]byte, []int) {
	return file_envoy_admin_v3_server_info_proto_rawDescGZIP(), []int{1, 0}
}

type CommandLineOptions_Mode int32

const (
	// Validate configs and then serve traffic normally.
	CommandLineOptions_Serve CommandLineOptions_Mode = 0
	// Validate configs and exit.
	CommandLineOptions_Validate CommandLineOptions_Mode = 1
	// Completely load and initialize the config, and then exit without running the listener loop.
	CommandLineOptions_InitOnly CommandLineOptions_Mode = 2
)

// Enum value maps for CommandLineOptions_Mode.
var (
	CommandLineOptions_Mode_name = map[int32]string{
		0: "Serve",
		1: "Validate",
		2: "InitOnly",
	}
	CommandLineOptions_Mode_value = map[string]int32{
		"Serve":    0,
		"Validate": 1,
		"InitOnly": 2,
	}
)

func (x CommandLineOptions_Mode) Enum() *CommandLineOptions_Mode {
	p := new(CommandLineOptions_Mode)
	*p = x
	return p
}

func (x CommandLineOptions_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandLineOptions_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_admin_v3_server_info_proto_enumTypes[2].Descriptor()
}

func (CommandLineOptions_Mode) Type() protoreflect.EnumType {
	return &file_envoy_admin_v3_server_info_proto_enumTypes[2]
}

func (x CommandLineOptions_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandLineOptions_Mode.Descriptor instead.
func (CommandLineOptions_Mode) EnumDescriptor() ([]byte, []int) {
	return file_envoy_admin_v3_server_info_proto_rawDescGZIP(), []int{1, 1}
}

type CommandLineOptions_DrainStrategy int32

const (
	// Gradually discourage connections over the course of the drain period.
	CommandLineOptions_Gradual CommandLineOptions_DrainStrategy = 0
	// Discourage all connections for the duration of the drain sequence.
	CommandLineOptions_Immediate CommandLineOptions_DrainStrategy = 1
)

// Enum value maps for CommandLineOptions_DrainStrategy.
var (
	CommandLineOptions_DrainStrategy_name = map[int32]string{
		0: "Gradual",
		1: "Immediate",
	}
	CommandLineOptions_DrainStrategy_value = map[string]int32{
		"Gradual":   0,
		"Immediate": 1,
	}
)

func (x CommandLineOptions_DrainStrategy) Enum() *CommandLineOptions_DrainStrategy {
	p := new(CommandLineOptions_DrainStrategy)
	*p = x
	return p
}

func (x CommandLineOptions_DrainStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandLineOptions_DrainStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_envoy_admin_v3_server_info_proto_enumTypes[3].Descriptor()
}

func (CommandLineOptions_DrainStrategy) Type() protoreflect.EnumType {
	return &file_envoy_admin_v3_server_info_proto_enumTypes[3]
}

func (x CommandLineOptions_DrainStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandLineOptions_DrainStrategy.Descriptor instead.
func (CommandLineOptions_DrainStrategy) EnumDescriptor() ([]byte, []int) {
	return file_envoy_admin_v3_server_info_proto_rawDescGZIP(), []int{1, 2}
}

// Proto representation of the value returned by /server_info, containing
// server version/server status information.
// [#next-free-field: 8]
type ServerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Server version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// State of the server.
	State ServerInfo_State `protobuf:"varint,2,opt,name=state,proto3,enum=envoy.admin.v3.ServerInfo_State" json:"state,omitempty"`
	// Uptime since current epoch was started.
	UptimeCurrentEpoch *durationpb.Duration `protobuf:"bytes,3,opt,name=uptime_current_epoch,json=uptimeCurrentEpoch,proto3" json:"uptime_current_epoch,omitempty"`
	// Uptime since the start of the first epoch.
	UptimeAllEpochs *durationpb.Duration `protobuf:"bytes,4,opt,name=uptime_all_epochs,json=uptimeAllEpochs,proto3" json:"uptime_all_epochs,omitempty"`
	// Hot restart version.
	HotRestartVersion string `protobuf:"bytes,5,opt,name=hot_restart_version,json=hotRestartVersion,proto3" json:"hot_restart_version,omitempty"`
	// Command line options the server is currently running with.
	CommandLineOptions *CommandLineOptions `protobuf:"bytes,6,opt,name=command_line_options,json=commandLineOptions,proto3" json:"command_line_options,omitempty"`
	// Populated node identity of this server.
	Node          *v3.Node `protobuf:"bytes,7,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_envoy_admin_v3_server_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_admin_v3_server_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_envoy_admin_v3_server_info_proto_rawDescGZIP(), []int{0}
}

func (x *ServerInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerInfo) GetState() ServerInfo_State {
	if x != nil {
		return x.State
	}
	return ServerInfo_LIVE
}

func (x *ServerInfo) GetUptimeCurrentEpoch() *durationpb.Duration {
	if x != nil {
		return x.UptimeCurrentEpoch
	}
	return nil
}

func (x *ServerInfo) GetUptimeAllEpochs() *durationpb.Duration {
	if x != nil {
		return x.UptimeAllEpochs
	}
	return nil
}

func (x *ServerInfo) GetHotRestartVersion() string {
	if x != nil {
		return x.HotRestartVersion
	}
	return ""
}

func (x *ServerInfo) GetCommandLineOptions() *CommandLineOptions {
	if x != nil {
		return x.CommandLineOptions
	}
	return nil
}

func (x *ServerInfo) GetNode() *v3.Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// [#next-free-field: 42]
type CommandLineOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// See :option:`--base-id` for details.
	BaseId uint64 `protobuf:"varint,1,opt,name=base_id,json=baseId,proto3" json:"base_id,omitempty"`
	// See :option:`--use-dynamic-base-id` for details.
	UseDynamicBaseId bool `protobuf:"varint,31,opt,name=use_dynamic_base_id,json=useDynamicBaseId,proto3" json:"use_dynamic_base_id,omitempty"`
	// See :option:`--skip-hot-restart-on-no-parent` for details.
	SkipHotRestartOnNoParent bool `protobuf:"varint,39,opt,name=skip_hot_restart_on_no_parent,json=skipHotRestartOnNoParent,proto3" json:"skip_hot_restart_on_no_parent,omitempty"`
	// See :option:`--skip-hot-restart-parent-stats` for details.
	SkipHotRestartParentStats bool `protobuf:"varint,40,opt,name=skip_hot_restart_parent_stats,json=skipHotRestartParentStats,proto3" json:"skip_hot_restart_parent_stats,omitempty"`
	// See :option:`--base-id-path` for details.
	BaseIdPath string `protobuf:"bytes,32,opt,name=base_id_path,json=baseIdPath,proto3" json:"base_id_path,omitempty"`
	// See :option:`--concurrency` for details.
	Concurrency uint32 `protobuf:"varint,2,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	// See :option:`--config-path` for details.
	ConfigPath string `protobuf:"bytes,3,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// See :option:`--config-yaml` for details.
	ConfigYaml string `protobuf:"bytes,4,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
	// See :option:`--allow-unknown-static-fields` for details.
	AllowUnknownStaticFields bool `protobuf:"varint,5,opt,name=allow_unknown_static_fields,json=allowUnknownStaticFields,proto3" json:"allow_unknown_static_fields,omitempty"`
	// See :option:`--reject-unknown-dynamic-fields` for details.
	RejectUnknownDynamicFields bool `protobuf:"varint,26,opt,name=reject_unknown_dynamic_fields,json=rejectUnknownDynamicFields,proto3" json:"reject_unknown_dynamic_fields,omitempty"`
	// See :option:`--ignore-unknown-dynamic-fields` for details.
	IgnoreUnknownDynamicFields bool `protobuf:"varint,30,opt,name=ignore_unknown_dynamic_fields,json=ignoreUnknownDynamicFields,proto3" json:"ignore_unknown_dynamic_fields,omitempty"`
	// See :option:`--skip-deprecated-logs` for details.
	SkipDeprecatedLogs bool `protobuf:"varint,41,opt,name=skip_deprecated_logs,json=skipDeprecatedLogs,proto3" json:"skip_deprecated_logs,omitempty"`
	// See :option:`--admin-address-path` for details.
	AdminAddressPath string `protobuf:"bytes,6,opt,name=admin_address_path,json=adminAddressPath,proto3" json:"admin_address_path,omitempty"`
	// See :option:`--local-address-ip-version` for details.
	LocalAddressIpVersion CommandLineOptions_IpVersion `protobuf:"varint,7,opt,name=local_address_ip_version,json=localAddressIpVersion,proto3,enum=envoy.admin.v3.CommandLineOptions_IpVersion" json:"local_address_ip_version,omitempty"`
	// See :option:`--log-level` for details.
	LogLevel string `protobuf:"bytes,8,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	// See :option:`--component-log-level` for details.
	ComponentLogLevel string `protobuf:"bytes,9,opt,name=component_log_level,json=componentLogLevel,proto3" json:"component_log_level,omitempty"`
	// See :option:`--log-format` for details.
	LogFormat string `protobuf:"bytes,10,opt,name=log_format,json=logFormat,proto3" json:"log_format,omitempty"`
	// See :option:`--log-format-escaped` for details.
	LogFormatEscaped bool `protobuf:"varint,27,opt,name=log_format_escaped,json=logFormatEscaped,proto3" json:"log_format_escaped,omitempty"`
	// See :option:`--log-path` for details.
	LogPath string `protobuf:"bytes,11,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	// See :option:`--service-cluster` for details.
	ServiceCluster string `protobuf:"bytes,13,opt,name=service_cluster,json=serviceCluster,proto3" json:"service_cluster,omitempty"`
	// See :option:`--service-node` for details.
	ServiceNode string `protobuf:"bytes,14,opt,name=service_node,json=serviceNode,proto3" json:"service_node,omitempty"`
	// See :option:`--service-zone` for details.
	ServiceZone string `protobuf:"bytes,15,opt,name=service_zone,json=serviceZone,proto3" json:"service_zone,omitempty"`
	// See :option:`--file-flush-interval-msec` for details.
	FileFlushInterval *durationpb.Duration `protobuf:"bytes,16,opt,name=file_flush_interval,json=fileFlushInterval,proto3" json:"file_flush_interval,omitempty"`
	// See :option:`--drain-time-s` for details.
	DrainTime *durationpb.Duration `protobuf:"bytes,17,opt,name=drain_time,json=drainTime,proto3" json:"drain_time,omitempty"`
	// See :option:`--drain-strategy` for details.
	DrainStrategy CommandLineOptions_DrainStrategy `protobuf:"varint,33,opt,name=drain_strategy,json=drainStrategy,proto3,enum=envoy.admin.v3.CommandLineOptions_DrainStrategy" json:"drain_strategy,omitempty"`
	// See :option:`--parent-shutdown-time-s` for details.
	ParentShutdownTime *durationpb.Duration `protobuf:"bytes,18,opt,name=parent_shutdown_time,json=parentShutdownTime,proto3" json:"parent_shutdown_time,omitempty"`
	// See :option:`--mode` for details.
	Mode CommandLineOptions_Mode `protobuf:"varint,19,opt,name=mode,proto3,enum=envoy.admin.v3.CommandLineOptions_Mode" json:"mode,omitempty"`
	// See :option:`--disable-hot-restart` for details.
	DisableHotRestart bool `protobuf:"varint,22,opt,name=disable_hot_restart,json=disableHotRestart,proto3" json:"disable_hot_restart,omitempty"`
	// See :option:`--enable-mutex-tracing` for details.
	EnableMutexTracing bool `protobuf:"varint,23,opt,name=enable_mutex_tracing,json=enableMutexTracing,proto3" json:"enable_mutex_tracing,omitempty"`
	// See :option:`--restart-epoch` for details.
	RestartEpoch uint32 `protobuf:"varint,24,opt,name=restart_epoch,json=restartEpoch,proto3" json:"restart_epoch,omitempty"`
	// See :option:`--cpuset-threads` for details.
	CpusetThreads bool `protobuf:"varint,25,opt,name=cpuset_threads,json=cpusetThreads,proto3" json:"cpuset_threads,omitempty"`
	// See :option:`--disable-extensions` for details.
	DisabledExtensions []string `protobuf:"bytes,28,rep,name=disabled_extensions,json=disabledExtensions,proto3" json:"disabled_extensions,omitempty"`
	// See :option:`--enable-fine-grain-logging` for details.
	EnableFineGrainLogging bool `protobuf:"varint,34,opt,name=enable_fine_grain_logging,json=enableFineGrainLogging,proto3" json:"enable_fine_grain_logging,omitempty"`
	// See :option:`--socket-path` for details.
	SocketPath string `protobuf:"bytes,35,opt,name=socket_path,json=socketPath,proto3" json:"socket_path,omitempty"`
	// See :option:`--socket-mode` for details.
	SocketMode uint32 `protobuf:"varint,36,opt,name=socket_mode,json=socketMode,proto3" json:"socket_mode,omitempty"`
	// See :option:`--enable-core-dump` for details.
	EnableCoreDump bool `protobuf:"varint,37,opt,name=enable_core_dump,json=enableCoreDump,proto3" json:"enable_core_dump,omitempty"`
	// See :option:`--stats-tag` for details.
	StatsTag      []string `protobuf:"bytes,38,rep,name=stats_tag,json=statsTag,proto3" json:"stats_tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandLineOptions) Reset() {
	*x = CommandLineOptions{}
	mi := &file_envoy_admin_v3_server_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandLineOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandLineOptions) ProtoMessage() {}

func (x *CommandLineOptions) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_admin_v3_server_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandLineOptions.ProtoReflect.Descriptor instead.
func (*CommandLineOptions) Descriptor() ([]byte, []int) {
	return file_envoy_admin_v3_server_info_proto_rawDescGZIP(), []int{1}
}

func (x *CommandLineOptions) GetBaseId() uint64 {
	if x != nil {
		return x.BaseId
	}
	return 0
}

func (x *CommandLineOptions) GetUseDynamicBaseId() bool {
	if x != nil {
		return x.UseDynamicBaseId
	}
	return false
}

func (x *CommandLineOptions) GetSkipHotRestartOnNoParent() bool {
	if x != nil {
		return x.SkipHotRestartOnNoParent
	}
	return false
}

func (x *CommandLineOptions) GetSkipHotRestartParentStats() bool {
	if x != nil {
		return x.SkipHotRestartParentStats
	}
	return false
}

func (x *CommandLineOptions) GetBaseIdPath() string {
	if x != nil {
		return x.BaseIdPath
	}
	return ""
}

func (x *CommandLineOptions) GetConcurrency() uint32 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *CommandLineOptions) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *CommandLineOptions) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

func (x *CommandLineOptions) GetAllowUnknownStaticFields() bool {
	if x != nil {
		return x.AllowUnknownStaticFields
	}
	return false
}

func (x *CommandLineOptions) GetRejectUnknownDynamicFields() bool {
	if x != nil {
		return x.RejectUnknownDynamicFields
	}
	return false
}

func (x *CommandLineOptions) GetIgnoreUnknownDynamicFields() bool {
	if x != nil {
		return x.IgnoreUnknownDynamicFields
	}
	return false
}

func (x *CommandLineOptions) GetSkipDeprecatedLogs() bool {
	if x != nil {
		return x.SkipDeprecatedLogs
	}
	return false
}

func (x *CommandLineOptions) GetAdminAddressPath() string {
	if x != nil {
		return x.AdminAddressPath
	}
	return ""
}

func (x *CommandLineOptions) GetLocalAddressIpVersion() CommandLineOptions_IpVersion {
	if x != nil {
		return x.LocalAddressIpVersion
	}
	return CommandLineOptions_v4
}

func (x *CommandLineOptions) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *CommandLineOptions) GetComponentLogLevel() string {
	if x != nil {
		return x.ComponentLogLevel
	}
	return ""
}

func (x *CommandLineOptions) GetLogFormat() string {
	if x != nil {
		return x.LogFormat
	}
	return ""
}

func (x *CommandLineOptions) GetLogFormatEscaped() bool {
	if x != nil {
		return x.LogFormatEscaped
	}
	return false
}

func (x *CommandLineOptions) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

func (x *CommandLineOptions) GetServiceCluster() string {
	if x != nil {
		return x.ServiceCluster
	}
	return ""
}

func (x *CommandLineOptions) GetServiceNode() string {
	if x != nil {
		return x.ServiceNode
	}
	return ""
}

func (x *CommandLineOptions) GetServiceZone() string {
	if x != nil {
		return x.ServiceZone
	}
	return ""
}

func (x *CommandLineOptions) GetFileFlushInterval() *durationpb.Duration {
	if x != nil {
		return x.FileFlushInterval
	}
	return nil
}

func (x *CommandLineOptions) GetDrainTime() *durationpb.Duration {
	if x != nil {
		return x.DrainTime
	}
	return nil
}

func (x *CommandLineOptions) GetDrainStrategy() CommandLineOptions_DrainStrategy {
	if x != nil {
		return x.DrainStrategy
	}
	return CommandLineOptions_Gradual
}

func (x *CommandLineOptions) GetParentShutdownTime() *durationpb.Duration {
	if x != nil {
		return x.ParentShutdownTime
	}
	return nil
}

func (x *CommandLineOptions) GetMode() CommandLineOptions_Mode {
	if x != nil {
		return x.Mode
	}
	return CommandLineOptions_Serve
}

func (x *CommandLineOptions) GetDisableHotRestart() bool {
	if x != nil {
		return x.DisableHotRestart
	}
	return false
}

func (x *CommandLineOptions) GetEnableMutexTracing() bool {
	if x != nil {
		return x.EnableMutexTracing
	}
	return false
}

func (x *CommandLineOptions) GetRestartEpoch() uint32 {
	if x != nil {
		return x.RestartEpoch
	}
	return 0
}

func (x *CommandLineOptions) GetCpusetThreads() bool {
	if x != nil {
		return x.CpusetThreads
	}
	return false
}

func (x *CommandLineOptions) GetDisabledExtensions() []string {
	if x != nil {
		return x.DisabledExtensions
	}
	return nil
}

func (x *CommandLineOptions) GetEnableFineGrainLogging() bool {
	if x != nil {
		return x.EnableFineGrainLogging
	}
	return false
}

func (x *CommandLineOptions) GetSocketPath() string {
	if x != nil {
		return x.SocketPath
	}
	return ""
}

func (x *CommandLineOptions) GetSocketMode() uint32 {
	if x != nil {
		return x.SocketMode
	}
	return 0
}

func (x *CommandLineOptions) GetEnableCoreDump() bool {
	if x != nil {
		return x.EnableCoreDump
	}
	return false
}

func (x *CommandLineOptions) GetStatsTag() []string {
	if x != nil {
		return x.StatsTag
	}
	return nil
}

var File_envoy_admin_v3_server_info_proto protoreflect.FileDescriptor

const file_envoy_admin_v3_server_info_proto_rawDesc = "" +
	"\n" +
	" envoy/admin/v3/server_info.proto\x12\x0eenvoy.admin.v3\x1a\x1fenvoy/config/core/v3/base.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1dudpa/annotations/status.proto\x1a!udpa/annotations/versioning.proto\"\x98\x04\n" +
	"\n" +
	"ServerInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x126\n" +
	"\x05state\x18\x02 \x01(\x0e2 .envoy.admin.v3.ServerInfo.StateR\x05state\x12K\n" +
	"\x14uptime_current_epoch\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x12uptimeCurrentEpoch\x12E\n" +
	"\x11uptime_all_epochs\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\x0fuptimeAllEpochs\x12.\n" +
	"\x13hot_restart_version\x18\x05 \x01(\tR\x11hotRestartVersion\x12T\n" +
	"\x14command_line_options\x18\x06 \x01(\v2\".envoy.admin.v3.CommandLineOptionsR\x12commandLineOptions\x12.\n" +
	"\x04node\x18\a \x01(\v2\x1a.envoy.config.core.v3.NodeR\x04node\"G\n" +
	"\x05State\x12\b\n" +
	"\x04LIVE\x10\x00\x12\f\n" +
	"\bDRAINING\x10\x01\x12\x14\n" +
	"\x10PRE_INITIALIZING\x10\x02\x12\x10\n" +
	"\fINITIALIZING\x10\x03:%\x9aň\x1e \n" +
	"\x1eenvoy.admin.v2alpha.ServerInfo\"\x90\x10\n" +
	"\x12CommandLineOptions\x12\x17\n" +
	"\abase_id\x18\x01 \x01(\x04R\x06baseId\x12-\n" +
	"\x13use_dynamic_base_id\x18\x1f \x01(\bR\x10useDynamicBaseId\x12?\n" +
	"\x1dskip_hot_restart_on_no_parent\x18' \x01(\bR\x18skipHotRestartOnNoParent\x12@\n" +
	"\x1dskip_hot_restart_parent_stats\x18( \x01(\bR\x19skipHotRestartParentStats\x12 \n" +
	"\fbase_id_path\x18  \x01(\tR\n" +
	"baseIdPath\x12 \n" +
	"\vconcurrency\x18\x02 \x01(\rR\vconcurrency\x12\x1f\n" +
	"\vconfig_path\x18\x03 \x01(\tR\n" +
	"configPath\x12\x1f\n" +
	"\vconfig_yaml\x18\x04 \x01(\tR\n" +
	"configYaml\x12=\n" +
	"\x1ballow_unknown_static_fields\x18\x05 \x01(\bR\x18allowUnknownStaticFields\x12A\n" +
	"\x1dreject_unknown_dynamic_fields\x18\x1a \x01(\bR\x1arejectUnknownDynamicFields\x12A\n" +
	"\x1dignore_unknown_dynamic_fields\x18\x1e \x01(\bR\x1aignoreUnknownDynamicFields\x120\n" +
	"\x14skip_deprecated_logs\x18) \x01(\bR\x12skipDeprecatedLogs\x12,\n" +
	"\x12admin_address_path\x18\x06 \x01(\tR\x10adminAddressPath\x12e\n" +
	"\x18local_address_ip_version\x18\a \x01(\x0e2,.envoy.admin.v3.CommandLineOptions.IpVersionR\x15localAddressIpVersion\x12\x1b\n" +
	"\tlog_level\x18\b \x01(\tR\blogLevel\x12.\n" +
	"\x13component_log_level\x18\t \x01(\tR\x11componentLogLevel\x12\x1d\n" +
	"\n" +
	"log_format\x18\n" +
	" \x01(\tR\tlogFormat\x12,\n" +
	"\x12log_format_escaped\x18\x1b \x01(\bR\x10logFormatEscaped\x12\x19\n" +
	"\blog_path\x18\v \x01(\tR\alogPath\x12'\n" +
	"\x0fservice_cluster\x18\r \x01(\tR\x0eserviceCluster\x12!\n" +
	"\fservice_node\x18\x0e \x01(\tR\vserviceNode\x12!\n" +
	"\fservice_zone\x18\x0f \x01(\tR\vserviceZone\x12I\n" +
	"\x13file_flush_interval\x18\x10 \x01(\v2\x19.google.protobuf.DurationR\x11fileFlushInterval\x128\n" +
	"\n" +
	"drain_time\x18\x11 \x01(\v2\x19.google.protobuf.DurationR\tdrainTime\x12W\n" +
	"\x0edrain_strategy\x18! \x01(\x0e20.envoy.admin.v3.CommandLineOptions.DrainStrategyR\rdrainStrategy\x12K\n" +
	"\x14parent_shutdown_time\x18\x12 \x01(\v2\x19.google.protobuf.DurationR\x12parentShutdownTime\x12;\n" +
	"\x04mode\x18\x13 \x01(\x0e2'.envoy.admin.v3.CommandLineOptions.ModeR\x04mode\x12.\n" +
	"\x13disable_hot_restart\x18\x16 \x01(\bR\x11disableHotRestart\x120\n" +
	"\x14enable_mutex_tracing\x18\x17 \x01(\bR\x12enableMutexTracing\x12#\n" +
	"\rrestart_epoch\x18\x18 \x01(\rR\frestartEpoch\x12%\n" +
	"\x0ecpuset_threads\x18\x19 \x01(\bR\rcpusetThreads\x12/\n" +
	"\x13disabled_extensions\x18\x1c \x03(\tR\x12disabledExtensions\x129\n" +
	"\x19enable_fine_grain_logging\x18\" \x01(\bR\x16enableFineGrainLogging\x12\x1f\n" +
	"\vsocket_path\x18# \x01(\tR\n" +
	"socketPath\x12\x1f\n" +
	"\vsocket_mode\x18$ \x01(\rR\n" +
	"socketMode\x12(\n" +
	"\x10enable_core_dump\x18% \x01(\bR\x0eenableCoreDump\x12\x1b\n" +
	"\tstats_tag\x18& \x03(\tR\bstatsTag\"\x1b\n" +
	"\tIpVersion\x12\x06\n" +
	"\x02v4\x10\x00\x12\x06\n" +
	"\x02v6\x10\x01\"-\n" +
	"\x04Mode\x12\t\n" +
	"\x05Serve\x10\x00\x12\f\n" +
	"\bValidate\x10\x01\x12\f\n" +
	"\bInitOnly\x10\x02\"+\n" +
	"\rDrainStrategy\x12\v\n" +
	"\aGradual\x10\x00\x12\r\n" +
	"\tImmediate\x10\x01:-\x9aň\x1e(\n" +
	"&envoy.admin.v2alpha.CommandLineOptionsJ\x04\b\f\x10\rJ\x04\b\x14\x10\x15J\x04\b\x15\x10\x16J\x04\b\x1d\x10\x1eR\tmax_statsR\x10max_obj_name_lenR\x11bootstrap_versionBx\xba\x80\xc8\xd1\x06\x02\x10\x02\n" +
	"\x1cio.envoyproxy.envoy.admin.v3B\x0fServerInfoProtoP\x01Z=github.com/envoyproxy/go-control-plane/envoy/admin/v3;adminv3b\x06proto3"

var (
	file_envoy_admin_v3_server_info_proto_rawDescOnce sync.Once
	file_envoy_admin_v3_server_info_proto_rawDescData []byte
)

func file_envoy_admin_v3_server_info_proto_rawDescGZIP() []byte {
	file_envoy_admin_v3_server_info_proto_rawDescOnce.Do(func() {
		file_envoy_admin_v3_server_info_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_admin_v3_server_info_proto_rawDesc), len(file_envoy_admin_v3_server_info_proto_rawDesc)))
	})
	return file_envoy_admin_v3_server_info_proto_rawDescData
}

var file_envoy_admin_v3_server_info_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_envoy_admin_v3_server_info_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_envoy_admin_v3_server_info_proto_goTypes = []any{
	(ServerInfo_State)(0),                 // 0: envoy.admin.v3.ServerInfo.State
	(CommandLineOptions_IpVersion)(0),     // 1: envoy.admin.v3.CommandLineOptions.IpVersion
	(CommandLineOptions_Mode)(0),          // 2: envoy.admin.v3.CommandLineOptions.Mode
	(CommandLineOptions_DrainStrategy)(0), // 3: envoy.admin.v3.CommandLineOptions.DrainStrategy
	(*ServerInfo)(nil),                    // 4: envoy.admin.v3.ServerInfo
	(*CommandLineOptions)(nil),            // 5: envoy.admin.v3.CommandLineOptions
	(*durationpb.Duration)(nil),           // 6: google.protobuf.Duration
	(*v3.Node)(nil),                       // 7: envoy.config.core.v3.Node
}
var file_envoy_admin_v3_server_info_proto_depIdxs = []int32{
	0,  // 0: envoy.admin.v3.ServerInfo.state:type_name -> envoy.admin.v3.ServerInfo.State
	6,  // 1: envoy.admin.v3.ServerInfo.uptime_current_epoch:type_name -> google.protobuf.Duration
	6,  // 2: envoy.admin.v3.ServerInfo.uptime_all_epochs:type_name -> google.protobuf.Duration
	5,  // 3: envoy.admin.v3.ServerInfo.command_line_options:type_name -> envoy.admin.v3.CommandLineOptions
	7,  // 4: envoy.admin.v3.ServerInfo.node:type_name -> envoy.config.core.v3.Node
	1,  // 5: envoy.admin.v3.CommandLineOptions.local_address_ip_version:type_name -> envoy.admin.v3.CommandLineOptions.IpVersion
	6,  // 6: envoy.admin.v3.CommandLineOptions.file_flush_interval:type_name -> google.protobuf.Duration
	6,  // 7: envoy.admin.v3.CommandLineOptions.drain_time:type_name -> google.protobuf.Duration
	3,  // 8: envoy.admin.v3.CommandLineOptions.drain_strategy:type_name -> envoy.admin.v3.CommandLineOptions.DrainStrategy
	6,  // 9: envoy.admin.v3.CommandLineOptions.parent_shutdown_time:type_name -> google.protobuf.Duration
	2,  // 10: envoy.admin.v3.CommandLineOptions.mode:type_name -> envoy.admin.v3.CommandLineOptions.Mode
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_envoy_admin_v3_server_info_proto_init() }
func file_envoy_admin_v3_server_info_proto_init() {
	if File_envoy_admin_v3_server_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_admin_v3_server_info_proto_rawDesc), len(file_envoy_admin_v3_server_info_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_admin_v3_server_info_proto_goTypes,
		DependencyIndexes: file_envoy_admin_v3_server_info_proto_depIdxs,
		EnumInfos:         file_envoy_admin_v3_server_info_proto_enumTypes,
		MessageInfos:      file_envoy_admin_v3_server_info_proto_msgTypes,
	}.Build()
	File_envoy_admin_v3_server_info_proto = out.File
	file_envoy_admin_v3_server_info_proto_goTypes = nil
	file_envoy_admin_v3_server_info_proto_depIdxs = nil
}
