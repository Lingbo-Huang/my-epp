// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: envoy/admin/v2alpha/memory.proto

package v2alpha

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Proto representation of the internal memory consumption of an Envoy instance. These represent
// values extracted from an internal TCMalloc instance. For more information, see the section of the
// docs entitled ["Generic Tcmalloc Status"](https://gperftools.github.io/gperftools/tcmalloc.html).
// [#next-free-field: 7]
type Memory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of bytes allocated by the heap for Envoy. This is an alias for
	// `generic.current_allocated_bytes`.
	Allocated uint64 `protobuf:"varint,1,opt,name=allocated,proto3" json:"allocated,omitempty"`
	// The number of bytes reserved by the heap but not necessarily allocated. This is an alias for
	// `generic.heap_size`.
	HeapSize uint64 `protobuf:"varint,2,opt,name=heap_size,json=heapSize,proto3" json:"heap_size,omitempty"`
	// The number of bytes in free, unmapped pages in the page heap. These bytes always count towards
	// virtual memory usage, and depending on the OS, typically do not count towards physical memory
	// usage. This is an alias for `tcmalloc.pageheap_unmapped_bytes`.
	PageheapUnmapped uint64 `protobuf:"varint,3,opt,name=pageheap_unmapped,json=pageheapUnmapped,proto3" json:"pageheap_unmapped,omitempty"`
	// The number of bytes in free, mapped pages in the page heap. These bytes always count towards
	// virtual memory usage, and unless the underlying memory is swapped out by the OS, they also
	// count towards physical memory usage. This is an alias for `tcmalloc.pageheap_free_bytes`.
	PageheapFree uint64 `protobuf:"varint,4,opt,name=pageheap_free,json=pageheapFree,proto3" json:"pageheap_free,omitempty"`
	// The amount of memory used by the TCMalloc thread caches (for small objects). This is an alias
	// for `tcmalloc.current_total_thread_cache_bytes`.
	TotalThreadCache uint64 `protobuf:"varint,5,opt,name=total_thread_cache,json=totalThreadCache,proto3" json:"total_thread_cache,omitempty"`
	// The number of bytes of the physical memory usage by the allocator. This is an alias for
	// `generic.total_physical_bytes`.
	TotalPhysicalBytes uint64 `protobuf:"varint,6,opt,name=total_physical_bytes,json=totalPhysicalBytes,proto3" json:"total_physical_bytes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Memory) Reset() {
	*x = Memory{}
	mi := &file_envoy_admin_v2alpha_memory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_envoy_admin_v2alpha_memory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_envoy_admin_v2alpha_memory_proto_rawDescGZIP(), []int{0}
}

func (x *Memory) GetAllocated() uint64 {
	if x != nil {
		return x.Allocated
	}
	return 0
}

func (x *Memory) GetHeapSize() uint64 {
	if x != nil {
		return x.HeapSize
	}
	return 0
}

func (x *Memory) GetPageheapUnmapped() uint64 {
	if x != nil {
		return x.PageheapUnmapped
	}
	return 0
}

func (x *Memory) GetPageheapFree() uint64 {
	if x != nil {
		return x.PageheapFree
	}
	return 0
}

func (x *Memory) GetTotalThreadCache() uint64 {
	if x != nil {
		return x.TotalThreadCache
	}
	return 0
}

func (x *Memory) GetTotalPhysicalBytes() uint64 {
	if x != nil {
		return x.TotalPhysicalBytes
	}
	return 0
}

var File_envoy_admin_v2alpha_memory_proto protoreflect.FileDescriptor

const file_envoy_admin_v2alpha_memory_proto_rawDesc = "" +
	"\n" +
	" envoy/admin/v2alpha/memory.proto\x12\x13envoy.admin.v2alpha\x1a\x1dudpa/annotations/status.proto\"\xf5\x01\n" +
	"\x06Memory\x12\x1c\n" +
	"\tallocated\x18\x01 \x01(\x04R\tallocated\x12\x1b\n" +
	"\theap_size\x18\x02 \x01(\x04R\bheapSize\x12+\n" +
	"\x11pageheap_unmapped\x18\x03 \x01(\x04R\x10pageheapUnmapped\x12#\n" +
	"\rpageheap_free\x18\x04 \x01(\x04R\fpageheapFree\x12,\n" +
	"\x12total_thread_cache\x18\x05 \x01(\x04R\x10totalThreadCache\x120\n" +
	"\x14total_physical_bytes\x18\x06 \x01(\x04R\x12totalPhysicalBytesBv\xba\x80\xc8\xd1\x06\x02\x10\x01\n" +
	"!io.envoyproxy.envoy.admin.v2alphaB\vMemoryProtoP\x01Z:github.com/envoyproxy/go-control-plane/envoy/admin/v2alphab\x06proto3"

var (
	file_envoy_admin_v2alpha_memory_proto_rawDescOnce sync.Once
	file_envoy_admin_v2alpha_memory_proto_rawDescData []byte
)

func file_envoy_admin_v2alpha_memory_proto_rawDescGZIP() []byte {
	file_envoy_admin_v2alpha_memory_proto_rawDescOnce.Do(func() {
		file_envoy_admin_v2alpha_memory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envoy_admin_v2alpha_memory_proto_rawDesc), len(file_envoy_admin_v2alpha_memory_proto_rawDesc)))
	})
	return file_envoy_admin_v2alpha_memory_proto_rawDescData
}

var file_envoy_admin_v2alpha_memory_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envoy_admin_v2alpha_memory_proto_goTypes = []any{
	(*Memory)(nil), // 0: envoy.admin.v2alpha.Memory
}
var file_envoy_admin_v2alpha_memory_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envoy_admin_v2alpha_memory_proto_init() }
func file_envoy_admin_v2alpha_memory_proto_init() {
	if File_envoy_admin_v2alpha_memory_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envoy_admin_v2alpha_memory_proto_rawDesc), len(file_envoy_admin_v2alpha_memory_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envoy_admin_v2alpha_memory_proto_goTypes,
		DependencyIndexes: file_envoy_admin_v2alpha_memory_proto_depIdxs,
		MessageInfos:      file_envoy_admin_v2alpha_memory_proto_msgTypes,
	}.Build()
	File_envoy_admin_v2alpha_memory_proto = out.File
	file_envoy_admin_v2alpha_memory_proto_goTypes = nil
	file_envoy_admin_v2alpha_memory_proto_depIdxs = nil
}
