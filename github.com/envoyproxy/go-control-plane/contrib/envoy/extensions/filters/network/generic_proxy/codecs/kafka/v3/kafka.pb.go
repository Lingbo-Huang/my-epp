// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: contrib/envoy/extensions/filters/network/generic_proxy/codecs/kafka/v3/kafka.proto

package kafkav3

import (
	_ "github.com/Lingbo-Huang/my-epp/envoy/api/udpa/annotations"
	_ "github.com/cncf/xds/go/xds/annotations/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration for Kafka codec. This codec gives the generic proxy the ability to proxy
// Kafka traffic. But note any route configuration for Kafka traffic is not supported yet.
// The generic proxy can only used to generate logs or metrics for Kafka traffic but cannot
// do matching or routing.
//
// .. note::
//
//	The codec can currently only be used in the sidecar mode. And to ensure the codec works
//	properly, please make sure the following conditions are met:
//
//	1. The generic proxy must be configured with a wildcard route that matches all traffic.
//	2. The target cluster must be configured as a original destination cluster.
//	3. The :ref:`bind_upstream_connection
//	   <envoy_v3_api_field_extensions.filters.network.generic_proxy.router.v3.Router.bind_upstream_connection>`
//	   of generic proxy router must be set to true to ensure same upstream connection is used
//	   for all traffic from same downstream connection.
type KafkaCodecConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KafkaCodecConfig) Reset() {
	*x = KafkaCodecConfig{}
	mi := &file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KafkaCodecConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaCodecConfig) ProtoMessage() {}

func (x *KafkaCodecConfig) ProtoReflect() protoreflect.Message {
	mi := &file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaCodecConfig.ProtoReflect.Descriptor instead.
func (*KafkaCodecConfig) Descriptor() ([]byte, []int) {
	return file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescGZIP(), []int{0}
}

var File_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto protoreflect.FileDescriptor

const file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDesc = "" +
	"\n" +
	"Rcontrib/envoy/extensions/filters/network/generic_proxy/codecs/kafka/v3/kafka.proto\x12>envoy.extensions.filters.network.generic_proxy.codecs.kafka.v3\x1a\x1fxds/annotations/v3/status.proto\x1a\x1dudpa/annotations/status.proto\"\x12\n" +
	"\x10KafkaCodecConfigB\xe3\x01\xba\x80\xc8\xd1\x06\x02\x10\x02\xd2Æ¤\xe1\x06\x02\b\x01\n" +
	"Lio.envoyproxy.envoy.extensions.filters.network.generic_proxy.codecs.kafka.v3B\n" +
	"KafkaProtoP\x01Zugithub.com/envoyproxy/go-control-plane/contrib/envoy/extensions/filters/network/generic_proxy/codecs/kafka/v3;kafkav3b\x06proto3"

var (
	file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescOnce sync.Once
	file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescData []byte
)

func file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescGZIP() []byte {
	file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescOnce.Do(func() {
		file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDesc), len(file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDesc)))
	})
	return file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDescData
}

var file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_goTypes = []any{
	(*KafkaCodecConfig)(nil), // 0: envoy.extensions.filters.network.generic_proxy.codecs.kafka.v3.KafkaCodecConfig
}
var file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_init()
}
func file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_init() {
	if File_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDesc), len(file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_goTypes,
		DependencyIndexes: file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_depIdxs,
		MessageInfos:      file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_msgTypes,
	}.Build()
	File_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto = out.File
	file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_goTypes = nil
	file_contrib_envoy_extensions_filters_network_generic_proxy_codecs_kafka_v3_kafka_proto_depIdxs = nil
}
